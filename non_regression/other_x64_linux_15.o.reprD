<Symbol 'test_compress' section='.text', type='function', bind='globl', size=300, address=0>
    ENDER False -- NXT .L0000001F
    CFG .L0000001F
    GRAPH_NXT .L0000001F
    GRAPH_PRV .L000000BA.startup
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>0 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2 [None]movq      %rdi, %rbp
	 R['rdi', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>5 [None]movq      %rdx, %rbx
	 R['rdx', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>8 [None]subq      $24, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>12 [None]movq      %rsi, 8(%rsp)
	 R['rip', 'rsi', 'rsp'] W['MEM', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>17 [None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdx', 'rflags', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>24 [None]movq      %rcx, (%rsp)
	 R['rcx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>28 [None]movq      %rsi, %rcx
	 R['rip', 'rsi'] W['rcx', 'rip']
	 D['rcx', 'rdx', 'rflags']
	 STACK:{}:(0, 8)

<Symbol '.L0000001F' section='.text', address=31>
    ENDER False -- NXT .L00000036
    CFG .L0000001F
    CFG .L00000036
    GRAPH_NXT .L0000001F
    GRAPH_NXT .L00000036
    GRAPH_PRV .L0000001F
    GRAPH_PRV test_compress
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>31 [None]movl      (%rcx), %edx
	 R['MEM', 'rcx', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>33 [None]addq      $4, %rcx
	 R['rcx', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>37 [None]leal      -16843009(%rdx), %eax
	 R['MEM', 'rax', 'rdx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>43 [None]notl      %edx
	 R['rdx', 'rip'] W['rdx', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>45 [None]andl      %edx, %eax
	 R['rax', 'rdx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>47 [None]andl      $-2139062144, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>52 [jcc]je        .L0000001F
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L0000001F' section='.text', address=31>]

<Symbol '.L00000036' section='.text', address=54>
    ENDER False -- NXT .L0000006F
    CFG compress@PLT
    GRAPH_NXT compress@PLT
    GRAPH_PRV .L0000001F
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>54 [None]movl      %eax, %edx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>56 [None]shrl      $16, %edx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>59 [None]testl     $32896, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>64 [None]cmove     %edx, %eax
	 R['rax', 'rdx', 'rflags', 'rip'] W['rax', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>67 [None]leaq      2(%rcx), %rdx
	 R['MEM', 'rcx', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>71 [None]movl      %eax, %edi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>73 [None]cmove     %rdx, %rcx
	 R['rcx', 'rdx', 'rflags', 'rip'] W['rcx', 'rip']
	 D[]
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>77 [None]addb      %al, %dil
	 R['rax', 'rdi', 'rip'] W['rdi', 'rflags', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>80 [None]leaq      hello(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>87 [None]sbbq      $3, %rcx
	 R['rcx', 'rflags', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>91 [None]movq      %rbp, %rdi
	 R['rbp', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>94 [None]subq      %rsi, %rcx
	 R['rcx', 'rip', 'rsi'] W['rcx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>97 [None]leaq      8(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:{'%rsi': [8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>102 [None]addq      $1, %rcx
	 R['rcx', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rsi': [8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>106 [sub]call      compress@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rsi': [8]}:(0, 8)
	 dst=[<Symbol 'compress@PLT' >]

<Symbol '.L0000006F' section='.text', address=111>
    ENDER False -- NXT .L00000073
    CFG .L000000CB
    CFG .L00000073
    GRAPH_NXT .L00000073
    GRAPH_NXT .L000000CB
    GRAPH_PRV compress@PLT
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>111 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rsi': [8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>113 [jcc]jne       .L000000CB
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rsi': [8]}:(0, 8)
	 dst=[<Symbol '.L000000CB' section='.text', address=203>]

<Symbol '.L00000073' section='.text', address=115>
    ENDER False -- NXT .L00000093
    CFG uncompress@PLT
    GRAPH_NXT uncompress@PLT
    GRAPH_PRV .L0000006F
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>115 [None]movq      8(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>120 [None]movq      $28542640608928103, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>130 [None]movq      %rsp, %rsi
	 R['rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>133 [None]movq      %rax, (%rbx)
	 R['rax', 'rbx', 'rip'] W['MEM', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>136 [None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>139 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>142 [sub]call      uncompress@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rsi': [0]}:(0, 8)
	 dst=[<Symbol 'uncompress@PLT' >]

<Symbol '.L00000093' section='.text', address=147>
    ENDER False -- NXT .L0000009B
    CFG .L00000120
    CFG .L0000009B
    GRAPH_NXT .L0000009B
    GRAPH_NXT .L00000120
    GRAPH_PRV uncompress@PLT
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>147 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>149 [jcc]jne       .L00000120
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rsi': [0]}:(0, 8)
	 dst=[<Symbol '.L00000120' section='.text', address=288>]

<Symbol '.L0000009B' section='.text', address=155>
    ENDER False -- NXT .L000000AA
    CFG strcmp@PLT
    GRAPH_NXT strcmp@PLT
    GRAPH_PRV .L00000093
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>155 [None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>162 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>165 [sub]call      strcmp@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'strcmp@PLT' >]

<Symbol '.L000000AA' section='.text', address=170>
    ENDER False -- NXT .L000000AE
    CFG .L000000F9
    CFG .L000000AE
    GRAPH_NXT .L000000AE
    GRAPH_NXT .L000000F9
    GRAPH_PRV strcmp@PLT
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>170 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>172 [jcc]jne       .L000000F9
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L000000F9' section='.text', address=249>]

<Symbol '.L000000AE' section='.text', address=174>
    ENDER False -- NXT .L000000C4
    CFG __printf_chk@PLT
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV .L000000AA
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>174 [None]leaq      .LC4(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>181 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>184 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>189 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>191 [sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '__printf_chk@PLT' >]

<Symbol '.L000000C4' section='.text', address=196>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L000000CD.startup
    GRAPH_PRV __printf_chk@PLT
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>196 [None]addq      $24, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rbp', 'rbx', 'rflags']
	 STACK:{}:(-24, -16)
'X64_AMOCO.InstructionDEAD'>200 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['rbp', 'rbx']
	 STACK:{}:(-32, -24)
'X64_AMOCO.InstructionDEAD'>201 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['rbp']
	 STACK:{}:(-40, -32)
'X64_AMOCO.InstructionDEAD'>202 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{}:(-40, -32)
	 dst=[None]

<Symbol '.L000000CB' section='.text', address=203>
    ENDER False -- NXT .L000000D5
    CFG .L000000D5
    GRAPH_NXT .L000000D5
    GRAPH_PRV .L0000006F
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>203 [None]leaq      .LC0(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>210 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [8]}:(0, 8)

<Symbol '.L000000D5' section='.text', address=213>
    ENDER False -- NXT .L000000EF
    CFG __fprintf_chk@PLT
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L000000CB
    GRAPH_PRV .L00000120
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>213 [None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [0, 8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>220 [None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rsi': [0, 8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>227 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>232 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>234 [sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '__fprintf_chk@PLT' >]

<Symbol '.L000000EF' section='.text', address=239>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV __fprintf_chk@PLT
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>239 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>244 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L000000F9' section='.text', address=249>
    ENDER False -- NXT .L00000116
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L000000AA
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>249 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>256 [None]leaq      .LC3(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>263 [None]movl      $15, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>268 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>273 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L00000116' section='.text', address=278>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV fwrite@PLT
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>278 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>283 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00000120' section='.text', address=288>
    ENDER True -- NXT None
    CFG .L000000D5
    GRAPH_NXT .L000000D5
    GRAPH_PRV .L00000093
-- STACK00 ['.L000000CD.startup']
'X64_AMOCO.InstructionDEAD'>288 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>291 [None]leaq      .LC2(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>298 [jmp]jmp       .L000000D5
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [0]}:(0, 8)
	 dst=[<Symbol '.L000000D5' section='.text', address=213>]

<Symbol '.L0000012C' section='.text', type='padding', address=300>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>300 [None].p2align 3

<Symbol 'test_gzio' section='.text', type='function', bind='globl', size=948, address=304>
    ENDER False -- NXT .L0000015F
    CFG .L0000015F
    GRAPH_NXT .L0000015F
    GRAPH_PRV .L000000DE.startup
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>304 [None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>306 [None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>308 [None]movq      %rdx, %r13
	 R['rdx', 'rip'] W['r13', 'rip']
	 D['r13', 'rax', 'rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>311 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>313 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>314 [None]movq      %rsi, %r12
	 R['rip', 'rsi'] W['r12', 'rip']
	 D['r12', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>317 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>318 [None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rbx', 'rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>325 [None]movq      %rdi, %rbx
	 R['rdi', 'rip'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>328 [None]subq      $16, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>332 [None]movq      %rsi, %rdx
	 R['rip', 'rsi'] W['rdx', 'rip']
	 D['rax', 'rcx', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>335 [None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>344 [None]movq      %rax, 8(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>349 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rcx']
	 STACK:{}:(8,)

<Symbol '.L0000015F' section='.text', address=351>
    ENDER False -- NXT .L00000176
    CFG .L0000015F
    CFG .L00000176
    GRAPH_NXT .L0000015F
    GRAPH_NXT .L00000176
    GRAPH_PRV .L0000015F
    GRAPH_PRV test_gzio
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>351 [None]movl      (%rdx), %ecx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>353 [None]addq      $4, %rdx
	 R['rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>357 [None]leal      -16843009(%rcx), %eax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>363 [None]notl      %ecx
	 R['rcx', 'rip'] W['rcx', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>365 [None]andl      %ecx, %eax
	 R['rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>367 [None]andl      $-2139062144, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>372 [jcc]je        .L0000015F
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L0000015F' section='.text', address=351>]

<Symbol '.L00000176' section='.text', address=374>
    ENDER False -- NXT .L000001A8
    CFG gzopen@PLT
    GRAPH_NXT gzopen@PLT
    GRAPH_PRV .L0000015F
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>374 [None]movl      %eax, %ecx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>376 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>379 [None]shrl      $16, %ecx
	 R['rcx', 'rflags', 'rip'] W['rcx', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>382 [None]testl     $32896, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>387 [None]cmove     %ecx, %eax
	 R['rax', 'rcx', 'rflags', 'rip'] W['rax', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>390 [None]leaq      2(%rdx), %rcx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rcx']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>394 [None]cmove     %rcx, %rdx
	 R['rcx', 'rdx', 'rflags', 'rip'] W['rdx', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>398 [None]movl      %eax, %ecx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>400 [None]addb      %al, %cl
	 R['rax', 'rcx', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>402 [None]sbbq      $3, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>406 [None]subq      %rsi, %rdx
	 R['rdx', 'rip', 'rsi'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>409 [None]leaq      .LC5(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>416 [None]leal      1(%rdx), %ebp
	 R['MEM', 'rbp', 'rdx', 'rip'] W['rbp', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>419 [sub]call      gzopen@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzopen@PLT' >]

<Symbol '.L000001A8' section='.text', address=424>
    ENDER False -- NXT .L000001B4
    CFG .L00000383
    CFG .L000001B4
    GRAPH_NXT .L000001B4
    GRAPH_NXT .L00000383
    GRAPH_PRV gzopen@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>424 [None]testq     %rax, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>427 [None]movq      %rax, %r14
	 R['rax', 'rip'] W['r14', 'rip']
	 D['r14']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>430 [jcc]je        .L00000383
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L00000383' section='.text', address=899>]

<Symbol '.L000001B4' section='.text', address=436>
    ENDER False -- NXT .L000001C1
    CFG gzputc@PLT
    GRAPH_NXT gzputc@PLT
    GRAPH_PRV .L000001A8
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>436 [None]movl      $104, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>441 [None]movq      %rax, %rdi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>444 [sub]call      gzputc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzputc@PLT' >]

<Symbol '.L000001C1' section='.text', address=449>
    ENDER False -- NXT .L000001D0
    CFG gzputs@PLT
    GRAPH_NXT gzputs@PLT
    GRAPH_PRV gzputc@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>449 [None]leaq      .LC7(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>456 [None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>459 [sub]call      gzputs@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzputs@PLT' >]

<Symbol '.L000001D0' section='.text', address=464>
    ENDER False -- NXT .L000001D9
    CFG .L00000463
    CFG .L000001D9
    GRAPH_NXT .L000001D9
    GRAPH_NXT .L00000463
    GRAPH_PRV gzputs@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>464 [None]cmpl      $4, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>467 [jcc]jne       .L00000463
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L00000463' section='.text', address=1123>]

<Symbol '.L000001D9' section='.text', address=473>
    ENDER False -- NXT .L000001F1
    CFG gzprintf@PLT
    GRAPH_NXT gzprintf@PLT
    GRAPH_PRV .L000001D0
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>473 [None]leaq      .LC9(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>480 [None]leaq      .LC10(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>487 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>489 [None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>492 [sub]call      gzprintf@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzprintf@PLT' >]

<Symbol '.L000001F1' section='.text', address=497>
    ENDER False -- NXT .L000001FA
    CFG .L0000042F
    CFG .L000001FA
    GRAPH_NXT .L000001FA
    GRAPH_NXT .L0000042F
    GRAPH_PRV gzprintf@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>497 [None]cmpl      $8, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>500 [jcc]jne       .L0000042F
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L0000042F' section='.text', address=1071>]

<Symbol '.L000001FA' section='.text', address=506>
    ENDER False -- NXT .L0000020C
    CFG gzseek@PLT
    GRAPH_NXT gzseek@PLT
    GRAPH_PRV .L000001F1
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>506 [None]movl      $1, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>511 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>516 [None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>519 [sub]call      gzseek@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzseek@PLT' >]

<Symbol '.L0000020C' section='.text', address=524>
    ENDER False -- NXT .L00000214
    CFG gzclose@PLT
    GRAPH_NXT gzclose@PLT
    GRAPH_PRV gzseek@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>524 [None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>527 [sub]call      gzclose@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzclose@PLT' >]

<Symbol '.L00000214' section='.text', address=532>
    ENDER False -- NXT .L00000223
    CFG gzopen@PLT
    GRAPH_NXT gzopen@PLT
    GRAPH_PRV gzclose@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>532 [None]leaq      .LC12(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>539 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>542 [sub]call      gzopen@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzopen@PLT' >]

<Symbol '.L00000223' section='.text', address=547>
    ENDER False -- NXT .L0000022F
    CFG .L00000383
    CFG .L0000022F
    GRAPH_NXT .L0000022F
    GRAPH_NXT .L00000383
    GRAPH_PRV gzopen@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>547 [None]testq     %rax, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rbx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>550 [None]movq      %rax, %rbx
	 R['rax', 'rip'] W['rbx', 'rip']
	 D['rbx']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>553 [jcc]je        .L00000383
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L00000383' section='.text', address=899>]

<Symbol '.L0000022F' section='.text', address=559>
    ENDER False -- NXT .L0000024B
    CFG gzread@PLT
    GRAPH_NXT gzread@PLT
    GRAPH_PRV .L00000223
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>559 [None]movq      $28542640608928103, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>569 [None]movl      %r13d, %edx
	 R['r13', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>572 [None]movq      %r12, %rsi
	 R['r12', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>575 [None]movq      %rax, (%r12)
	 R['r12', 'rax', 'rip'] W['MEM', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>579 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>582 [sub]call      gzread@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzread@PLT' >]

<Symbol '.L0000024B' section='.text', address=587>
    ENDER False -- NXT .L00000253
    CFG .L00000488
    CFG .L00000253
    GRAPH_NXT .L00000253
    GRAPH_NXT .L00000488
    GRAPH_PRV gzread@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>587 [None]cmpl      %ebp, %eax
	 R['rax', 'rbp', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>589 [jcc]jne       .L00000488
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L00000488' section='.text', address=1160>]

<Symbol '.L00000253' section='.text', address=595>
    ENDER False -- NXT .L00000262
    CFG strcmp@PLT
    GRAPH_NXT strcmp@PLT
    GRAPH_PRV .L0000024B
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>595 [None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>602 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>605 [sub]call      strcmp@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'strcmp@PLT' >]

<Symbol '.L00000262' section='.text', address=610>
    ENDER False -- NXT .L0000026A
    CFG .L0000047C
    CFG .L0000026A
    GRAPH_NXT .L0000026A
    GRAPH_NXT .L0000047C
    GRAPH_PRV strcmp@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>610 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>612 [jcc]jne       .L0000047C
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L0000047C' section='.text', address=1148>]

<Symbol '.L0000026A' section='.text', address=618>
    ENDER False -- NXT .L00000280
    CFG __printf_chk@PLT
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV .L00000262
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>618 [None]leaq      .LC15(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>625 [None]movq      %r12, %rdx
	 R['r12', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>628 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>633 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>635 [sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '__printf_chk@PLT' >]

<Symbol '.L00000280' section='.text', address=640>
    ENDER False -- NXT .L00000294
    CFG gzseek@PLT
    GRAPH_NXT gzseek@PLT
    GRAPH_PRV __printf_chk@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>640 [None]movl      $1, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>645 [None]movq      $-8, %rsi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>652 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>655 [sub]call      gzseek@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzseek@PLT' >]

<Symbol '.L00000294' section='.text', address=660>
    ENDER False -- NXT .L000002A1
    CFG .L000003AA
    CFG .L000002A1
    GRAPH_NXT .L000002A1
    GRAPH_NXT .L000003AA
    GRAPH_PRV gzseek@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>660 [None]cmpq      $6, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rbp', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>664 [None]movq      %rax, %rbp
	 R['rax', 'rip'] W['rbp', 'rip']
	 D['rbp']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>667 [jcc]jne       .L000003AA
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L000003AA' section='.text', address=938>]

<Symbol '.L000002A1' section='.text', address=673>
    ENDER False -- NXT .L000002A9
    CFG gztell@PLT
    GRAPH_NXT gztell@PLT
    GRAPH_PRV .L00000294
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>673 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>676 [sub]call      gztell@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gztell@PLT' >]

<Symbol '.L000002A9' section='.text', address=681>
    ENDER False -- NXT .L000002B3
    CFG .L000003AA
    CFG .L000002B3
    GRAPH_NXT .L000002B3
    GRAPH_NXT .L000003AA
    GRAPH_PRV gztell@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>681 [None]cmpq      $6, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>685 [jcc]jne       .L000003AA
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L000003AA' section='.text', address=938>]

<Symbol '.L000002B3' section='.text', address=691>
    ENDER False -- NXT .L000002BD
    CFG .L00000370
    CFG .L000002BD
    GRAPH_NXT .L000002BD
    GRAPH_NXT .L00000370
    GRAPH_PRV .L000002A9
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>691 [None]movl      (%rbx), %eax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>693 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>695 [jcc]je        .L00000370
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L00000370' section='.text', address=880>]

<Symbol '.L000002BD' section='.text', address=701>
    ENDER False -- NXT .L000002D9
    CFG .L000002D9
    GRAPH_NXT .L000002D9
    GRAPH_PRV .L000002B3
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>701 [None]subl      $1, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>704 [None]addq      $1, 16(%rbx)
	 R['MEM', 'rbx', 'rip'] W['MEM', 'rflags', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>709 [None]movl      %eax, (%rbx)
	 R['rax', 'rbx', 'rip'] W['MEM', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>711 [None]movq      8(%rbx), %rax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rdx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>715 [None]leaq      1(%rax), %rdx
	 R['MEM', 'rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>719 [None]movq      %rdx, 8(%rbx)
	 R['rbx', 'rdx', 'rip'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>723 [None]cmpb      $32, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>726 [None]setne     %al
	 R['rax', 'rflags', 'rip'] W['rax', 'rip']
	 D[]
	 STACK:{}:(8,)

<Symbol '.L000002D9' section='.text', address=729>
    ENDER False -- NXT .L000002E1
    CFG .L00000408
    CFG .L000002E1
    GRAPH_NXT .L000002E1
    GRAPH_NXT .L00000408
    GRAPH_PRV .L000002BD
    GRAPH_PRV .L00000378
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>729 [None]testb     %al, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>731 [jcc]jne       .L00000408
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L00000408' section='.text', address=1032>]

<Symbol '.L000002E1' section='.text', address=737>
    ENDER False -- NXT .L000002EE
    CFG gzungetc@PLT
    GRAPH_NXT gzungetc@PLT
    GRAPH_PRV .L000002D9
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>737 [None]movq      %rbx, %rsi
	 R['rbx', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>740 [None]movl      $32, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>745 [sub]call      gzungetc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzungetc@PLT' >]

<Symbol '.L000002EE' section='.text', address=750>
    ENDER False -- NXT .L000002F7
    CFG .L000003E1
    CFG .L000002F7
    GRAPH_NXT .L000002F7
    GRAPH_NXT .L000003E1
    GRAPH_PRV gzungetc@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>750 [None]cmpl      $32, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>753 [jcc]jne       .L000003E1
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L000003E1' section='.text', address=993>]

<Symbol '.L000002F7' section='.text', address=759>
    ENDER False -- NXT .L00000305
    CFG gzgets@PLT
    GRAPH_NXT gzgets@PLT
    GRAPH_PRV .L000002EE
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>759 [None]movl      %r13d, %edx
	 R['r13', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>762 [None]movq      %r12, %rsi
	 R['r12', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>765 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>768 [sub]call      gzgets@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzgets@PLT' >]

<Symbol '.L00000305' section='.text', address=773>
    ENDER False -- NXT .L0000030D
    CFG strlen@PLT
    GRAPH_NXT strlen@PLT
    GRAPH_PRV gzgets@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>773 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>776 [sub]call      strlen@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'strlen@PLT' >]

<Symbol '.L0000030D' section='.text', address=781>
    ENDER False -- NXT .L00000317
    CFG .L000004C8
    CFG .L00000317
    GRAPH_NXT .L00000317
    GRAPH_NXT .L000004C8
    GRAPH_PRV strlen@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>781 [None]cmpq      $7, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>785 [jcc]jne       .L000004C8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L000004C8' section='.text', address=1224>]

<Symbol '.L00000317' section='.text', address=791>
    ENDER False -- NXT .L00000326
    CFG strcmp@PLT
    GRAPH_NXT strcmp@PLT
    GRAPH_PRV .L0000030D
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>791 [None]leaq      hello+6(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>798 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>801 [sub]call      strcmp@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'strcmp@PLT' >]

<Symbol '.L00000326' section='.text', address=806>
    ENDER False -- NXT .L0000032E
    CFG .L000004A1
    CFG .L0000032E
    GRAPH_NXT .L0000032E
    GRAPH_NXT .L000004A1
    GRAPH_PRV strcmp@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>806 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>808 [jcc]jne       .L000004A1
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L000004A1' section='.text', address=1185>]

<Symbol '.L0000032E' section='.text', address=814>
    ENDER False -- NXT .L00000344
    CFG __printf_chk@PLT
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV .L00000326
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>814 [None]leaq      .LC21(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>821 [None]movq      %r12, %rdx
	 R['r12', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>824 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>829 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>831 [sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '__printf_chk@PLT' >]

<Symbol '.L00000344' section='.text', address=836>
    ENDER False -- NXT .L0000034C
    CFG gzclose@PLT
    GRAPH_NXT gzclose@PLT
    GRAPH_PRV __printf_chk@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>836 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>839 [sub]call      gzclose@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzclose@PLT' >]

<Symbol '.L0000034C' section='.text', address=844>
    ENDER False -- NXT .L00000360
    CFG .L000003DC
    CFG .L00000360
    GRAPH_NXT .L00000360
    GRAPH_NXT .L000003DC
    GRAPH_PRV gzclose@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>844 [None]movq      8(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>849 [None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>858 [jcc]jne       .L000003DC
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L000003DC' section='.text', address=988>]

<Symbol '.L00000360' section='.text', address=864>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L000000EB.startup
    GRAPH_PRV .L0000034C
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>864 [None]addq      $16, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx', 'rflags']
	 STACK:{}:(-8,)
'X64_AMOCO.InstructionDEAD'>868 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:(-16,)
'X64_AMOCO.InstructionDEAD'>869 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{}:(-24,)
'X64_AMOCO.InstructionDEAD'>870 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{}:(-32,)
'X64_AMOCO.InstructionDEAD'>872 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{}:(-40,)
'X64_AMOCO.InstructionDEAD'>874 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{}:(-48,)
'X64_AMOCO.InstructionDEAD'>876 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{}:(-48,)
	 dst=[None]

<Symbol '.L0000036D' section='.text', size=3, address=877>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>877 [None].p2align 3

<Symbol '.L00000370' section='.text', address=880>
    ENDER False -- NXT .L00000378
    CFG gzgetc@PLT
    GRAPH_NXT gzgetc@PLT
    GRAPH_PRV .L000002B3
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>880 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>883 [sub]call      gzgetc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzgetc@PLT' >]

<Symbol '.L00000378' section='.text', address=888>
    ENDER True -- NXT None
    CFG .L000002D9
    GRAPH_NXT .L000002D9
    GRAPH_PRV gzgetc@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>888 [None]cmpl      $32, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>891 [None]setne     %al
	 R['rax', 'rflags', 'rip'] W['rax', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>894 [jmp]jmp       .L000002D9
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{}:(8,)
	 dst=[<Symbol '.L000002D9' section='.text', address=729>]

<Symbol '.L00000383' section='.text', address=899>
    ENDER False -- NXT .L000003A0
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L000001A8
    GRAPH_PRV .L00000223
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>899 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>906 [None]leaq      .LC6(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>913 [None]movl      $13, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>918 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>923 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L000003A0' section='.text', address=928>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV fwrite@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>928 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>933 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L000003AA' section='.text', address=938>
    ENDER False -- NXT .L000003B2
    CFG gztell@PLT
    GRAPH_NXT gztell@PLT
    GRAPH_PRV .L00000294
    GRAPH_PRV .L000002A9
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>938 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>941 [sub]call      gztell@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gztell@PLT' >]

<Symbol '.L000003B2' section='.text', address=946>
    ENDER False -- NXT .L000003D2
    CFG __fprintf_chk@PLT
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV gztell@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>946 [None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>953 [None]leaq      .LC16(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['r8', 'rcx', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>960 [None]movq      %rax, %r8
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>963 [None]movq      %rbp, %rcx
	 R['rbp', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>966 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>971 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>973 [sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '__fprintf_chk@PLT' >]

<Symbol '.L000003D2' section='.text', address=978>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV __fprintf_chk@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>978 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>983 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L000003DC' section='.text', address=988>
    ENDER True -- NXT None
    CFG __stack_chk_fail@PLT
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV .L0000034C
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>988 [sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '__stack_chk_fail@PLT' >]

<Symbol '.L000003E1' section='.text', address=993>
    ENDER False -- NXT .L000003FE
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L000002EE
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>993 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1000 [None]leaq      .LC18(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1007 [None]movl      $15, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1012 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1017 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L000003FE' section='.text', address=1022>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV fwrite@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1022 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1027 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00000408' section='.text', address=1032>
    ENDER False -- NXT .L00000425
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L000002D9
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1032 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1039 [None]leaq      .LC17(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1046 [None]movl      $13, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1051 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1056 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L00000425' section='.text', address=1061>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV fwrite@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1061 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1066 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L0000042F' section='.text', address=1071>
    ENDER False -- NXT .L0000043C
    CFG gzerror@PLT
    GRAPH_NXT gzerror@PLT
    GRAPH_PRV .L000001F1
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1071 [None]leaq      4(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1076 [None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1079 [sub]call      gzerror@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol 'gzerror@PLT' >]

<Symbol '.L0000043C' section='.text', address=1084>
    ENDER False -- NXT .L00000446
    CFG .L00000446
    GRAPH_NXT .L00000446
    GRAPH_PRV gzerror@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1084 [None]leaq      .LC11(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1091 [None]movq      %rax, %rcx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)

<Symbol '.L00000446' section='.text', address=1094>
    ENDER False -- NXT .L00000459
    CFG __fprintf_chk@PLT
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L0000043C
    GRAPH_PRV .L00000470
    GRAPH_PRV .L0000047C
    GRAPH_PRV .L00000495
    GRAPH_PRV .L000004D5
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1094 [None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1101 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1106 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1108 [sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '__fprintf_chk@PLT' >]

<Symbol '.L00000459' section='.text', address=1113>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV __fprintf_chk@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1113 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1118 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00000463' section='.text', address=1123>
    ENDER False -- NXT .L00000470
    CFG gzerror@PLT
    GRAPH_NXT gzerror@PLT
    GRAPH_PRV .L000001D0
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1123 [None]leaq      4(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1128 [None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1131 [sub]call      gzerror@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol 'gzerror@PLT' >]

<Symbol '.L00000470' section='.text', address=1136>
    ENDER True -- NXT None
    CFG .L00000446
    GRAPH_NXT .L00000446
    GRAPH_PRV gzerror@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1136 [None]leaq      .LC8(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1143 [None]movq      %rax, %rcx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1146 [jmp]jmp       .L00000446
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol '.L00000446' section='.text', address=1094>]

<Symbol '.L0000047C' section='.text', address=1148>
    ENDER True -- NXT None
    CFG .L00000446
    GRAPH_NXT .L00000446
    GRAPH_PRV .L00000262
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1148 [None]movq      %r12, %rcx
	 R['r12', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1151 [None]leaq      .LC14(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1158 [jmp]jmp       .L00000446
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8,)
	 dst=[<Symbol '.L00000446' section='.text', address=1094>]

<Symbol '.L00000488' section='.text', address=1160>
    ENDER False -- NXT .L00000495
    CFG gzerror@PLT
    GRAPH_NXT gzerror@PLT
    GRAPH_PRV .L0000024B
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1160 [None]leaq      4(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1165 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1168 [sub]call      gzerror@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol 'gzerror@PLT' >]

<Symbol '.L00000495' section='.text', address=1173>
    ENDER True -- NXT None
    CFG .L00000446
    GRAPH_NXT .L00000446
    GRAPH_PRV gzerror@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1173 [None]leaq      .LC13(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1180 [None]movq      %rax, %rcx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1183 [jmp]jmp       .L00000446
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol '.L00000446' section='.text', address=1094>]

<Symbol '.L000004A1' section='.text', address=1185>
    ENDER False -- NXT .L000004BE
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L00000326
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1185 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1192 [None]leaq      .LC20(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1199 [None]movl      $24, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1204 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1209 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L000004BE' section='.text', address=1214>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV fwrite@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1214 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>1219 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L000004C8' section='.text', address=1224>
    ENDER False -- NXT .L000004D5
    CFG gzerror@PLT
    GRAPH_NXT gzerror@PLT
    GRAPH_PRV .L0000030D
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1224 [None]leaq      4(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1229 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1232 [sub]call      gzerror@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol 'gzerror@PLT' >]

<Symbol '.L000004D5' section='.text', address=1237>
    ENDER True -- NXT None
    CFG .L00000446
    GRAPH_NXT .L00000446
    GRAPH_PRV gzerror@PLT
-- STACK00 ['.L000000EB.startup']
'X64_AMOCO.InstructionDEAD'>1237 [None]leaq      .LC19(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1244 [None]movq      %rax, %rcx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>1247 [jmp]jmp       .L00000446
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol '.L00000446' section='.text', address=1094>]

<Symbol '.L000004E4' section='.text', type='padding', address=1252>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>1252 [None].p2align 4

<Symbol 'test_deflate' section='.text', type='function', bind='globl', size=370, address=1264>
    ENDER False -- NXT .L0000051F
    CFG .L0000051F
    GRAPH_NXT .L0000051F
    GRAPH_PRV .L000000EB.startup
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1264 [None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1266 [None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1268 [None]leaq      hello(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r13', 'r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1275 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'r14', 'rax', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1277 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rax', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1278 [None]movq      %rdi, %r13
	 R['rdi', 'rip'] W['r13', 'rip']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1281 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'r14', 'rax', 'rbp', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1282 [None]movq      %rsi, %r12
	 R['rip', 'rsi'] W['r12', 'rip']
	 D['r12', 'r14', 'rax', 'rbp', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1285 [None]movq      %rcx, %r14
	 R['rcx', 'rip'] W['r14', 'rip']
	 D['r14', 'rax', 'rbp', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1288 [None]movq      %rcx, %rbp
	 R['rcx', 'rip'] W['rbp', 'rip']
	 D['rax', 'rbp', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1291 [None]addq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1295 [None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1304 [None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>1309 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:{}:(120,)

<Symbol '.L0000051F' section='.text', address=1311>
    ENDER False -- NXT .L00000537
    CFG .L0000051F
    CFG .L00000537
    GRAPH_NXT .L0000051F
    GRAPH_NXT .L00000537
    GRAPH_PRV .L0000051F
    GRAPH_PRV test_deflate
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1311 [None]movl      (%rbp), %edx
	 R['MEM', 'rbp', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>1314 [None]addq      $4, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>1318 [None]leal      -16843009(%rdx), %eax
	 R['MEM', 'rax', 'rdx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>1324 [None]notl      %edx
	 R['rdx', 'rip'] W['rdx', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>1326 [None]andl      %edx, %eax
	 R['rax', 'rdx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>1328 [None]andl      $-2139062144, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>1333 [jcc]je        .L0000051F
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(120,)
	 dst=[<Symbol '.L0000051F' section='.text', address=1311>]

<Symbol '.L00000537' section='.text', address=1335>
    ENDER False -- NXT .L00000589
    CFG deflateInit_@PLT
    GRAPH_NXT deflateInit_@PLT
    GRAPH_PRV .L0000051F
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1335 [None]movl      %eax, %edx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['rbx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>1337 [None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['rbx', 'rdi', 'rsi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>1341 [None]shrl      $16, %edx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rbx', 'rdi', 'rsi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>1344 [None]testl     $32896, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rbx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>1349 [None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rbx', 'rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>1352 [None]cmove     %edx, %eax
	 R['rax', 'rdx', 'rflags', 'rip'] W['rax', 'rip']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>1355 [None]leaq      2(%rbp), %rdx
	 R['MEM', 'rbp', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>1359 [None]movl      $-1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>1364 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>1367 [None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>1376 [None]cmove     %rdx, %rbp
	 R['rbp', 'rdx', 'rflags', 'rip'] W['rbp', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>1380 [None]movl      %eax, %edx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>1382 [None]addb      %al, %dl
	 R['rax', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>1384 [None]leaq      .LC22(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>1391 [None]sbbq      $3, %rbp
	 R['rbp', 'rflags', 'rip'] W['rbp', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>1395 [None]subq      %rcx, %rbp
	 R['rbp', 'rcx', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>1398 [None]movl      $112, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>1403 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>1407 [None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1412 [sub]call      deflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol 'deflateInit_@PLT' >]

<Symbol '.L00000589' section='.text', address=1417>
    ENDER False -- NXT .L00000591
    CFG .L00000645
    CFG .L00000591
    GRAPH_NXT .L00000591
    GRAPH_NXT .L00000645
    GRAPH_PRV deflateInit_@PLT
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1417 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1419 [jcc]jne       .L00000645
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L00000645' section='.text', address=1605>]

<Symbol '.L00000591' section='.text', address=1425>
    ENDER True -- NXT None
    CFG .L000005C5
    GRAPH_NXT .L000005C5
    GRAPH_PRV .L00000589
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1425 [None]movq      %r14, (%rsp)
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1429 [None]movq      %r13, 24(%rsp)
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1434 [jmp]jmp       .L000005C5
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 64, 72, 80, 120)
	 dst=[<Symbol '.L000005C5' section='.text', address=1477>]

<Symbol '.L0000059C' section='.text', size=4, address=1436>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>1436 [None].p2align 3

<Symbol '.L000005A0' section='.text', address=1440>
    ENDER False -- NXT .L000005A7
    CFG .L000005D4
    CFG .L000005A7
    GRAPH_NXT .L000005A7
    GRAPH_NXT .L000005D4
    GRAPH_PRV .L000005C5
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1440 [None]cmpq      %r12, 40(%rsp)
	 R['MEM', 'r12', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1445 [jcc]jae       .L000005D4
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L000005D4' section='.text', address=1492>]

<Symbol '.L000005A7' section='.text', address=1447>
    ENDER False -- NXT .L000005C1
    CFG deflate@PLT
    GRAPH_NXT deflate@PLT
    GRAPH_PRV .L000005A0
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1447 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1449 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1452 [None]movl      $1, 32(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1460 [None]movl      $1, 8(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1468 [sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' >]

<Symbol '.L000005C1' section='.text', address=1473>
    ENDER False -- NXT .L000005C5
    CFG .L00000617
    CFG .L000005C5
    GRAPH_NXT .L000005C5
    GRAPH_NXT .L00000617
    GRAPH_PRV deflate@PLT
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1473 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1475 [jcc]jne       .L00000617
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000617' section='.text', address=1559>]

<Symbol '.L000005C5' section='.text', address=1477>
    ENDER False -- NXT .L000005CC
    CFG .L000005A0
    CFG .L000005CC
    GRAPH_NXT .L000005A0
    GRAPH_NXT .L000005CC
    GRAPH_PRV .L00000591
    GRAPH_PRV .L000005C1
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1477 [None]cmpq      %rbp, 16(%rsp)
	 R['MEM', 'rbp', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1482 [jcc]jne       .L000005A0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L000005A0' section='.text', address=1440>]

<Symbol '.L000005CC' section='.text', address=1484>
    ENDER True -- NXT None
    CFG .L000005D4
    GRAPH_NXT .L000005D4
    GRAPH_PRV .L000005C5
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1484 [jmp]jmp       .L000005D4
	 R['rip'] W['rip']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L000005D4' section='.text', address=1492>]

<Symbol '.L000005CE' section='.text', size=2, address=1486>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>1486 [None].p2align 3

<Symbol '.L000005D0' section='.text', address=1488>
    ENDER False -- NXT .L000005D4
    CFG .L00000617
    CFG .L000005D4
    GRAPH_NXT .L000005D4
    GRAPH_NXT .L00000617
    GRAPH_PRV .L000005E9
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1488 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1490 [jcc]jne       .L00000617
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000617' section='.text', address=1559>]

<Symbol '.L000005D4' section='.text', address=1492>
    ENDER False -- NXT .L000005E9
    CFG deflate@PLT
    GRAPH_NXT deflate@PLT
    GRAPH_PRV .L000005A0
    GRAPH_PRV .L000005CC
    GRAPH_PRV .L000005D0
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1492 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1497 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1500 [None]movl      $1, 32(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1508 [sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' >]

<Symbol '.L000005E9' section='.text', address=1513>
    ENDER False -- NXT .L000005EE
    CFG .L000005D0
    CFG .L000005EE
    GRAPH_NXT .L000005D0
    GRAPH_NXT .L000005EE
    GRAPH_PRV deflate@PLT
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1513 [None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1516 [jcc]jne       .L000005D0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L000005D0' section='.text', address=1488>]

<Symbol '.L000005EE' section='.text', address=1518>
    ENDER False -- NXT .L000005F6
    CFG deflateEnd@PLT
    GRAPH_NXT deflateEnd@PLT
    GRAPH_PRV .L000005E9
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1518 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1521 [sub]call      deflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflateEnd@PLT' >]

<Symbol '.L000005F6' section='.text', address=1526>
    ENDER False -- NXT .L000005FA
    CFG .L00000656
    CFG .L000005FA
    GRAPH_NXT .L000005FA
    GRAPH_NXT .L00000656
    GRAPH_PRV deflateEnd@PLT
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1526 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1528 [jcc]jne       .L00000656
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000656' section='.text', address=1622>]

<Symbol '.L000005FA' section='.text', address=1530>
    ENDER False -- NXT .L0000060A
    CFG .L00000651
    CFG .L0000060A
    GRAPH_NXT .L0000060A
    GRAPH_NXT .L00000651
    GRAPH_PRV .L000005F6
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1530 [None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1535 [None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1544 [jcc]jne       .L00000651
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000651' section='.text', address=1617>]

<Symbol '.L0000060A' section='.text', address=1546>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L000000F7.startup
    GRAPH_PRV .L000005FA
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1546 [None]subq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-128]}:(-128, -120, -104, -96, -64, -56, -48, -8)
'X64_AMOCO.InstructionDEAD'>1550 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>1551 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>1552 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>1554 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{'%rbx': [-160]}:(-160, -152, -136, -128, -96, -88, -80, -40)
'X64_AMOCO.InstructionDEAD'>1556 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
'X64_AMOCO.InstructionDEAD'>1558 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
	 dst=[None]

<Symbol '.L00000617' section='.text', address=1559>
    ENDER False -- NXT .L00000621
    CFG .L00000621
    GRAPH_NXT .L00000621
    GRAPH_PRV .L000005C1
    GRAPH_PRV .L000005D0
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1559 [None]leaq      .LC24(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1566 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)

<Symbol '.L00000621' section='.text', address=1569>
    ENDER False -- NXT .L0000063B
    CFG __fprintf_chk@PLT
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L00000617
    GRAPH_PRV .L00000645
    GRAPH_PRV .L00000656
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1569 [None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1576 [None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1583 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1588 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1590 [sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' >]

<Symbol '.L0000063B' section='.text', address=1595>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV __fprintf_chk@PLT
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1595 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1600 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00000645' section='.text', address=1605>
    ENDER True -- NXT None
    CFG .L00000621
    GRAPH_NXT .L00000621
    GRAPH_PRV .L00000589
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1605 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1608 [None]leaq      .LC23(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1615 [jmp]jmp       .L00000621
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L00000621' section='.text', address=1569>]

<Symbol '.L00000651' section='.text', address=1617>
    ENDER True -- NXT None
    CFG __stack_chk_fail@PLT
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV .L000005FA
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1617 [sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' >]

<Symbol '.L00000656' section='.text', address=1622>
    ENDER True -- NXT None
    CFG .L00000621
    GRAPH_NXT .L00000621
    GRAPH_PRV .L000005F6
-- STACK00 ['.L000000F7.startup']
'X64_AMOCO.InstructionDEAD'>1622 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1625 [None]leaq      .LC25(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1632 [jmp]jmp       .L00000621
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000621' section='.text', address=1569>]

<Symbol '.L00000662' section='.text', type='padding', address=1634>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>1634 [None].p2align 4

<Symbol 'test_inflate' section='.text', type='function', bind='globl', size=378, address=1648>
    ENDER False -- NXT .L000006DD
    CFG inflateInit_@PLT
    GRAPH_NXT inflateInit_@PLT
    GRAPH_PRV .L000000F7.startup
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1648 [None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1650 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1652 [None]movq      %rsi, %r12
	 R['rip', 'rsi'] W['r12', 'rip']
	 D['r12', 'r13', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1655 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'rax', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1656 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'rax', 'rbp', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1657 [None]leaq      .LC22(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['r13', 'rax', 'rbp', 'rbx', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1664 [None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['r13', 'rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1668 [None]movq      %rdx, %r13
	 R['rdx', 'rip'] W['r13', 'rip']
	 D['r13', 'rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1671 [None]subq      $136, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1678 [None]movq      %rcx, %rbp
	 R['rcx', 'rip'] W['rbp', 'rip']
	 D['rax', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1681 [None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1690 [None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>1695 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>1697 [None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>1700 [None]movq      $28542640608928103, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>1710 [None]movq      %rdi, (%rsp)
	 R['rdi', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 120)
'X64_AMOCO.InstructionDEAD'>1714 [None]movq      %rax, (%rdx)
	 R['rax', 'rdx', 'rip'] W['MEM', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 120)
'X64_AMOCO.InstructionDEAD'>1717 [None]movq      %rdx, 24(%rsp)
	 R['rdx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 120)
'X64_AMOCO.InstructionDEAD'>1722 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 24, 120)
'X64_AMOCO.InstructionDEAD'>1725 [None]movl      $112, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%rbx': [0]}:(0, 24, 120)
'X64_AMOCO.InstructionDEAD'>1730 [None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 24, 80, 120)
'X64_AMOCO.InstructionDEAD'>1739 [None]movl      $0, 8(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 80, 120)
'X64_AMOCO.InstructionDEAD'>1747 [None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1752 [sub]call      inflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateInit_@PLT' >]

<Symbol '.L000006DD' section='.text', address=1757>
    ENDER False -- NXT .L000006E1
    CFG .L0000071A
    CFG .L000006E1
    GRAPH_NXT .L000006E1
    GRAPH_NXT .L0000071A
    GRAPH_PRV inflateInit_@PLT
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1757 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1759 [jcc]je        .L0000071A
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
	 dst=[<Symbol '.L0000071A' section='.text', address=1818>]

<Symbol '.L000006E1' section='.text', address=1761>
    ENDER True -- NXT None
    CFG .L000007A6
    GRAPH_NXT .L000007A6
    GRAPH_PRV .L000006DD
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1761 [jmp]jmp       .L000007A6
	 R['rip'] W['rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
	 dst=[<Symbol '.L000007A6' section='.text', address=1958>]

<Symbol '.L000006E6' section='.text', size=10, address=1766>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>1766 [None].p2align 4

<Symbol '.L000006F0' section='.text', address=1776>
    ENDER False -- NXT .L000006F7
    CFG .L00000721
    CFG .L000006F7
    GRAPH_NXT .L000006F7
    GRAPH_NXT .L00000721
    GRAPH_PRV .L0000071A
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1776 [None]cmpq      %r12, 16(%rsp)
	 R['MEM', 'r12', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1781 [jcc]jae       .L00000721
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000721' section='.text', address=1825>]

<Symbol '.L000006F7' section='.text', address=1783>
    ENDER False -- NXT .L00000711
    CFG inflate@PLT
    GRAPH_NXT inflate@PLT
    GRAPH_PRV .L000006F0
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1783 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1785 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1788 [None]movl      $1, 32(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1796 [None]movl      $1, 8(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1804 [sub]call      inflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflate@PLT' >]

<Symbol '.L00000711' section='.text', address=1809>
    ENDER False -- NXT .L00000716
    CFG .L00000721
    CFG .L00000716
    GRAPH_NXT .L00000716
    GRAPH_NXT .L00000721
    GRAPH_PRV inflate@PLT
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1809 [None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1812 [jcc]je        .L00000721
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000721' section='.text', address=1825>]

<Symbol '.L00000716' section='.text', address=1814>
    ENDER False -- NXT .L0000071A
    CFG .L00000778
    CFG .L0000071A
    GRAPH_NXT .L0000071A
    GRAPH_NXT .L00000778
    GRAPH_PRV .L00000711
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1814 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1816 [jcc]jne       .L00000778
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000778' section='.text', address=1912>]

<Symbol '.L0000071A' section='.text', address=1818>
    ENDER False -- NXT .L00000721
    CFG .L000006F0
    CFG .L00000721
    GRAPH_NXT .L000006F0
    GRAPH_NXT .L00000721
    GRAPH_PRV .L000006DD
    GRAPH_PRV .L00000716
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1818 [None]cmpq      %rbp, 40(%rsp)
	 R['MEM', 'rbp', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1823 [jcc]jb        .L000006F0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L000006F0' section='.text', address=1776>]

<Symbol '.L00000721' section='.text', address=1825>
    ENDER False -- NXT .L00000729
    CFG inflateEnd@PLT
    GRAPH_NXT inflateEnd@PLT
    GRAPH_PRV .L000006F0
    GRAPH_PRV .L00000711
    GRAPH_PRV .L0000071A
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1825 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1828 [sub]call      inflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateEnd@PLT' >]

<Symbol '.L00000729' section='.text', address=1833>
    ENDER False -- NXT .L00000731
    CFG .L000007DE
    CFG .L00000731
    GRAPH_NXT .L00000731
    GRAPH_NXT .L000007DE
    GRAPH_PRV inflateEnd@PLT
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1833 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1835 [jcc]jne       .L000007DE
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L000007DE' section='.text', address=2014>]

<Symbol '.L00000731' section='.text', address=1841>
    ENDER False -- NXT .L00000740
    CFG strcmp@PLT
    GRAPH_NXT strcmp@PLT
    GRAPH_PRV .L00000729
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1841 [None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1848 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1851 [sub]call      strcmp@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'strcmp@PLT' >]

<Symbol '.L00000740' section='.text', address=1856>
    ENDER False -- NXT .L00000744
    CFG .L000007B7
    CFG .L00000744
    GRAPH_NXT .L00000744
    GRAPH_NXT .L000007B7
    GRAPH_PRV strcmp@PLT
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1856 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1858 [jcc]jne       .L000007B7
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L000007B7' section='.text', address=1975>]

<Symbol '.L00000744' section='.text', address=1860>
    ENDER False -- NXT .L0000075A
    CFG __printf_chk@PLT
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV .L00000740
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1860 [None]leaq      .LC30(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1867 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1869 [None]movq      %r13, %rdx
	 R['r13', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1872 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1877 [sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__printf_chk@PLT' >]

<Symbol '.L0000075A' section='.text', address=1882>
    ENDER False -- NXT .L0000076A
    CFG .L000007B2
    CFG .L0000076A
    GRAPH_NXT .L0000076A
    GRAPH_NXT .L000007B2
    GRAPH_PRV __printf_chk@PLT
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1882 [None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1887 [None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1896 [jcc]jne       .L000007B2
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L000007B2' section='.text', address=1970>]

<Symbol '.L0000076A' section='.text', address=1898>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L0000010B.startup
    GRAPH_PRV .L0000075A
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1898 [None]addq      $136, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>1905 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'rbp', 'rbx']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>1906 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'rbp']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>1907 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13']
	 STACK:{'%rbx': [-160]}:(-160, -152, -136, -128, -96, -88, -80, -40)
'X64_AMOCO.InstructionDEAD'>1909 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13']
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
'X64_AMOCO.InstructionDEAD'>1911 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
	 dst=[None]

<Symbol '.L00000778' section='.text', address=1912>
    ENDER False -- NXT .L00000782
    CFG .L00000782
    GRAPH_NXT .L00000782
    GRAPH_PRV .L00000716
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1912 [None]leaq      .LC27(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1919 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)

<Symbol '.L00000782' section='.text', address=1922>
    ENDER False -- NXT .L0000079C
    CFG __fprintf_chk@PLT
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L00000778
    GRAPH_PRV .L000007A6
    GRAPH_PRV .L000007DE
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1922 [None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1929 [None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1936 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1941 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1943 [sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' >]

<Symbol '.L0000079C' section='.text', address=1948>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV __fprintf_chk@PLT
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1948 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1953 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L000007A6' section='.text', address=1958>
    ENDER True -- NXT None
    CFG .L00000782
    GRAPH_NXT .L00000782
    GRAPH_PRV .L000006E1
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1958 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1961 [None]leaq      .LC26(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1968 [jmp]jmp       .L00000782
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000782' section='.text', address=1922>]

<Symbol '.L000007B2' section='.text', address=1970>
    ENDER True -- NXT None
    CFG __stack_chk_fail@PLT
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV .L0000075A
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1970 [sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' >]

<Symbol '.L000007B7' section='.text', address=1975>
    ENDER False -- NXT .L000007D4
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L00000740
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>1975 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1982 [None]leaq      .LC29(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1989 [None]movl      $12, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1994 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>1999 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L000007D4' section='.text', address=2004>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV fwrite@PLT
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>2004 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2009 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L000007DE' section='.text', address=2014>
    ENDER True -- NXT None
    CFG .L00000782
    GRAPH_NXT .L00000782
    GRAPH_PRV .L00000729
-- STACK00 ['.L0000010B.startup']
'X64_AMOCO.InstructionDEAD'>2014 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2017 [None]leaq      .LC28(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2024 [jmp]jmp       .L00000782
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000782' section='.text', address=1922>]

<Symbol '.L000007EA' section='.text', type='padding', address=2026>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>2026 [None].p2align 3

<Symbol 'test_large_deflate' section='.text', type='function', bind='globl', size=431, address=2032>
    ENDER False -- NXT .L00000846
    CFG deflateInit_@PLT
    GRAPH_NXT deflateInit_@PLT
    GRAPH_PRV .L0000010B.startup
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2032 [None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2034 [None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2036 [None]movq      %rdx, %r13
	 R['rdx', 'rip'] W['r13', 'rip']
	 D['r13', 'r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2039 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2041 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'r14', 'rax', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2042 [None]leaq      .LC22(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['r12', 'r14', 'rax', 'rbp', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2049 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'r14', 'rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2050 [None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['r12', 'r14', 'rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2054 [None]movq      %rdi, %r14
	 R['rdi', 'rip'] W['r14', 'rip']
	 D['r12', 'r14', 'rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2057 [None]movq      %rsi, %rbp
	 R['rip', 'rsi'] W['rbp', 'rip']
	 D['r12', 'rax', 'rbp', 'rbx', 'rdi', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2060 [None]movq      %rcx, %r12
	 R['rcx', 'rip'] W['r12', 'rip']
	 D['r12', 'rax', 'rbx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2063 [None]addq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2067 [None]movl      $112, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2072 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rbx', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2077 [None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rdi']
	 STACK:{'%rbx': [0]}:()
'X64_AMOCO.InstructionDEAD'>2080 [None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%rbx': [0]}:(80,)
'X64_AMOCO.InstructionDEAD'>2089 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%rbx': [0]}:(80,)
'X64_AMOCO.InstructionDEAD'>2092 [None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(80,)
'X64_AMOCO.InstructionDEAD'>2101 [None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>2106 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>2108 [None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2113 [sub]call      deflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol 'deflateInit_@PLT' >]

<Symbol '.L00000846' section='.text', address=2118>
    ENDER False -- NXT .L0000084E
    CFG .L00000934
    CFG .L0000084E
    GRAPH_NXT .L0000084E
    GRAPH_NXT .L00000934
    GRAPH_PRV deflateInit_@PLT
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2118 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2120 [jcc]jne       .L00000934
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L00000934' section='.text', address=2356>]

<Symbol '.L0000084E' section='.text', address=2126>
    ENDER False -- NXT .L0000086A
    CFG deflate@PLT
    GRAPH_NXT deflate@PLT
    GRAPH_PRV .L00000846
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2126 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2128 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2131 [None]movq      %r14, 24(%rsp)
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2136 [None]movl      %ebp, 32(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2140 [None]movq      %r13, (%rsp)
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2144 [None]movl      %r12d, 8(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2149 [sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' >]

<Symbol '.L0000086A' section='.text', address=2154>
    ENDER False -- NXT .L00000872
    CFG .L00000906
    CFG .L00000872
    GRAPH_NXT .L00000872
    GRAPH_NXT .L00000906
    GRAPH_PRV deflate@PLT
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2154 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2156 [jcc]jne       .L00000906
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000906' section='.text', address=2310>]

<Symbol '.L00000872' section='.text', address=2162>
    ENDER False -- NXT .L0000087E
    CFG .L00000978
    CFG .L0000087E
    GRAPH_NXT .L0000087E
    GRAPH_NXT .L00000978
    GRAPH_PRV .L0000086A
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2162 [None]movl      8(%rsp), %eax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2166 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2168 [jcc]jne       .L00000978
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000978' section='.text', address=2424>]

<Symbol '.L0000087E' section='.text', address=2174>
    ENDER False -- NXT .L0000088A
    CFG deflateParams@PLT
    GRAPH_NXT deflateParams@PLT
    GRAPH_PRV .L00000872
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2174 [None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2176 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2178 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2181 [sub]call      deflateParams@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflateParams@PLT' >]

<Symbol '.L0000088A' section='.text', address=2186>
    ENDER False -- NXT .L0000089E
    CFG deflate@PLT
    GRAPH_NXT deflate@PLT
    GRAPH_PRV deflateParams@PLT
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2186 [None]shrl      $1, %ebp
	 R['rbp', 'rflags', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2188 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2190 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2193 [None]movq      %r14, (%rsp)
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2197 [None]movl      %ebp, 8(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2201 [sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' >]

<Symbol '.L0000089E' section='.text', address=2206>
    ENDER False -- NXT .L000008A2
    CFG .L00000906
    CFG .L000008A2
    GRAPH_NXT .L000008A2
    GRAPH_NXT .L00000906
    GRAPH_PRV deflate@PLT
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2206 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2208 [jcc]jne       .L00000906
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000906' section='.text', address=2310>]

<Symbol '.L000008A2' section='.text', address=2210>
    ENDER False -- NXT .L000008B4
    CFG deflateParams@PLT
    GRAPH_NXT deflateParams@PLT
    GRAPH_PRV .L0000089E
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2210 [None]movl      $1, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2215 [None]movl      $9, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2220 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2223 [sub]call      deflateParams@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflateParams@PLT' >]

<Symbol '.L000008B4' section='.text', address=2228>
    ENDER False -- NXT .L000008C7
    CFG deflate@PLT
    GRAPH_NXT deflate@PLT
    GRAPH_PRV deflateParams@PLT
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2228 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2230 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2233 [None]movq      %r13, (%rsp)
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2237 [None]movl      %r12d, 8(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2242 [sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' >]

<Symbol '.L000008C7' section='.text', address=2247>
    ENDER False -- NXT .L000008CB
    CFG .L00000906
    CFG .L000008CB
    GRAPH_NXT .L000008CB
    GRAPH_NXT .L00000906
    GRAPH_PRV deflate@PLT
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2247 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2249 [jcc]jne       .L00000906
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000906' section='.text', address=2310>]

<Symbol '.L000008CB' section='.text', address=2251>
    ENDER False -- NXT .L000008D8
    CFG deflate@PLT
    GRAPH_NXT deflate@PLT
    GRAPH_PRV .L000008C7
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2251 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2256 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2259 [sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' >]

<Symbol '.L000008D8' section='.text', address=2264>
    ENDER False -- NXT .L000008DD
    CFG .L00000951
    CFG .L000008DD
    GRAPH_NXT .L000008DD
    GRAPH_NXT .L00000951
    GRAPH_PRV deflate@PLT
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2264 [None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2267 [jcc]jne       .L00000951
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000951' section='.text', address=2385>]

<Symbol '.L000008DD' section='.text', address=2269>
    ENDER False -- NXT .L000008E5
    CFG deflateEnd@PLT
    GRAPH_NXT deflateEnd@PLT
    GRAPH_PRV .L000008D8
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2269 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2272 [sub]call      deflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflateEnd@PLT' >]

<Symbol '.L000008E5' section='.text', address=2277>
    ENDER False -- NXT .L000008E9
    CFG .L00000945
    CFG .L000008E9
    GRAPH_NXT .L000008E9
    GRAPH_NXT .L00000945
    GRAPH_PRV deflateEnd@PLT
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2277 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2279 [jcc]jne       .L00000945
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000945' section='.text', address=2373>]

<Symbol '.L000008E9' section='.text', address=2281>
    ENDER False -- NXT .L000008F9
    CFG .L00000940
    CFG .L000008F9
    GRAPH_NXT .L000008F9
    GRAPH_NXT .L00000940
    GRAPH_PRV .L000008E5
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2281 [None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2286 [None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2295 [jcc]jne       .L00000940
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000940' section='.text', address=2368>]

<Symbol '.L000008F9' section='.text', address=2297>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L0000011F.startup
    GRAPH_PRV .L000008E9
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2297 [None]subq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-128]}:(-128, -120, -104, -96, -64, -56, -48, -8)
'X64_AMOCO.InstructionDEAD'>2301 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>2302 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>2303 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>2305 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{'%rbx': [-160]}:(-160, -152, -136, -128, -96, -88, -80, -40)
'X64_AMOCO.InstructionDEAD'>2307 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
'X64_AMOCO.InstructionDEAD'>2309 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
	 dst=[None]

<Symbol '.L00000906' section='.text', address=2310>
    ENDER False -- NXT .L00000910
    CFG .L00000910
    GRAPH_NXT .L00000910
    GRAPH_PRV .L0000086A
    GRAPH_PRV .L0000089E
    GRAPH_PRV .L000008C7
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2310 [None]leaq      .LC24(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2317 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)

<Symbol '.L00000910' section='.text', address=2320>
    ENDER False -- NXT .L0000092A
    CFG __fprintf_chk@PLT
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L00000906
    GRAPH_PRV .L00000934
    GRAPH_PRV .L00000945
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2320 [None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2327 [None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2334 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2339 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2341 [sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' >]

<Symbol '.L0000092A' section='.text', address=2346>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV __fprintf_chk@PLT
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2346 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2351 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00000934' section='.text', address=2356>
    ENDER True -- NXT None
    CFG .L00000910
    GRAPH_NXT .L00000910
    GRAPH_PRV .L00000846
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2356 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2359 [None]leaq      .LC23(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2366 [jmp]jmp       .L00000910
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L00000910' section='.text', address=2320>]

<Symbol '.L00000940' section='.text', address=2368>
    ENDER True -- NXT None
    CFG __stack_chk_fail@PLT
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV .L000008E9
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2368 [sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' >]

<Symbol '.L00000945' section='.text', address=2373>
    ENDER True -- NXT None
    CFG .L00000910
    GRAPH_NXT .L00000910
    GRAPH_PRV .L000008E5
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2373 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2376 [None]leaq      .LC25(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2383 [jmp]jmp       .L00000910
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000910' section='.text', address=2320>]

<Symbol '.L00000951' section='.text', address=2385>
    ENDER False -- NXT .L0000096E
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L000008D8
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2385 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2392 [None]leaq      .LC32(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2399 [None]movl      $35, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2404 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2409 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L0000096E' section='.text', address=2414>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV fwrite@PLT
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2414 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2419 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00000978' section='.text', address=2424>
    ENDER False -- NXT .L00000995
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L00000872
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2424 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2431 [None]leaq      .LC31(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2438 [None]movl      $19, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2443 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2448 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L00000995' section='.text', address=2453>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV fwrite@PLT
-- STACK00 ['.L0000011F.startup']
'X64_AMOCO.InstructionDEAD'>2453 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2458 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L0000099F' section='.text', type='padding', address=2463>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>2463 [None].p2align 3

<Symbol 'test_large_inflate' section='.text', type='function', bind='globl', size=327, address=2464>
    ENDER False -- NXT .L00000A03
    CFG inflateInit_@PLT
    GRAPH_NXT inflateInit_@PLT
    GRAPH_PRV .L0000011F.startup
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2464 [None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2466 [None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2468 [None]movq      %rsi, %r13
	 R['rip', 'rsi'] W['r13', 'rip']
	 D['r13', 'r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2471 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2473 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2474 [None]movq      %rdx, %rbp
	 R['rdx', 'rip'] W['rbp', 'rip']
	 D['r14', 'rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2477 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2478 [None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['r14', 'rax', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2482 [None]movq      %rcx, %r14
	 R['rcx', 'rip'] W['r14', 'rip']
	 D['r14', 'rax', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2485 [None]addq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2489 [None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2498 [None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>2503 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>2505 [None]movl      %esi, 8(%rsp)
	 R['rip', 'rsi', 'rsp'] W['MEM', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:(8, 120)
'X64_AMOCO.InstructionDEAD'>2509 [None]movq      $28542640608928103, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rbx', 'rsi']
	 STACK:{}:(8, 120)
'X64_AMOCO.InstructionDEAD'>2519 [None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rbx', 'rsi']
	 STACK:{'%rbx': [0]}:(8, 120)
'X64_AMOCO.InstructionDEAD'>2522 [None]leaq      .LC22(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(8, 120)
'X64_AMOCO.InstructionDEAD'>2529 [None]movq      %rax, (%rdx)
	 R['rax', 'rdx', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(8, 120)
'X64_AMOCO.InstructionDEAD'>2532 [None]movq      %rdi, (%rsp)
	 R['rdi', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 120)
'X64_AMOCO.InstructionDEAD'>2536 [None]movl      $112, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 120)
'X64_AMOCO.InstructionDEAD'>2541 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 120)
'X64_AMOCO.InstructionDEAD'>2544 [None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 80, 120)
'X64_AMOCO.InstructionDEAD'>2553 [None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2558 [sub]call      inflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateInit_@PLT' >]

<Symbol '.L00000A03' section='.text', address=2563>
    ENDER False -- NXT .L00000A0B
    CFG .L00000AA6
    CFG .L00000A0B
    GRAPH_NXT .L00000A0B
    GRAPH_NXT .L00000AA6
    GRAPH_PRV inflateInit_@PLT
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2563 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2565 [jcc]jne       .L00000AA6
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000AA6' section='.text', address=2726>]

<Symbol '.L00000A0B' section='.text', address=2571>
    ENDER True -- NXT None
    CFG .L00000A14
    GRAPH_NXT .L00000A14
    GRAPH_PRV .L00000A03
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2571 [None]movl      %r14d, %r12d
	 R['r14', 'rip'] W['r12', 'rip']
	 D['r12', 'rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2574 [jmp]jmp       .L00000A14
	 R['rip'] W['rip']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000A14' section='.text', address=2580>]

<Symbol '.L00000A10' section='.text', address=2576>
    ENDER False -- NXT .L00000A14
    CFG .L00000A78
    CFG .L00000A14
    GRAPH_NXT .L00000A14
    GRAPH_NXT .L00000A78
    GRAPH_PRV .L00000A28
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2576 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2578 [jcc]jne       .L00000A78
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000A78' section='.text', address=2680>]

<Symbol '.L00000A14' section='.text', address=2580>
    ENDER False -- NXT .L00000A28
    CFG inflate@PLT
    GRAPH_NXT inflate@PLT
    GRAPH_PRV .L00000A0B
    GRAPH_PRV .L00000A10
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2580 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2582 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2585 [None]movq      %rbp, 24(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2590 [None]movl      %r12d, 32(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2595 [sub]call      inflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflate@PLT' >]

<Symbol '.L00000A28' section='.text', address=2600>
    ENDER False -- NXT .L00000A2D
    CFG .L00000A10
    CFG .L00000A2D
    GRAPH_NXT .L00000A10
    GRAPH_NXT .L00000A2D
    GRAPH_PRV inflate@PLT
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2600 [None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2603 [jcc]jne       .L00000A10
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000A10' section='.text', address=2576>]

<Symbol '.L00000A2D' section='.text', address=2605>
    ENDER False -- NXT .L00000A35
    CFG inflateEnd@PLT
    GRAPH_NXT inflateEnd@PLT
    GRAPH_PRV .L00000A28
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2605 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2608 [sub]call      inflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateEnd@PLT' >]

<Symbol '.L00000A35' section='.text', address=2613>
    ENDER False -- NXT .L00000A3D
    CFG .L00000ADB
    CFG .L00000A3D
    GRAPH_NXT .L00000A3D
    GRAPH_NXT .L00000ADB
    GRAPH_PRV inflateEnd@PLT
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2613 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2615 [jcc]jne       .L00000ADB
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000ADB' section='.text', address=2779>]

<Symbol '.L00000A3D' section='.text', address=2621>
    ENDER False -- NXT .L00000A4F
    CFG .L00000AB7
    CFG .L00000A4F
    GRAPH_NXT .L00000A4F
    GRAPH_NXT .L00000AB7
    GRAPH_PRV .L00000A35
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2621 [None]shrq      $1, %r13
	 R['r13', 'rflags', 'rip'] W['r13', 'rflags', 'rip']
	 D['rax', 'rcx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2624 [None]movq      40(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2629 [None]leaq      (%r13,%r14,2), %rax
	 R['MEM', 'r13', 'r14', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2634 [None]cmpq      %rax, %rcx
	 R['rax', 'rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2637 [jcc]jne       .L00000AB7
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000AB7' section='.text', address=2743>]

<Symbol '.L00000A4F' section='.text', address=2639>
    ENDER False -- NXT .L00000A5B
    CFG puts@PLT
    GRAPH_NXT puts@PLT
    GRAPH_PRV .L00000A3D
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2639 [None]leaq      .LC35(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2646 [sub]call      puts@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'puts@PLT' >]

<Symbol '.L00000A5B' section='.text', address=2651>
    ENDER False -- NXT .L00000A6B
    CFG .L00000AB2
    CFG .L00000A6B
    GRAPH_NXT .L00000A6B
    GRAPH_NXT .L00000AB2
    GRAPH_PRV puts@PLT
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2651 [None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2656 [None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2665 [jcc]jne       .L00000AB2
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000AB2' section='.text', address=2738>]

<Symbol '.L00000A6B' section='.text', address=2667>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L00000133.startup
    GRAPH_PRV .L00000A5B
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2667 [None]subq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-128]}:(-128, -120, -104, -96, -64, -56, -48, -8)
'X64_AMOCO.InstructionDEAD'>2671 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>2672 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>2673 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>2675 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{'%rbx': [-160]}:(-160, -152, -136, -128, -96, -88, -80, -40)
'X64_AMOCO.InstructionDEAD'>2677 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
'X64_AMOCO.InstructionDEAD'>2679 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
	 dst=[None]

<Symbol '.L00000A78' section='.text', address=2680>
    ENDER False -- NXT .L00000A82
    CFG .L00000A82
    GRAPH_NXT .L00000A82
    GRAPH_PRV .L00000A10
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2680 [None]leaq      .LC33(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2687 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)

<Symbol '.L00000A82' section='.text', address=2690>
    ENDER False -- NXT .L00000A9C
    CFG __fprintf_chk@PLT
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L00000A78
    GRAPH_PRV .L00000AA6
    GRAPH_PRV .L00000ADB
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2690 [None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2697 [None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2704 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2709 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2711 [sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' >]

<Symbol '.L00000A9C' section='.text', address=2716>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV __fprintf_chk@PLT
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2716 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2721 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00000AA6' section='.text', address=2726>
    ENDER True -- NXT None
    CFG .L00000A82
    GRAPH_NXT .L00000A82
    GRAPH_PRV .L00000A03
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2726 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2729 [None]leaq      .LC26(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2736 [jmp]jmp       .L00000A82
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000A82' section='.text', address=2690>]

<Symbol '.L00000AB2' section='.text', address=2738>
    ENDER True -- NXT None
    CFG __stack_chk_fail@PLT
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV .L00000A5B
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2738 [sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' >]

<Symbol '.L00000AB7' section='.text', address=2743>
    ENDER False -- NXT .L00000AD1
    CFG __fprintf_chk@PLT
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L00000A3D
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2743 [None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2750 [None]leaq      .LC34(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2757 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2762 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2764 [sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' >]

<Symbol '.L00000AD1' section='.text', address=2769>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV __fprintf_chk@PLT
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2769 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2774 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00000ADB' section='.text', address=2779>
    ENDER True -- NXT None
    CFG .L00000A82
    GRAPH_NXT .L00000A82
    GRAPH_PRV .L00000A35
-- STACK00 ['.L00000133.startup']
'X64_AMOCO.InstructionDEAD'>2779 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2782 [None]leaq      .LC28(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2789 [jmp]jmp       .L00000A82
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000A82' section='.text', address=2690>]

<Symbol '.L00000AE7' section='.text', type='padding', address=2791>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>2791 [None].p2align 4

<Symbol 'test_flush' section='.text', type='function', bind='globl', size=350, address=2800>
    ENDER False -- NXT .L00000B1F
    CFG .L00000B1F
    GRAPH_NXT .L00000B1F
    GRAPH_PRV .L00000133.startup
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>2800 [None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2802 [None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2804 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2806 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2807 [None]movq      %rdi, %r12
	 R['rdi', 'rip'] W['r12', 'rip']
	 D['r12', 'r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2810 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2811 [None]movq      %rsi, %rbx
	 R['rip', 'rsi'] W['rbx', 'rip']
	 D['r14', 'rax', 'rbx', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2814 [None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['r14', 'rax', 'rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2821 [None]addq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2825 [None]movq      %rsi, %r14
	 R['rip', 'rsi'] W['r14', 'rip']
	 D['r14', 'rax', 'rcx', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2828 [None]movq      %rsi, %rdx
	 R['rip', 'rsi'] W['rdx', 'rip']
	 D['rax', 'rcx', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2831 [None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2840 [None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>2845 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rcx']
	 STACK:{}:(120,)

<Symbol '.L00000B1F' section='.text', address=2847>
    ENDER False -- NXT .L00000B36
    CFG .L00000B1F
    CFG .L00000B36
    GRAPH_NXT .L00000B1F
    GRAPH_NXT .L00000B36
    GRAPH_PRV .L00000B1F
    GRAPH_PRV test_flush
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>2847 [None]movl      (%rdx), %ecx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>2849 [None]addq      $4, %rdx
	 R['rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>2853 [None]leal      -16843009(%rcx), %eax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>2859 [None]notl      %ecx
	 R['rcx', 'rip'] W['rcx', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>2861 [None]andl      %ecx, %eax
	 R['rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>2863 [None]andl      $-2139062144, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>2868 [jcc]je        .L00000B1F
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(120,)
	 dst=[<Symbol '.L00000B1F' section='.text', address=2847>]

<Symbol '.L00000B36' section='.text', address=2870>
    ENDER False -- NXT .L00000B86
    CFG deflateInit_@PLT
    GRAPH_NXT deflateInit_@PLT
    GRAPH_PRV .L00000B1F
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>2870 [None]movl      %eax, %ecx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['r13', 'rbp', 'rcx', 'rdi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>2872 [None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['r13', 'rbp', 'rdi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>2876 [None]shrl      $16, %ecx
	 R['rcx', 'rflags', 'rip'] W['rcx', 'rflags', 'rip']
	 D['r13', 'rbp', 'rdi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>2879 [None]testl     $32896, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['r13', 'rbp', 'rdi', 'rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>2884 [None]movq      %rsp, %r13
	 R['rip', 'rsp'] W['r13', 'rip']
	 D['r13', 'rbp', 'rdi']
	 STACK:{'%r13': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>2887 [None]cmove     %ecx, %eax
	 R['rax', 'rcx', 'rflags', 'rip'] W['rax', 'rip']
	 D['rbp', 'rdi']
	 STACK:{'%r13': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>2890 [None]leaq      2(%rdx), %rcx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rbp', 'rcx', 'rdi']
	 STACK:{'%r13': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>2894 [None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rbp', 'rdi']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>2903 [None]movl      %eax, %edi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rbp', 'rdi']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>2905 [None]cmove     %rcx, %rdx
	 R['rcx', 'rdx', 'rflags', 'rip'] W['rdx', 'rip']
	 D['rbp']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>2909 [None]addb      %al, %dil
	 R['rax', 'rdi', 'rip'] W['rdi', 'rflags', 'rip']
	 D['rbp', 'rcx', 'rflags']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>2912 [None]movl      $112, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rbp', 'rcx', 'rdi']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>2917 [None]sbbq      $3, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rbp', 'rdi']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>2921 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rbp', 'rdi', 'rflags']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>2924 [None]movl      %edx, %ebp
	 R['rdx', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rflags']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>2926 [None]leaq      .LC22(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>2933 [None]subl      %esi, %ebp
	 R['rbp', 'rip', 'rsi'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>2935 [None]movl      $-1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>2940 [None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2945 [sub]call      deflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol 'deflateInit_@PLT' >]

<Symbol '.L00000B86' section='.text', address=2950>
    ENDER False -- NXT .L00000B8A
    CFG .L00000C03
    CFG .L00000B8A
    GRAPH_NXT .L00000B8A
    GRAPH_NXT .L00000C03
    GRAPH_PRV deflateInit_@PLT
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>2950 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2952 [jcc]jne       .L00000C03
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L00000C03' section='.text', address=3075>]

<Symbol '.L00000B8A' section='.text', address=2954>
    ENDER False -- NXT .L00000BAF
    CFG deflate@PLT
    GRAPH_NXT deflate@PLT
    GRAPH_PRV .L00000B86
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>2954 [None]movq      (%rbx), %rax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2957 [None]movl      $3, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2962 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2965 [None]movq      %r14, (%rsp)
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2969 [None]movq      %r12, 24(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2974 [None]movl      $3, 8(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2982 [None]movl      %eax, 32(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2986 [sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' >]

<Symbol '.L00000BAF' section='.text', address=2991>
    ENDER False -- NXT .L00000BB3
    CFG .L00000C31
    CFG .L00000BB3
    GRAPH_NXT .L00000BB3
    GRAPH_NXT .L00000C31
    GRAPH_PRV deflate@PLT
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>2991 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>2993 [jcc]jne       .L00000C31
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000C31' section='.text', address=3121>]

<Symbol '.L00000BB3' section='.text', address=2995>
    ENDER False -- NXT .L00000BCD
    CFG deflate@PLT
    GRAPH_NXT deflate@PLT
    GRAPH_PRV .L00000BAF
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>2995 [None]addb      $1, 3(%r12)
	 R['MEM', 'r12', 'rip'] W['MEM', 'rflags', 'rip']
	 D['rdi', 'rflags', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3001 [None]leal      -2(%rbp), %edx
	 R['MEM', 'rbp', 'rdx', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3004 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3009 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3012 [None]movl      %edx, 8(%rsp)
	 R['rdx', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3016 [sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' >]

<Symbol '.L00000BCD' section='.text', address=3021>
    ENDER False -- NXT .L00000BD2
    CFG .L00000C31
    CFG .L00000BD2
    GRAPH_NXT .L00000BD2
    GRAPH_NXT .L00000C31
    GRAPH_PRV deflate@PLT
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>3021 [None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3024 [jcc]ja        .L00000C31
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000C31' section='.text', address=3121>]

<Symbol '.L00000BD2' section='.text', address=3026>
    ENDER False -- NXT .L00000BDA
    CFG deflateEnd@PLT
    GRAPH_NXT deflateEnd@PLT
    GRAPH_PRV .L00000BCD
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>3026 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3029 [sub]call      deflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflateEnd@PLT' >]

<Symbol '.L00000BDA' section='.text', address=3034>
    ENDER False -- NXT .L00000BDE
    CFG .L00000C42
    CFG .L00000BDE
    GRAPH_NXT .L00000BDE
    GRAPH_NXT .L00000C42
    GRAPH_PRV deflateEnd@PLT
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>3034 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3036 [jcc]jne       .L00000C42
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000C42' section='.text', address=3138>]

<Symbol '.L00000BDE' section='.text', address=3038>
    ENDER False -- NXT .L00000BF6
    CFG .L00000C3D
    CFG .L00000BF6
    GRAPH_NXT .L00000BF6
    GRAPH_NXT .L00000C3D
    GRAPH_PRV .L00000BDA
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>3038 [None]movq      40(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3043 [None]movq      %rax, (%rbx)
	 R['rax', 'rbx', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3046 [None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3051 [None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3060 [jcc]jne       .L00000C3D
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000C3D' section='.text', address=3133>]

<Symbol '.L00000BF6' section='.text', address=3062>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L0000013E.startup
    GRAPH_PRV .L00000BDE
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>3062 [None]subq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx', 'rflags']
	 STACK:{'%r13': [-128]}:(-128, -120, -104, -96, -64, -56, -48, -8)
'X64_AMOCO.InstructionDEAD'>3066 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{'%r13': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>3067 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{'%r13': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>3068 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{'%r13': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>3070 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{'%r13': [-160]}:(-160, -152, -136, -128, -96, -88, -80, -40)
'X64_AMOCO.InstructionDEAD'>3072 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{'%r13': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
'X64_AMOCO.InstructionDEAD'>3074 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%r13': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
	 dst=[None]

<Symbol '.L00000C03' section='.text', address=3075>
    ENDER False -- NXT .L00000C0D
    CFG .L00000C0D
    GRAPH_NXT .L00000C0D
    GRAPH_PRV .L00000B86
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>3075 [None]leaq      .LC23(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3082 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)

<Symbol '.L00000C0D' section='.text', address=3085>
    ENDER False -- NXT .L00000C27
    CFG __fprintf_chk@PLT
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L00000C03
    GRAPH_PRV .L00000C31
    GRAPH_PRV .L00000C42
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>3085 [None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3092 [None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3099 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3104 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3106 [sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' >]

<Symbol '.L00000C27' section='.text', address=3111>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV __fprintf_chk@PLT
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>3111 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3116 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00000C31' section='.text', address=3121>
    ENDER True -- NXT None
    CFG .L00000C0D
    GRAPH_NXT .L00000C0D
    GRAPH_PRV .L00000BAF
    GRAPH_PRV .L00000BCD
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>3121 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3124 [None]leaq      .LC24(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3131 [jmp]jmp       .L00000C0D
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000C0D' section='.text', address=3085>]

<Symbol '.L00000C3D' section='.text', address=3133>
    ENDER True -- NXT None
    CFG __stack_chk_fail@PLT
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV .L00000BDE
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>3133 [sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' >]

<Symbol '.L00000C42' section='.text', address=3138>
    ENDER True -- NXT None
    CFG .L00000C0D
    GRAPH_NXT .L00000C0D
    GRAPH_PRV .L00000BDA
-- STACK00 ['.L0000013E.startup']
'X64_AMOCO.InstructionDEAD'>3138 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3141 [None]leaq      .LC25(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3148 [jmp]jmp       .L00000C0D
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000C0D' section='.text', address=3085>]

<Symbol '.L00000C4E' section='.text', type='padding', address=3150>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>3150 [None].p2align 3

<Symbol 'test_sync' section='.text', type='function', bind='globl', size=349, address=3152>
    ENDER False -- NXT .L00000CB8
    CFG inflateInit_@PLT
    GRAPH_NXT inflateInit_@PLT
    GRAPH_PRV .L0000013E.startup
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3152 [None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3154 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3156 [None]movq      %rsi, %r12
	 R['rip', 'rsi'] W['r12', 'rip']
	 D['r12', 'r13', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3159 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'rax', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3160 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'rax', 'rbp', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3161 [None]leaq      .LC22(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['r13', 'rax', 'rbp', 'rbx', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3168 [None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['r13', 'rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3172 [None]movq      %rdx, %rbp
	 R['rdx', 'rip'] W['rbp', 'rip']
	 D['r13', 'rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3175 [None]subq      $136, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r13', 'rax', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3182 [None]movq      %rcx, %r13
	 R['rcx', 'rip'] W['r13', 'rip']
	 D['r13', 'rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3185 [None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3194 [None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>3199 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>3201 [None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>3204 [None]movq      $28542640608928103, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>3214 [None]movq      %rdi, (%rsp)
	 R['rdi', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 120)
'X64_AMOCO.InstructionDEAD'>3218 [None]movq      %rax, (%rdx)
	 R['rax', 'rdx', 'rip'] W['MEM', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 120)
'X64_AMOCO.InstructionDEAD'>3221 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 120)
'X64_AMOCO.InstructionDEAD'>3224 [None]movl      $112, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%rbx': [0]}:(0, 120)
'X64_AMOCO.InstructionDEAD'>3229 [None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 64, 72, 120)
'X64_AMOCO.InstructionDEAD'>3234 [None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3243 [None]movl      $2, 8(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3251 [sub]call      inflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateInit_@PLT' >]

<Symbol '.L00000CB8' section='.text', address=3256>
    ENDER False -- NXT .L00000CBC
    CFG .L00000D3B
    CFG .L00000CBC
    GRAPH_NXT .L00000CBC
    GRAPH_NXT .L00000D3B
    GRAPH_PRV inflateInit_@PLT
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3256 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3258 [jcc]jne       .L00000D3B
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000D3B' section='.text', address=3387>]

<Symbol '.L00000CBC' section='.text', address=3260>
    ENDER False -- NXT .L00000CD4
    CFG inflate@PLT
    GRAPH_NXT inflate@PLT
    GRAPH_PRV .L00000CB8
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3260 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3262 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3265 [None]subl      $2, %r12d
	 R['r12', 'rip'] W['r12', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3269 [None]movq      %rbp, 24(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3274 [None]movl      %r13d, 32(%rsp)
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3279 [sub]call      inflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflate@PLT' >]

<Symbol '.L00000CD4' section='.text', address=3284>
    ENDER False -- NXT .L00000CE1
    CFG inflateSync@PLT
    GRAPH_NXT inflateSync@PLT
    GRAPH_PRV inflate@PLT
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3284 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3287 [None]movl      %r12d, 8(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3292 [sub]call      inflateSync@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateSync@PLT' >]

<Symbol '.L00000CE1' section='.text', address=3297>
    ENDER False -- NXT .L00000CE9
    CFG .L00000DA1
    CFG .L00000CE9
    GRAPH_NXT .L00000CE9
    GRAPH_NXT .L00000DA1
    GRAPH_PRV inflateSync@PLT
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3297 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3299 [jcc]jne       .L00000DA1
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000DA1' section='.text', address=3489>]

<Symbol '.L00000CE9' section='.text', address=3305>
    ENDER False -- NXT .L00000CF6
    CFG inflate@PLT
    GRAPH_NXT inflate@PLT
    GRAPH_PRV .L00000CE1
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3305 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3310 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3313 [sub]call      inflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflate@PLT' >]

<Symbol '.L00000CF6' section='.text', address=3318>
    ENDER False -- NXT .L00000CFB
    CFG .L00000D7A
    CFG .L00000CFB
    GRAPH_NXT .L00000CFB
    GRAPH_NXT .L00000D7A
    GRAPH_PRV inflate@PLT
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3318 [None]cmpl      $-3, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3321 [jcc]jne       .L00000D7A
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000D7A' section='.text', address=3450>]

<Symbol '.L00000CFB' section='.text', address=3323>
    ENDER False -- NXT .L00000D03
    CFG inflateEnd@PLT
    GRAPH_NXT inflateEnd@PLT
    GRAPH_PRV .L00000CF6
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3323 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3326 [sub]call      inflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateEnd@PLT' >]

<Symbol '.L00000D03' section='.text', address=3331>
    ENDER False -- NXT .L00000D07
    CFG .L00000D6E
    CFG .L00000D07
    GRAPH_NXT .L00000D07
    GRAPH_NXT .L00000D6E
    GRAPH_PRV inflateEnd@PLT
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3331 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3333 [jcc]jne       .L00000D6E
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000D6E' section='.text', address=3438>]

<Symbol '.L00000D07' section='.text', address=3335>
    ENDER False -- NXT .L00000D1D
    CFG __printf_chk@PLT
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV .L00000D03
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3335 [None]leaq      .LC38(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3342 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3344 [None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3347 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3352 [sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__printf_chk@PLT' >]

<Symbol '.L00000D1D' section='.text', address=3357>
    ENDER False -- NXT .L00000D2D
    CFG .L00000D69
    CFG .L00000D2D
    GRAPH_NXT .L00000D2D
    GRAPH_NXT .L00000D69
    GRAPH_PRV __printf_chk@PLT
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3357 [None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3362 [None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3371 [jcc]jne       .L00000D69
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000D69' section='.text', address=3433>]

<Symbol '.L00000D2D' section='.text', address=3373>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L00000152.startup
    GRAPH_PRV .L00000D1D
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3373 [None]addq      $136, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>3380 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'rbp', 'rbx']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>3381 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'rbp']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>3382 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13']
	 STACK:{'%rbx': [-160]}:(-160, -152, -136, -128, -96, -88, -80, -40)
'X64_AMOCO.InstructionDEAD'>3384 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13']
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
'X64_AMOCO.InstructionDEAD'>3386 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
	 dst=[None]

<Symbol '.L00000D3B' section='.text', address=3387>
    ENDER False -- NXT .L00000D45
    CFG .L00000D45
    GRAPH_NXT .L00000D45
    GRAPH_PRV .L00000CB8
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3387 [None]leaq      .LC26(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3394 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)

<Symbol '.L00000D45' section='.text', address=3397>
    ENDER False -- NXT .L00000D5F
    CFG __fprintf_chk@PLT
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L00000D3B
    GRAPH_PRV .L00000D6E
    GRAPH_PRV .L00000DA1
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3397 [None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3404 [None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3411 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3416 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3418 [sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' >]

<Symbol '.L00000D5F' section='.text', address=3423>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV __fprintf_chk@PLT
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3423 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3428 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00000D69' section='.text', address=3433>
    ENDER True -- NXT None
    CFG __stack_chk_fail@PLT
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV .L00000D1D
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3433 [sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' >]

<Symbol '.L00000D6E' section='.text', address=3438>
    ENDER True -- NXT None
    CFG .L00000D45
    GRAPH_NXT .L00000D45
    GRAPH_PRV .L00000D03
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3438 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3441 [None]leaq      .LC28(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3448 [jmp]jmp       .L00000D45
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000D45' section='.text', address=3397>]

<Symbol '.L00000D7A' section='.text', address=3450>
    ENDER False -- NXT .L00000D97
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L00000CF6
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3450 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3457 [None]leaq      .LC37(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3464 [None]movl      $33, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3469 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3474 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L00000D97' section='.text', address=3479>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV fwrite@PLT
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3479 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3484 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00000DA1' section='.text', address=3489>
    ENDER True -- NXT None
    CFG .L00000D45
    GRAPH_NXT .L00000D45
    GRAPH_PRV .L00000CE1
-- STACK00 ['.L00000152.startup']
'X64_AMOCO.InstructionDEAD'>3489 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3492 [None]leaq      .LC36(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3499 [jmp]jmp       .L00000D45
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000D45' section='.text', address=3397>]

<Symbol '.L00000DAD' section='.text', type='padding', address=3501>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>3501 [None].p2align 3

<Symbol 'test_dict_deflate' section='.text', type='function', bind='globl', size=379, address=3504>
    ENDER False -- NXT .L00000DFC
    CFG deflateInit_@PLT
    GRAPH_NXT deflateInit_@PLT
    GRAPH_PRV .L00000152.startup
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3504 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3506 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3507 [None]leaq      .LC22(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['r12', 'rax', 'rbp', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3514 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'rax', 'rbp', 'rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3515 [None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['r12', 'rax', 'rbp', 'rbx', 'rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3519 [None]movq      %rdi, %r12
	 R['rdi', 'rip'] W['r12', 'rip']
	 D['r12', 'rax', 'rbp', 'rbx', 'rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3522 [None]movq      %rsi, %rbp
	 R['rip', 'rsi'] W['rbp', 'rip']
	 D['rax', 'rbp', 'rbx', 'rcx', 'rdi', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3525 [None]movl      $112, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3530 [None]addq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rbx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3534 [None]movl      $9, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rbx', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3539 [None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rdi']
	 STACK:{'%rbx': [0]}:()
'X64_AMOCO.InstructionDEAD'>3542 [None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%rbx': [0]}:(80,)
'X64_AMOCO.InstructionDEAD'>3551 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%rbx': [0]}:(80,)
'X64_AMOCO.InstructionDEAD'>3554 [None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(80,)
'X64_AMOCO.InstructionDEAD'>3563 [None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>3568 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>3570 [None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3575 [sub]call      deflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol 'deflateInit_@PLT' >]

<Symbol '.L00000DFC' section='.text', address=3580>
    ENDER False -- NXT .L00000E04
    CFG .L00000F1F
    CFG .L00000E04
    GRAPH_NXT .L00000E04
    GRAPH_NXT .L00000F1F
    GRAPH_PRV deflateInit_@PLT
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3580 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3582 [jcc]jne       .L00000F1F
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L00000F1F' section='.text', address=3871>]

<Symbol '.L00000E04' section='.text', address=3588>
    ENDER False -- NXT .L00000E18
    CFG deflateSetDictionary@PLT
    GRAPH_NXT deflateSetDictionary@PLT
    GRAPH_PRV .L00000DFC
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3588 [None]leaq      dictionary(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3595 [None]movl      $6, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3600 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3603 [sub]call      deflateSetDictionary@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol 'deflateSetDictionary@PLT' >]

<Symbol '.L00000E18' section='.text', address=3608>
    ENDER False -- NXT .L00000E20
    CFG .L00000F13
    CFG .L00000E20
    GRAPH_NXT .L00000E20
    GRAPH_NXT .L00000F13
    GRAPH_PRV deflateSetDictionary@PLT
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3608 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3610 [jcc]jne       .L00000F13
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L00000F13' section='.text', address=3859>]

<Symbol '.L00000E20' section='.text', address=3616>
    ENDER False -- NXT .L00000E43
    CFG .L00000E43
    GRAPH_NXT .L00000E43
    GRAPH_PRV .L00000E18
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3616 [None]movq      96(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3621 [None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3628 [None]movq      %r12, 24(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rdx', 'rflags']
	 STACK:{'%rbx': [0]}:(24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3633 [None]movl      %ebp, 32(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rdx', 'rflags']
	 STACK:{'%rbx': [0]}:(24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3637 [None]movq      %rsi, (%rsp)
	 R['rip', 'rsi', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rdx', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3641 [None]movq      %rsi, %rdx
	 R['rip', 'rsi'] W['rdx', 'rip']
	 D['rcx', 'rdx', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3644 [None]movq      %rax, dictId(%rip)
	 R['rax', 'rip'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)

<Symbol '.L00000E43' section='.text', address=3651>
    ENDER False -- NXT .L00000E5A
    CFG .L00000E43
    CFG .L00000E5A
    GRAPH_NXT .L00000E43
    GRAPH_NXT .L00000E5A
    GRAPH_PRV .L00000E20
    GRAPH_PRV .L00000E43
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3651 [None]movl      (%rdx), %ecx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3653 [None]addq      $4, %rdx
	 R['rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3657 [None]leal      -16843009(%rcx), %eax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3663 [None]notl      %ecx
	 R['rcx', 'rip'] W['rcx', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3665 [None]andl      %ecx, %eax
	 R['rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3667 [None]andl      $-2139062144, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3672 [jcc]je        .L00000E43
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000E43' section='.text', address=3651>]

<Symbol '.L00000E5A' section='.text', address=3674>
    ENDER False -- NXT .L00000E8F
    CFG deflate@PLT
    GRAPH_NXT deflate@PLT
    GRAPH_PRV .L00000E43
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3674 [None]movl      %eax, %ecx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3676 [None]shrl      $16, %ecx
	 R['rcx', 'rflags', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3679 [None]testl     $32896, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rdi', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3684 [None]cmove     %ecx, %eax
	 R['rax', 'rcx', 'rflags', 'rip'] W['rax', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3687 [None]leaq      2(%rdx), %rcx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3691 [None]movl      %eax, %edi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3693 [None]cmove     %rcx, %rdx
	 R['rcx', 'rdx', 'rflags', 'rip'] W['rdx', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3697 [None]addb      %al, %dil
	 R['rax', 'rdi', 'rip'] W['rdi', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3700 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3703 [None]sbbq      $3, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3707 [None]subq      %rsi, %rdx
	 R['rdx', 'rip', 'rsi'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3710 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3715 [None]addl      $1, %edx
	 R['rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3718 [None]movl      %edx, 8(%rsp)
	 R['rdx', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3722 [sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' >]

<Symbol '.L00000E8F' section='.text', address=3727>
    ENDER False -- NXT .L00000E94
    CFG .L00000EB9
    CFG .L00000E94
    GRAPH_NXT .L00000E94
    GRAPH_NXT .L00000EB9
    GRAPH_PRV deflate@PLT
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3727 [None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3730 [jcc]jne       .L00000EB9
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000EB9' section='.text', address=3769>]

<Symbol '.L00000E94' section='.text', address=3732>
    ENDER False -- NXT .L00000E9C
    CFG deflateEnd@PLT
    GRAPH_NXT deflateEnd@PLT
    GRAPH_PRV .L00000E8F
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3732 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3735 [sub]call      deflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflateEnd@PLT' >]

<Symbol '.L00000E9C' section='.text', address=3740>
    ENDER False -- NXT .L00000EA0
    CFG .L00000EE0
    CFG .L00000EA0
    GRAPH_NXT .L00000EA0
    GRAPH_NXT .L00000EE0
    GRAPH_PRV deflateEnd@PLT
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3740 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3742 [jcc]jne       .L00000EE0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000EE0' section='.text', address=3808>]

<Symbol '.L00000EA0' section='.text', address=3744>
    ENDER False -- NXT .L00000EB0
    CFG .L00000F0E
    CFG .L00000EB0
    GRAPH_NXT .L00000EB0
    GRAPH_NXT .L00000F0E
    GRAPH_PRV .L00000E9C
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3744 [None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3749 [None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3758 [jcc]jne       .L00000F0E
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000F0E' section='.text', address=3854>]

<Symbol '.L00000EB0' section='.text', address=3760>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L00000167.startup
    GRAPH_PRV .L00000EA0
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3760 [None]subq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-128]}:(-128, -120, -104, -96, -64, -56, -48, -8)
'X64_AMOCO.InstructionDEAD'>3764 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'rbp', 'rbx']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>3765 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'rbp']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>3766 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>3768 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
	 dst=[None]

<Symbol '.L00000EB9' section='.text', address=3769>
    ENDER False -- NXT .L00000ED6
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L00000E8F
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3769 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3776 [None]leaq      .LC32(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3783 [None]movl      $35, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3788 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3793 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L00000ED6' section='.text', address=3798>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV fwrite@PLT
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3798 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3803 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00000EE0' section='.text', address=3808>
    ENDER False -- NXT .L00000EEA
    CFG .L00000EEA
    GRAPH_NXT .L00000EEA
    GRAPH_PRV .L00000E9C
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3808 [None]leaq      .LC25(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3815 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)

<Symbol '.L00000EEA' section='.text', address=3818>
    ENDER False -- NXT .L00000F04
    CFG __fprintf_chk@PLT
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L00000EE0
    GRAPH_PRV .L00000F13
    GRAPH_PRV .L00000F1F
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3818 [None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3825 [None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3832 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3837 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3839 [sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' >]

<Symbol '.L00000F04' section='.text', address=3844>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV __fprintf_chk@PLT
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3844 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3849 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00000F0E' section='.text', address=3854>
    ENDER True -- NXT None
    CFG __stack_chk_fail@PLT
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV .L00000EA0
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3854 [sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' >]

<Symbol '.L00000F13' section='.text', address=3859>
    ENDER True -- NXT None
    CFG .L00000EEA
    GRAPH_NXT .L00000EEA
    GRAPH_PRV .L00000E18
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3859 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3862 [None]leaq      .LC39(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3869 [jmp]jmp       .L00000EEA
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L00000EEA' section='.text', address=3818>]

<Symbol '.L00000F1F' section='.text', address=3871>
    ENDER True -- NXT None
    CFG .L00000EEA
    GRAPH_NXT .L00000EEA
    GRAPH_PRV .L00000DFC
-- STACK00 ['.L00000167.startup']
'X64_AMOCO.InstructionDEAD'>3871 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3874 [None]leaq      .LC23(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3881 [jmp]jmp       .L00000EEA
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L00000EEA' section='.text', address=3818>]

<Symbol '.L00000F2B' section='.text', type='padding', address=3883>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>3883 [None].p2align 3

<Symbol 'test_dict_inflate' section='.text', type='function', bind='globl', size=438, address=3888>
    ENDER False -- NXT .L00000F8C
    CFG inflateInit_@PLT
    GRAPH_NXT inflateInit_@PLT
    GRAPH_PRV .L00000167.startup
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>3888 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3890 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3891 [None]movq      %rdx, %r12
	 R['rdx', 'rip'] W['r12', 'rip']
	 D['r12', 'rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3894 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3895 [None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3899 [None]movq      %rcx, %rbp
	 R['rcx', 'rip'] W['rbp', 'rip']
	 D['rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3902 [None]addq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3906 [None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>3915 [None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>3920 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>3922 [None]movl      %esi, 8(%rsp)
	 R['rip', 'rsi', 'rsp'] W['MEM', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:(8, 120)
'X64_AMOCO.InstructionDEAD'>3926 [None]movq      $28542640608928103, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rbx', 'rsi']
	 STACK:{}:(8, 120)
'X64_AMOCO.InstructionDEAD'>3936 [None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rbx', 'rsi']
	 STACK:{'%rbx': [0]}:(8, 120)
'X64_AMOCO.InstructionDEAD'>3939 [None]leaq      .LC22(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(8, 120)
'X64_AMOCO.InstructionDEAD'>3946 [None]movq      %rax, (%rdx)
	 R['rax', 'rdx', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(8, 120)
'X64_AMOCO.InstructionDEAD'>3949 [None]movq      %rdi, (%rsp)
	 R['rdi', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 120)
'X64_AMOCO.InstructionDEAD'>3953 [None]movl      $112, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 120)
'X64_AMOCO.InstructionDEAD'>3958 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 120)
'X64_AMOCO.InstructionDEAD'>3961 [None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 80, 120)
'X64_AMOCO.InstructionDEAD'>3970 [None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3975 [sub]call      inflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateInit_@PLT' >]

<Symbol 'main' section='.text.startup', type='function', bind='globl', size=526, address=0>
    ENDER False -- NXT .L0000002F.startup
    CFG zlibVersion@PLT
    GRAPH_NXT zlibVersion@PLT
'X64_AMOCO.InstructionDEAD'>0 [None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2 [None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>4 [None]movq      %rsi, %r13
	 R['rip', 'rsi'] W['r13', 'rip']
	 D['r13', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>10 [None]movl      %edi, %r12d
	 R['rdi', 'rip'] W['r12', 'rip']
	 D['r12', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>13 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>14 [None]subq      $16, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>18 [None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>27 [None]movq      %rax, 8(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>32 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>34 [None]movq      $40000, (%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>42 [sub]call      zlibVersion@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'zlibVersion@PLT' >]

<Symbol '.L00000F8C' section='.text', address=3980>
    ENDER False -- NXT .L00000F94
    CFG .L000010D7
    CFG .L00000F94
    GRAPH_NXT .L00000F94
    GRAPH_NXT .L000010D7
    GRAPH_PRV inflateInit_@PLT
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>3980 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3982 [jcc]jne       .L000010D7
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol '.L000010D7' section='.text', address=4311>]

<Symbol '.L00000F94' section='.text', address=3988>
    ENDER True -- NXT None
    CFG .L00000FB8
    GRAPH_NXT .L00000FB8
    GRAPH_PRV .L00000F8C
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>3988 [None]movl      %ebp, 32(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3992 [None]movq      %r12, 24(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbp', 'rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>3997 [None]leaq      dictionary(%rip), %rbp
	 R['MEM', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4004 [jmp]jmp       .L00000FB8
	 R['rip'] W['rip']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000FB8' section='.text', address=4024>]

<Symbol '.L0000002F.startup' section='.text.startup', address=47>
    ENDER False -- NXT .L00000038.startup
    CFG .L000001CC.startup
    CFG .L00000038.startup
    GRAPH_NXT .L00000038.startup
    GRAPH_NXT .L000001CC.startup
    GRAPH_PRV zlibVersion@PLT
'X64_AMOCO.InstructionDEAD'>47 [None]cmpb      $49, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>50 [jcc]jne       .L000001CC.startup
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L000001CC.startup' section='.text.startup', address=460>]

<Symbol '.L00000038.startup' section='.text.startup', address=56>
    ENDER False -- NXT .L0000003D.startup
    CFG zlibVersion@PLT
    GRAPH_NXT zlibVersion@PLT
    GRAPH_PRV .L0000002F.startup
'X64_AMOCO.InstructionDEAD'>56 [sub]call      zlibVersion@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'zlibVersion@PLT' >]

<Symbol '.L00000FA6' section='.text', size=10, address=4006>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>4006 [None].p2align 4

<Symbol '.L00000FB0' section='.text', address=4016>
    ENDER False -- NXT .L00000FB8
    CFG .L0000104A
    CFG .L00000FB8
    GRAPH_NXT .L00000FB8
    GRAPH_NXT .L0000104A
    GRAPH_PRV .L00000FC7
    GRAPH_PRV .L00000FEE
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4016 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4018 [jcc]jne       .L0000104A
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L0000104A' section='.text', address=4170>]

<Symbol '.L00000FB8' section='.text', address=4024>
    ENDER False -- NXT .L00000FC2
    CFG inflate@PLT
    GRAPH_NXT inflate@PLT
    GRAPH_PRV .L00000F94
    GRAPH_PRV .L00000FB0
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4024 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4026 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4029 [sub]call      inflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflate@PLT' >]

<Symbol '.L00000FC2' section='.text', address=4034>
    ENDER False -- NXT .L00000FC7
    CFG .L00000FF0
    CFG .L00000FC7
    GRAPH_NXT .L00000FC7
    GRAPH_NXT .L00000FF0
    GRAPH_PRV inflate@PLT
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4034 [None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4037 [jcc]je        .L00000FF0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000FF0' section='.text', address=4080>]

<Symbol '.L00000FC7' section='.text', address=4039>
    ENDER False -- NXT .L00000FCC
    CFG .L00000FB0
    CFG .L00000FCC
    GRAPH_NXT .L00000FB0
    GRAPH_NXT .L00000FCC
    GRAPH_PRV .L00000FC2
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4039 [None]cmpl      $2, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4042 [jcc]jne       .L00000FB0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000FB0' section='.text', address=4016>]

<Symbol '.L00000FCC' section='.text', address=4044>
    ENDER False -- NXT .L00000FDE
    CFG .L00001078
    CFG .L00000FDE
    GRAPH_NXT .L00000FDE
    GRAPH_NXT .L00001078
    GRAPH_PRV .L00000FC7
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4044 [None]movq      dictId(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4051 [None]cmpq      %rax, 96(%rsp)
	 R['MEM', 'rax', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4056 [jcc]jne       .L00001078
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00001078' section='.text', address=4216>]

<Symbol '.L00000FDE' section='.text', address=4062>
    ENDER False -- NXT .L00000FEE
    CFG inflateSetDictionary@PLT
    GRAPH_NXT inflateSetDictionary@PLT
    GRAPH_PRV .L00000FCC
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4062 [None]movl      $6, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4067 [None]movq      %rbp, %rsi
	 R['rbp', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4070 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4073 [sub]call      inflateSetDictionary@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateSetDictionary@PLT' >]

<Symbol '.L00000FEE' section='.text', address=4078>
    ENDER True -- NXT None
    CFG .L00000FB0
    GRAPH_NXT .L00000FB0
    GRAPH_PRV inflateSetDictionary@PLT
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4078 [jmp]jmp       .L00000FB0
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00000FB0' section='.text', address=4016>]

<Symbol '.L00000FF0' section='.text', address=4080>
    ENDER False -- NXT .L00000FF8
    CFG inflateEnd@PLT
    GRAPH_NXT inflateEnd@PLT
    GRAPH_PRV .L00000FC2
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4080 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4083 [sub]call      inflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateEnd@PLT' >]

<Symbol '.L00000FF8' section='.text', address=4088>
    ENDER False -- NXT .L00001000
    CFG .L0000109F
    CFG .L00001000
    GRAPH_NXT .L00001000
    GRAPH_NXT .L0000109F
    GRAPH_PRV inflateEnd@PLT
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4088 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4090 [jcc]jne       .L0000109F
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L0000109F' section='.text', address=4255>]

<Symbol '.L00001000' section='.text', address=4096>
    ENDER False -- NXT .L0000100F
    CFG strcmp@PLT
    GRAPH_NXT strcmp@PLT
    GRAPH_PRV .L00000FF8
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4096 [None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4103 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4106 [sub]call      strcmp@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'strcmp@PLT' >]

<Symbol '.L0000100F' section='.text', address=4111>
    ENDER False -- NXT .L00001017
    CFG .L000010AB
    CFG .L00001017
    GRAPH_NXT .L00001017
    GRAPH_NXT .L000010AB
    GRAPH_PRV strcmp@PLT
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4111 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4113 [jcc]jne       .L000010AB
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L000010AB' section='.text', address=4267>]

<Symbol '.L00001017' section='.text', address=4119>
    ENDER False -- NXT .L0000102D
    CFG __printf_chk@PLT
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV .L0000100F
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4119 [None]leaq      .LC43(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4126 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4128 [None]movq      %r12, %rdx
	 R['r12', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4131 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4136 [sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__printf_chk@PLT' >]

<Symbol '.L0000102D' section='.text', address=4141>
    ENDER False -- NXT .L00001041
    CFG .L000010D2
    CFG .L00001041
    GRAPH_NXT .L00001041
    GRAPH_NXT .L000010D2
    GRAPH_PRV __printf_chk@PLT
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4141 [None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4146 [None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4155 [jcc]jne       .L000010D2
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L000010D2' section='.text', address=4306>]

<Symbol '.L00001041' section='.text', address=4161>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L0000017B.startup
    GRAPH_PRV .L0000102D
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4161 [None]subq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-128]}:(-128, -120, -104, -96, -64, -56, -48, -8)
'X64_AMOCO.InstructionDEAD'>4165 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'rbp', 'rbx']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>4166 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'rbp']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>4167 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>4169 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
	 dst=[None]

<Symbol '.L0000104A' section='.text', address=4170>
    ENDER False -- NXT .L00001054
    CFG .L00001054
    GRAPH_NXT .L00001054
    GRAPH_PRV .L00000FB0
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4170 [None]leaq      .LC41(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4177 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)

<Symbol '.L00001054' section='.text', address=4180>
    ENDER False -- NXT .L0000106E
    CFG __fprintf_chk@PLT
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L0000104A
    GRAPH_PRV .L0000109F
    GRAPH_PRV .L000010D7
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4180 [None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4187 [None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4194 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4199 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4201 [sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' >]

<Symbol '.L0000106E' section='.text', address=4206>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV __fprintf_chk@PLT
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4206 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4211 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L00001078' section='.text', address=4216>
    ENDER False -- NXT .L00001095
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L00000FCC
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4216 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4223 [None]leaq      .LC40(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4230 [None]movl      $21, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4235 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4240 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L00001095' section='.text', address=4245>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV fwrite@PLT
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4245 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4250 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L0000109F' section='.text', address=4255>
    ENDER True -- NXT None
    CFG .L00001054
    GRAPH_NXT .L00001054
    GRAPH_PRV .L00000FF8
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4255 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4258 [None]leaq      .LC28(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4265 [jmp]jmp       .L00001054
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L00001054' section='.text', address=4180>]

<Symbol '.L000010AB' section='.text', address=4267>
    ENDER False -- NXT .L000010C8
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L0000100F
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4267 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4274 [None]leaq      .LC42(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4281 [None]movl      $22, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4286 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4291 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L000010C8' section='.text', address=4296>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV fwrite@PLT
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4296 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4301 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L000010D2' section='.text', address=4306>
    ENDER True -- NXT None
    CFG __stack_chk_fail@PLT
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV .L0000102D
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4306 [sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' >]

<Symbol '.L000010D7' section='.text', address=4311>
    ENDER True -- NXT None
    CFG .L00001054
    GRAPH_NXT .L00001054
    GRAPH_PRV .L00000F8C
-- STACK00 ['.L0000017B.startup']
'X64_AMOCO.InstructionDEAD'>4311 [None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4314 [None]leaq      .LC26(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>4321 [jmp]jmp       .L00001054
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol '.L00001054' section='.text', address=4180>]

<Symbol '.L0000003D.startup' section='.text.startup', address=61>
    ENDER False -- NXT .L0000005B.startup
    CFG .L000001AA.startup
    CFG .L0000005B.startup
    GRAPH_NXT .L0000005B.startup
    GRAPH_NXT .L000001AA.startup
    GRAPH_PRV zlibVersion@PLT
'X64_AMOCO.InstructionDEAD'>61 [None]leaq      .LC22(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>68 [None]movq      %rax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rcx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>71 [None]movl      $6, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rcx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>76 [None]repz cmpsb     
	 R['MEM', 'rcx', 'rdi', 'rflags', 'rip', 'rsi'] W['rcx', 'rdi', 'rflags', 'rip', 'rsi']
	 D[]
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>78 [None]seta      %al
	 R['rax', 'rflags', 'rip'] W['rax', 'rip']
	 D[]
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>81 [None]sbbb      $0, %al
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>83 [None]testb     %al, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>85 [jcc]jne       .L000001AA.startup
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L000001AA.startup' section='.text.startup', address=426>]

<Symbol '.L0000005B.startup' section='.text.startup', address=91>
    ENDER False -- NXT .L00000060.startup
    CFG zlibCompileFlags@PLT
    GRAPH_NXT zlibCompileFlags@PLT
    GRAPH_PRV .L0000003D.startup
    GRAPH_PRV .L000001C7.startup
'X64_AMOCO.InstructionDEAD'>91 [sub]call      zlibCompileFlags@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'zlibCompileFlags@PLT' >]

<Symbol '.L00000060.startup' section='.text.startup', address=96>
    ENDER False -- NXT .L00000082.startup
    CFG __printf_chk@PLT
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV zlibCompileFlags@PLT
'X64_AMOCO.InstructionDEAD'>96 [None]leaq      .LC22(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>103 [None]leaq      .LC47(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['r8', 'rcx', 'rdi', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>110 [None]movq      %rax, %r8
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>113 [None]movl      $4736, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>118 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>123 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>125 [sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '__printf_chk@PLT' >]

<Symbol '.L00000082.startup' section='.text.startup', address=130>
    ENDER False -- NXT .L00000093.startup
    CFG calloc@PLT
    GRAPH_NXT calloc@PLT
    GRAPH_PRV __printf_chk@PLT
'X64_AMOCO.InstructionDEAD'>130 [None]movq      (%rsp), %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip']
	 D['r14', 'rdi', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>134 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>139 [None]movl      %r14d, %edi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>142 [sub]call      calloc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'calloc@PLT' >]

<Symbol '.L00000093.startup' section='.text.startup', address=147>
    ENDER False -- NXT .L000000A5.startup
    CFG calloc@PLT
    GRAPH_NXT calloc@PLT
    GRAPH_PRV calloc@PLT
'X64_AMOCO.InstructionDEAD'>147 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rbx', 'rdi', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>152 [None]movq      %rax, %rbx
	 R['rax', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>155 [None]movl      $40000, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>160 [sub]call      calloc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'calloc@PLT' >]

<Symbol '.L000000A5.startup' section='.text.startup', address=165>
    ENDER False -- NXT .L000000B1.startup
    CFG .L000001F8.startup
    CFG .L000000B1.startup
    GRAPH_NXT .L000000B1.startup
    GRAPH_NXT .L000001F8.startup
    GRAPH_PRV calloc@PLT
'X64_AMOCO.InstructionDEAD'>165 [None]testq     %rbx, %rbx
	 R['rbx', 'rip'] W['rflags', 'rip']
	 D['rbp', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>168 [None]movq      %rax, %rbp
	 R['rax', 'rip'] W['rbp', 'rip']
	 D['rbp']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>171 [jcc]je        .L000001F8.startup
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L000001F8.startup' section='.text.startup', address=504>]

<Symbol '.L000000B1.startup' section='.text.startup', address=177>
    ENDER False -- NXT .L000000BA.startup
    CFG .L000001F8.startup
    CFG .L000000BA.startup
    GRAPH_NXT .L000000BA.startup
    GRAPH_NXT .L000001F8.startup
    GRAPH_PRV .L000000A5.startup
'X64_AMOCO.InstructionDEAD'>177 [None]testq     %rax, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>180 [jcc]je        .L000001F8.startup
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L000001F8.startup' section='.text.startup', address=504>]

<Symbol '.L000000BA.startup' section='.text.startup', address=186>
    ENDER False -- NXT .L000000CD.startup
    CFG test_compress
    GRAPH_NXT test_compress
    GRAPH_PRV .L000000B1.startup
'X64_AMOCO.InstructionDEAD'>186 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>189 [None]movl      $40000, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>194 [None]movq      %rax, %rdx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>197 [None]movq      %r14, %rsi
	 R['r14', 'rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>200 [sub]call      test_compress
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_compress' section='.text', type='function', bind='globl', size=300, address=0>]

<Symbol '.L000000CD.startup' section='.text.startup', address=205>
    ENDER False -- NXT .L000000DA.startup
    CFG .L000000DE.startup
    CFG .L000000DA.startup
    GRAPH_NXT .L000000DA.startup
    GRAPH_NXT .L000000DE.startup
    GRAPH_PRV .L000000C4
'X64_AMOCO.InstructionDEAD'>205 [None]cmpl      $1, %r12d
	 R['r12', 'rip'] W['rflags', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>209 [None]leaq      .LC44(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>216 [jcc]jle       .L000000DE.startup
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L000000DE.startup' section='.text.startup', address=222>]

<Symbol '.L000000DA.startup' section='.text.startup', address=218>
    ENDER False -- NXT .L000000DE.startup
    CFG .L000000DE.startup
    GRAPH_NXT .L000000DE.startup
    GRAPH_PRV .L000000CD.startup
'X64_AMOCO.InstructionDEAD'>218 [None]movq      8(%r13), %rdi
	 R['MEM', 'r13', 'rip'] W['rdi', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)

<Symbol '.L000000DE.startup' section='.text.startup', address=222>
    ENDER False -- NXT .L000000EB.startup
    CFG test_gzio
    GRAPH_NXT test_gzio
    GRAPH_PRV .L000000CD.startup
    GRAPH_PRV .L000000DA.startup
'X64_AMOCO.InstructionDEAD'>222 [None]movl      $40000, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rax', 'rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>227 [None]movq      %rbp, %rsi
	 R['rbp', 'rip'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>230 [sub]call      test_gzio
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_gzio' section='.text', type='function', bind='globl', size=948, address=304>]

<Symbol '.L000000EB.startup' section='.text.startup', address=235>
    ENDER False -- NXT .L000000F7.startup
    CFG test_deflate
    GRAPH_NXT test_deflate
    GRAPH_PRV .L00000360
'X64_AMOCO.InstructionDEAD'>235 [None]movq      (%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>239 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>242 [sub]call      test_deflate
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_deflate' section='.text', type='function', bind='globl', size=370, address=1264>]

<Symbol '.L000000F7.startup' section='.text.startup', address=247>
    ENDER False -- NXT .L0000010B.startup
    CFG test_inflate
    GRAPH_NXT test_inflate
    GRAPH_PRV .L0000060A
'X64_AMOCO.InstructionDEAD'>247 [None]movq      (%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>251 [None]movl      $40000, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>256 [None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>259 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>262 [sub]call      test_inflate
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_inflate' section='.text', type='function', bind='globl', size=378, address=1648>]

<Symbol '.L0000010B.startup' section='.text.startup', address=267>
    ENDER False -- NXT .L0000011F.startup
    CFG test_large_deflate
    GRAPH_NXT test_large_deflate
    GRAPH_PRV .L0000076A
'X64_AMOCO.InstructionDEAD'>267 [None]movq      (%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>271 [None]movl      $40000, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>276 [None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>279 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>282 [sub]call      test_large_deflate
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_large_deflate' section='.text', type='function', bind='globl', size=431, address=2032>]

<Symbol '.L0000011F.startup' section='.text.startup', address=287>
    ENDER False -- NXT .L00000133.startup
    CFG test_large_inflate
    GRAPH_NXT test_large_inflate
    GRAPH_PRV .L000008F9
'X64_AMOCO.InstructionDEAD'>287 [None]movq      (%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>291 [None]movl      $40000, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>296 [None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>299 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>302 [sub]call      test_large_inflate
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_large_inflate' section='.text', type='function', bind='globl', size=327, address=2464>]

<Symbol '.L00000133.startup' section='.text.startup', address=307>
    ENDER False -- NXT .L0000013E.startup
    CFG test_flush
    GRAPH_NXT test_flush
    GRAPH_PRV .L00000A6B
'X64_AMOCO.InstructionDEAD'>307 [None]movq      %rsp, %rsi
	 R['rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>310 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>313 [sub]call      test_flush
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{'%rsi': [0]}:(0, 8)
	 dst=[<Symbol 'test_flush' section='.text', type='function', bind='globl', size=350, address=2800>]

<Symbol '.L0000013E.startup' section='.text.startup', address=318>
    ENDER False -- NXT .L00000152.startup
    CFG test_sync
    GRAPH_NXT test_sync
    GRAPH_PRV .L00000BF6
'X64_AMOCO.InstructionDEAD'>318 [None]movq      (%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>322 [None]movl      $40000, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>327 [None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>330 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>333 [sub]call      test_sync
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_sync' section='.text', type='function', bind='globl', size=349, address=3152>]

<Symbol '.L00000152.startup' section='.text.startup', address=338>
    ENDER False -- NXT .L00000167.startup
    CFG test_dict_deflate
    GRAPH_NXT test_dict_deflate
    GRAPH_PRV .L00000D2D
'X64_AMOCO.InstructionDEAD'>338 [None]movl      $40000, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>343 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>346 [None]movq      $40000, (%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>354 [sub]call      test_dict_deflate
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_dict_deflate' section='.text', type='function', bind='globl', size=379, address=3504>]

<Symbol '.L00000167.startup' section='.text.startup', address=359>
    ENDER False -- NXT .L0000017B.startup
    CFG test_dict_inflate
    GRAPH_NXT test_dict_inflate
    GRAPH_PRV .L00000EB0
'X64_AMOCO.InstructionDEAD'>359 [None]movq      (%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>363 [None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>366 [None]movl      $40000, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>371 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>374 [sub]call      test_dict_inflate
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_dict_inflate' section='.text', type='function', bind='globl', size=438, address=3888>]

<Symbol '.L0000017B.startup' section='.text.startup', address=379>
    ENDER False -- NXT .L00000183.startup
    CFG free@PLT
    GRAPH_NXT free@PLT
    GRAPH_PRV .L00001041
'X64_AMOCO.InstructionDEAD'>379 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>382 [sub]call      free@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'free@PLT' >]

<Symbol '.L00000183.startup' section='.text.startup', address=387>
    ENDER False -- NXT .L0000018B.startup
    CFG free@PLT
    GRAPH_NXT free@PLT
    GRAPH_PRV free@PLT
'X64_AMOCO.InstructionDEAD'>387 [None]movq      %rbp, %rdi
	 R['rbp', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>390 [sub]call      free@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'free@PLT' >]

<Symbol '.L0000018B.startup' section='.text.startup', address=395>
    ENDER False -- NXT .L0000019D.startup
    CFG .L000001F3.startup
    CFG .L0000019D.startup
    GRAPH_NXT .L0000019D.startup
    GRAPH_NXT .L000001F3.startup
    GRAPH_PRV free@PLT
'X64_AMOCO.InstructionDEAD'>395 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>397 [None]movq      8(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>402 [None]xorq      %fs:40, %rdx
	 R['MEM', 'rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D[]
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>411 [jcc]jne       .L000001F3.startup
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L000001F3.startup' section='.text.startup', address=499>]

<Symbol '.L0000019D.startup' section='.text.startup', address=413>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV .L0000018B.startup
'X64_AMOCO.InstructionDEAD'>413 [None]addq      $16, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx', 'rflags']
	 STACK:{}:(-16, -8)
'X64_AMOCO.InstructionDEAD'>417 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:(-24, -16)
'X64_AMOCO.InstructionDEAD'>418 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{}:(-32, -24)
'X64_AMOCO.InstructionDEAD'>419 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{}:(-40, -32)
'X64_AMOCO.InstructionDEAD'>421 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{}:(-48, -40)
'X64_AMOCO.InstructionDEAD'>423 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{}:(-56, -48)
'X64_AMOCO.InstructionDEAD'>425 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{}:(-56, -48)
	 dst=[None]

<Symbol '.L000001AA.startup' section='.text.startup', address=426>
    ENDER False -- NXT .L000001C7.startup
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L0000003D.startup
'X64_AMOCO.InstructionDEAD'>426 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>433 [None]leaq      .LC46(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>440 [None]movl      $32, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>445 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>450 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L000001C7.startup' section='.text.startup', address=455>
    ENDER True -- NXT None
    CFG .L0000005B.startup
    GRAPH_NXT .L0000005B.startup
    GRAPH_PRV fwrite@PLT
'X64_AMOCO.InstructionDEAD'>455 [jmp]jmp       .L0000005B.startup
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L0000005B.startup' section='.text.startup', address=91>]

<Symbol '.L000001CC.startup' section='.text.startup', address=460>
    ENDER False -- NXT .L000001E9.startup
    CFG fwrite@PLT
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L0000002F.startup
'X64_AMOCO.InstructionDEAD'>460 [None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>467 [None]leaq      .LC45(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>474 [None]movl      $26, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>479 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>484 [sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'fwrite@PLT' >]

<Symbol '.L000001E9.startup' section='.text.startup', address=489>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV fwrite@PLT
'X64_AMOCO.InstructionDEAD'>489 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>494 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.L000001F3.startup' section='.text.startup', address=499>
    ENDER True -- NXT None
    CFG __stack_chk_fail@PLT
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV .L0000018B.startup
'X64_AMOCO.InstructionDEAD'>499 [sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '__stack_chk_fail@PLT' >]

<Symbol '.L000001F8.startup' section='.text.startup', address=504>
    ENDER False -- NXT .L00000204.startup
    CFG puts@PLT
    GRAPH_NXT puts@PLT
    GRAPH_PRV .L000000A5.startup
    GRAPH_PRV .L000000B1.startup
'X64_AMOCO.InstructionDEAD'>504 [None]leaq      .LC48(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>511 [sub]call      puts@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'puts@PLT' >]

<Symbol '.L00000204.startup' section='.text.startup', address=516>
    ENDER True -- NXT None
    CFG exit@PLT
    GRAPH_NXT exit@PLT
    GRAPH_PRV puts@PLT
'X64_AMOCO.InstructionDEAD'>516 [None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>521 [sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'exit@PLT' >]

<Symbol '.LC0' section='.rodata.str1.1', bind='local', size=0, address=0>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>0 .string	"compress"

<Symbol '.LC1' section='.rodata.str1.1', bind='local', size=0, address=9>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>9 .string	"%s error: %d\n"

<Symbol '.LC2' section='.rodata.str1.1', bind='local', size=0, address=23>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>23 .string	"uncompress"

<Symbol '.LC3' section='.rodata.str1.1', bind='local', size=0, address=34>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>34 .string	"bad uncompress\n"

<Symbol '.LC4' section='.rodata.str1.1', bind='local', size=0, address=50>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>50 .string	"uncompress(): %s\n"

<Symbol '.LC5' section='.rodata.str1.1', bind='local', size=0, address=68>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>68 .string	"wb"

<Symbol '.LC6' section='.rodata.str1.1', bind='local', size=0, address=71>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>71 .string	"gzopen error\n"

<Symbol '.LC7' section='.rodata.str1.1', bind='local', size=0, address=85>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>85 .string	"ello"

<Symbol '.LC8' section='.rodata.str1.1', bind='local', size=0, address=90>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>90 .string	"gzputs err: %s\n"

<Symbol '.LC9' section='.rodata.str1.1', bind='local', size=0, address=106>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>106 .string	"hello"

<Symbol '.LC10' section='.rodata.str1.1', bind='local', size=0, address=112>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>112 .string	", %s!"

<Symbol '.LC11' section='.rodata.str1.1', bind='local', size=0, address=118>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>118 .string	"gzprintf err: %s\n"

<Symbol '.LC12' section='.rodata.str1.1', bind='local', size=0, address=136>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>136 .string	"rb"

<Symbol '.LC13' section='.rodata.str1.1', bind='local', size=0, address=139>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>139 .string	"gzread err: %s\n"

<Symbol '.LC14' section='.rodata.str1.1', bind='local', size=0, address=155>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>155 .string	"bad gzread: %s\n"

<Symbol '.LC15' section='.rodata.str1.1', bind='local', size=0, address=171>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>171 .string	"gzread(): %s\n"

<Symbol '.LC17' section='.rodata.str1.1', bind='local', size=0, address=185>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>185 .string	"gzgetc error\n"

<Symbol '.LC18' section='.rodata.str1.1', bind='local', size=0, address=199>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>199 .string	"gzungetc error\n"

<Symbol '.LC19' section='.rodata.str1.1', bind='local', size=0, address=215>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>215 .string	"gzgets err after gzseek: %s\n"

<Symbol '.LC20' section='.rodata.str1.1', bind='local', size=0, address=244>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>244 .string	"bad gzgets after gzseek\n"

<Symbol '.LC21' section='.rodata.str1.1', bind='local', size=0, address=269>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>269 .string	"gzgets() after gzseek: %s\n"

<Symbol '.LC16' section='.rodata.str1.8', bind='local', size=0, address=0>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>0 .string	"gzseek error, pos=%ld, gztell=%ld\n"

<Symbol '.LC22' section='.rodata.str1.1', bind='local', size=0, address=296>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>296 .string	"1.2.8"

<Symbol '.LC23' section='.rodata.str1.1', bind='local', size=0, address=302>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>302 .string	"deflateInit"

<Symbol '.LC24' section='.rodata.str1.1', bind='local', size=0, address=314>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>314 .string	"deflate"

<Symbol '.LC25' section='.rodata.str1.1', bind='local', size=0, address=322>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>322 .string	"deflateEnd"

<Symbol '.LC26' section='.rodata.str1.1', bind='local', size=0, address=333>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>333 .string	"inflateInit"

<Symbol '.LC27' section='.rodata.str1.1', bind='local', size=0, address=345>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>345 .string	"inflate"

<Symbol '.LC28' section='.rodata.str1.1', bind='local', size=0, address=353>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>353 .string	"inflateEnd"

<Symbol '.LC29' section='.rodata.str1.1', bind='local', size=0, address=364>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>364 .string	"bad inflate\n"

<Symbol '.LC30' section='.rodata.str1.1', bind='local', size=0, address=377>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>377 .string	"inflate(): %s\n"

<Symbol '.LC00000023.str1.8' section='.rodata.str1.8', type='padding', address=35>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>35 .zero	5

<Symbol '.LC32' section='.rodata.str1.8', bind='local', align=8, size=0, address=40>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>40 .string	"deflate should report Z_STREAM_END\n"

<Symbol '.LC31' section='.rodata.str1.1', bind='local', size=0, address=392>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>392 .string	"deflate not greedy\n"

<Symbol '.LC33' section='.rodata.str1.1', bind='local', size=0, address=412>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>412 .string	"large inflate"

<Symbol '.LC34' section='.rodata.str1.1', bind='local', size=0, address=426>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>426 .string	"bad large inflate: %ld\n"

<Symbol '.LC35' section='.rodata.str1.1', bind='local', size=0, address=450>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>450 .string	"large_inflate(): OK"

<Symbol '.LC36' section='.rodata.str1.1', bind='local', size=0, address=470>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>470 .string	"inflateSync"

<Symbol '.LC38' section='.rodata.str1.1', bind='local', size=0, address=482>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>482 .string	"after inflateSync(): hel%s\n"

<Symbol '.LC0000004C.str1.8' section='.rodata.str1.8', type='padding', address=76>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>76 .long	0

<Symbol '.LC37' section='.rodata.str1.8', bind='local', align=8, size=0, address=80>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>80 .string	"inflate should report DATA_ERROR\n"

<Symbol '.LC39' section='.rodata.str1.1', bind='local', size=0, address=510>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>510 .string	"deflateSetDictionary"

<Symbol '.LC40' section='.rodata.str1.1', bind='local', size=0, address=531>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>531 .string	"unexpected dictionary"

<Symbol '.LC41' section='.rodata.str1.1', bind='local', size=0, address=553>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>553 .string	"inflate with dict"

<Symbol '.LC42' section='.rodata.str1.1', bind='local', size=0, address=571>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>571 .string	"bad inflate with dict\n"

<Symbol '.LC43' section='.rodata.str1.1', bind='local', size=0, address=594>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>594 .string	"inflate with dictionary: %s\n"

<Symbol '.LC00000072.str1.8' section='.rodata.str1.8', type='padding', address=114>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>114 .zero	6

<Symbol '.LC46' section='.rodata.str1.8', bind='local', align=8, size=0, address=120>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>120 .string	"warning: different zlib version\n"

<Symbol '.LC00000099.str1.8' section='.rodata.str1.8', type='padding', address=153>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>153 .zero	7

<Symbol '.LC47' section='.rodata.str1.8', bind='local', align=8, size=0, address=160>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>160 .string	"zlib version %s = 0x%04x, compile flags = 0x%lx\n"

<Symbol '.LC44' section='.rodata.str1.1', bind='local', size=0, address=623>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>623 .string	"foo.gz"

<Symbol '.LC45' section='.rodata.str1.1', bind='local', size=0, address=630>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>630 .string	"incompatible zlib version\n"

<Symbol '.LC48' section='.rodata.str1.1', bind='local', size=0, address=657>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>657 .string	"out of memory"

<Symbol 'hello' section='.data', type='object', bind='globl', size=14, address=0>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>0 .string	"hello, hello!"

<Symbol 'dictionary' section='.rodata', type='object', bind='globl', size=6, address=0>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>0 .string	"hello"

<Symbol 'dictId' section='COM', type='object', bind='globl', align=8, size=8, address=339>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>339 .zero	8

<Symbol '_GLOBAL_OFFSET_TABLE_' bind='globl'>

<Symbol '__fprintf_chk' bind='globl'>

<Symbol '__fprintf_chk@PLT' >
    GRAPH_NXT .L000000EF
    GRAPH_NXT .L000003D2
    GRAPH_NXT .L00000459
    GRAPH_NXT .L0000063B
    GRAPH_NXT .L0000079C
    GRAPH_NXT .L0000092A
    GRAPH_NXT .L00000A9C
    GRAPH_NXT .L00000AD1
    GRAPH_NXT .L00000C27
    GRAPH_NXT .L00000D5F
    GRAPH_NXT .L00000F04
    GRAPH_NXT .L0000106E
    GRAPH_PRV .L000000D5
    GRAPH_PRV .L000003B2
    GRAPH_PRV .L00000446
    GRAPH_PRV .L00000621
    GRAPH_PRV .L00000782
    GRAPH_PRV .L00000910
    GRAPH_PRV .L00000A82
    GRAPH_PRV .L00000AB7
    GRAPH_PRV .L00000C0D
    GRAPH_PRV .L00000D45
    GRAPH_PRV .L00000EEA
    GRAPH_PRV .L00001054
-- STACK00 ['.L000000EF', '.L000000CD.startup']
-- STACK01 ['.L000003D2', '.L000000EB.startup']
-- STACK02 ['.L00000459']
-- STACK03 ['.L0000063B', '.L000000F7.startup']
-- STACK04 ['.L0000079C', '.L0000010B.startup']
-- STACK05 ['.L0000092A', '.L0000011F.startup']
-- STACK06 ['.L00000A9C', '.L00000133.startup']
-- STACK07 ['.L00000AD1']
-- STACK08 ['.L00000C27', '.L0000013E.startup']
-- STACK09 ['.L00000D5F', '.L00000152.startup']
-- STACK10 ['.L00000F04', '.L00000167.startup']
-- STACK11 ['.L0000106E', '.L0000017B.startup']

<Symbol '__printf_chk' bind='globl'>

<Symbol '__printf_chk@PLT' >
    GRAPH_NXT .L00000082.startup
    GRAPH_NXT .L000000C4
    GRAPH_NXT .L00000280
    GRAPH_NXT .L00000344
    GRAPH_NXT .L0000075A
    GRAPH_NXT .L00000D1D
    GRAPH_NXT .L0000102D
    GRAPH_PRV .L00000060.startup
    GRAPH_PRV .L000000AE
    GRAPH_PRV .L0000026A
    GRAPH_PRV .L0000032E
    GRAPH_PRV .L00000744
    GRAPH_PRV .L00000D07
    GRAPH_PRV .L00001017
-- STACK00 ['.L00000082.startup']
-- STACK01 ['.L000000C4', '.L000000CD.startup']
-- STACK02 ['.L00000280', '.L000000EB.startup']
-- STACK03 ['.L00000344']
-- STACK04 ['.L0000075A', '.L0000010B.startup']
-- STACK05 ['.L00000D1D', '.L00000152.startup']
-- STACK06 ['.L0000102D', '.L0000017B.startup']

<Symbol '__stack_chk_fail' bind='globl'>

<Symbol '__stack_chk_fail@PLT' >
    GRAPH_PRV .L000001F3.startup
    GRAPH_PRV .L000003DC
    GRAPH_PRV .L00000651
    GRAPH_PRV .L000007B2
    GRAPH_PRV .L00000940
    GRAPH_PRV .L00000AB2
    GRAPH_PRV .L00000C3D
    GRAPH_PRV .L00000D69
    GRAPH_PRV .L00000F0E
    GRAPH_PRV .L000010D2
-- STACK00 ['   0x1f8-.text.startup-.L000001F3.startup']
-- STACK01 ['   0x3e1-.text-.L000003DC', '.L000000EB.startup']
-- STACK02 ['   0x656-.text-.L00000651', '.L000000F7.startup']
-- STACK03 ['   0x7b7-.text-.L000007B2', '.L0000010B.startup']
-- STACK04 ['   0x945-.text-.L00000940', '.L0000011F.startup']
-- STACK05 ['   0xab7-.text-.L00000AB2', '.L00000133.startup']
-- STACK06 ['   0xc42-.text-.L00000C3D', '.L0000013E.startup']
-- STACK07 ['   0xd6e-.text-.L00000D69', '.L00000152.startup']
-- STACK08 ['   0xf13-.text-.L00000F0E', '.L00000167.startup']
-- STACK09 ['  0x10d7-.text-.L000010D2', '.L0000017B.startup']

<Symbol 'calloc' bind='globl'>

<Symbol 'calloc@PLT' >
    GRAPH_NXT .L00000093.startup
    GRAPH_NXT .L000000A5.startup
    GRAPH_PRV .L00000082.startup
    GRAPH_PRV .L00000093.startup
-- STACK00 ['.L00000093.startup']
-- STACK01 ['.L000000A5.startup']

<Symbol 'compress' bind='globl'>

<Symbol 'compress@PLT' >
    GRAPH_NXT .L0000006F
    GRAPH_PRV .L00000036
-- STACK00 ['.L0000006F', '.L000000CD.startup']

<Symbol 'deflate' bind='globl'>

<Symbol 'deflate@PLT' >
    GRAPH_NXT .L000005C1
    GRAPH_NXT .L000005E9
    GRAPH_NXT .L0000086A
    GRAPH_NXT .L0000089E
    GRAPH_NXT .L000008C7
    GRAPH_NXT .L000008D8
    GRAPH_NXT .L00000BAF
    GRAPH_NXT .L00000BCD
    GRAPH_NXT .L00000E8F
    GRAPH_PRV .L000005A7
    GRAPH_PRV .L000005D4
    GRAPH_PRV .L0000084E
    GRAPH_PRV .L0000088A
    GRAPH_PRV .L000008B4
    GRAPH_PRV .L000008CB
    GRAPH_PRV .L00000B8A
    GRAPH_PRV .L00000BB3
    GRAPH_PRV .L00000E5A
-- STACK00 ['.L000005C1', '.L000000F7.startup']
-- STACK01 ['.L000005E9']
-- STACK02 ['.L0000086A', '.L0000011F.startup']
-- STACK03 ['.L0000089E']
-- STACK04 ['.L000008C7']
-- STACK05 ['.L000008D8']
-- STACK06 ['.L00000BAF', '.L0000013E.startup']
-- STACK07 ['.L00000BCD']
-- STACK08 ['.L00000E8F', '.L00000167.startup']

<Symbol 'deflateEnd' bind='globl'>

<Symbol 'deflateEnd@PLT' >
    GRAPH_NXT .L000005F6
    GRAPH_NXT .L000008E5
    GRAPH_NXT .L00000BDA
    GRAPH_NXT .L00000E9C
    GRAPH_PRV .L000005EE
    GRAPH_PRV .L000008DD
    GRAPH_PRV .L00000BD2
    GRAPH_PRV .L00000E94
-- STACK00 ['.L000005F6', '.L000000F7.startup']
-- STACK01 ['.L000008E5', '.L0000011F.startup']
-- STACK02 ['.L00000BDA', '.L0000013E.startup']
-- STACK03 ['.L00000E9C', '.L00000167.startup']

<Symbol 'deflateInit_' bind='globl'>

<Symbol 'deflateInit_@PLT' >
    GRAPH_NXT .L00000589
    GRAPH_NXT .L00000846
    GRAPH_NXT .L00000B86
    GRAPH_NXT .L00000DFC
    GRAPH_PRV .L00000537
    GRAPH_PRV .L00000B36
    GRAPH_PRV test_dict_deflate
    GRAPH_PRV test_large_deflate
-- STACK00 ['.L00000589', '.L000000F7.startup']
-- STACK01 ['.L00000846', '.L0000011F.startup']
-- STACK02 ['.L00000B86', '.L0000013E.startup']
-- STACK03 ['.L00000DFC', '.L00000167.startup']

<Symbol 'deflateParams' bind='globl'>

<Symbol 'deflateParams@PLT' >
    GRAPH_NXT .L0000088A
    GRAPH_NXT .L000008B4
    GRAPH_PRV .L0000087E
    GRAPH_PRV .L000008A2
-- STACK00 ['.L0000088A', '.L0000011F.startup']
-- STACK01 ['.L000008B4']

<Symbol 'deflateSetDictionary' bind='globl'>

<Symbol 'deflateSetDictionary@PLT' >
    GRAPH_NXT .L00000E18
    GRAPH_PRV .L00000E04
-- STACK00 ['.L00000E18', '.L00000167.startup']

<Symbol 'example.c' bind='file'>

<Symbol 'exit' bind='globl'>

<Symbol 'exit@PLT' >
    GRAPH_PRV .L000000EF
    GRAPH_PRV .L00000116
    GRAPH_PRV .L000001E9.startup
    GRAPH_PRV .L00000204.startup
    GRAPH_PRV .L000003A0
    GRAPH_PRV .L000003D2
    GRAPH_PRV .L000003FE
    GRAPH_PRV .L00000425
    GRAPH_PRV .L00000459
    GRAPH_PRV .L000004BE
    GRAPH_PRV .L0000063B
    GRAPH_PRV .L0000079C
    GRAPH_PRV .L000007D4
    GRAPH_PRV .L0000092A
    GRAPH_PRV .L0000096E
    GRAPH_PRV .L00000995
    GRAPH_PRV .L00000A9C
    GRAPH_PRV .L00000AD1
    GRAPH_PRV .L00000C27
    GRAPH_PRV .L00000D5F
    GRAPH_PRV .L00000D97
    GRAPH_PRV .L00000ED6
    GRAPH_PRV .L00000F04
    GRAPH_PRV .L0000106E
    GRAPH_PRV .L00001095
    GRAPH_PRV .L000010C8
-- STACK00 ['    0xf9-.text-.L000000EF', '.L000000CD.startup']
-- STACK01 ['   0x120-.text-.L00000116']
-- STACK02 ['   0x1f3-.text.startup-.L000001E9.startup']
-- STACK03 ['   0x20e-.text.startup-.L00000204.startup']
-- STACK04 ['   0x3aa-.text-.L000003A0', '.L000000EB.startup']
-- STACK05 ['   0x3dc-.text-.L000003D2']
-- STACK06 ['   0x408-.text-.L000003FE']
-- STACK07 ['   0x42f-.text-.L00000425']
-- STACK08 ['   0x463-.text-.L00000459']
-- STACK09 ['   0x4c8-.text-.L000004BE']
-- STACK10 ['   0x645-.text-.L0000063B', '.L000000F7.startup']
-- STACK11 ['   0x7a6-.text-.L0000079C', '.L0000010B.startup']
-- STACK12 ['   0x7de-.text-.L000007D4']
-- STACK13 ['   0x934-.text-.L0000092A', '.L0000011F.startup']
-- STACK14 ['   0x978-.text-.L0000096E']
-- STACK15 ['   0x99f-.text-.L00000995']
-- STACK16 ['   0xaa6-.text-.L00000A9C', '.L00000133.startup']
-- STACK17 ['   0xadb-.text-.L00000AD1']
-- STACK18 ['   0xc31-.text-.L00000C27', '.L0000013E.startup']
-- STACK19 ['   0xd69-.text-.L00000D5F', '.L00000152.startup']
-- STACK20 ['   0xda1-.text-.L00000D97']
-- STACK21 ['   0xee0-.text-.L00000ED6', '.L00000167.startup']
-- STACK22 ['   0xf0e-.text-.L00000F04']
-- STACK23 ['  0x1078-.text-.L0000106E', '.L0000017B.startup']
-- STACK24 ['  0x109f-.text-.L00001095']
-- STACK25 ['  0x10d2-.text-.L000010C8']

<Symbol 'free' bind='globl'>

<Symbol 'free@PLT' >
    GRAPH_NXT .L00000183.startup
    GRAPH_NXT .L0000018B.startup
    GRAPH_PRV .L0000017B.startup
    GRAPH_PRV .L00000183.startup
-- STACK00 ['.L00000183.startup']
-- STACK01 ['.L0000018B.startup']

<Symbol 'fwrite' bind='globl'>

<Symbol 'fwrite@PLT' >
    GRAPH_NXT .L00000116
    GRAPH_NXT .L000001C7.startup
    GRAPH_NXT .L000001E9.startup
    GRAPH_NXT .L000003A0
    GRAPH_NXT .L000003FE
    GRAPH_NXT .L00000425
    GRAPH_NXT .L000004BE
    GRAPH_NXT .L000007D4
    GRAPH_NXT .L0000096E
    GRAPH_NXT .L00000995
    GRAPH_NXT .L00000D97
    GRAPH_NXT .L00000ED6
    GRAPH_NXT .L00001095
    GRAPH_NXT .L000010C8
    GRAPH_PRV .L000000F9
    GRAPH_PRV .L000001AA.startup
    GRAPH_PRV .L000001CC.startup
    GRAPH_PRV .L00000383
    GRAPH_PRV .L000003E1
    GRAPH_PRV .L00000408
    GRAPH_PRV .L000004A1
    GRAPH_PRV .L000007B7
    GRAPH_PRV .L00000951
    GRAPH_PRV .L00000978
    GRAPH_PRV .L00000D7A
    GRAPH_PRV .L00000EB9
    GRAPH_PRV .L00001078
    GRAPH_PRV .L000010AB
-- STACK00 ['.L00000116', '.L000000CD.startup']
-- STACK01 ['.L000001C7.startup']
-- STACK02 ['.L000001E9.startup']
-- STACK03 ['.L000003A0', '.L000000EB.startup']
-- STACK04 ['.L000003FE']
-- STACK05 ['.L00000425']
-- STACK06 ['.L000004BE']
-- STACK07 ['.L000007D4', '.L0000010B.startup']
-- STACK08 ['.L0000096E', '.L0000011F.startup']
-- STACK09 ['.L00000995']
-- STACK10 ['.L00000D97', '.L00000152.startup']
-- STACK11 ['.L00000ED6', '.L00000167.startup']
-- STACK12 ['.L00001095', '.L0000017B.startup']
-- STACK13 ['.L000010C8']

<Symbol 'gzclose' bind='globl'>

<Symbol 'gzclose@PLT' >
    GRAPH_NXT .L00000214
    GRAPH_NXT .L0000034C
    GRAPH_PRV .L0000020C
    GRAPH_PRV .L00000344
-- STACK00 ['.L00000214', '.L000000EB.startup']
-- STACK01 ['.L0000034C']

<Symbol 'gzerror' bind='globl'>

<Symbol 'gzerror@PLT' >
    GRAPH_NXT .L0000043C
    GRAPH_NXT .L00000470
    GRAPH_NXT .L00000495
    GRAPH_NXT .L000004D5
    GRAPH_PRV .L0000042F
    GRAPH_PRV .L00000463
    GRAPH_PRV .L00000488
    GRAPH_PRV .L000004C8
-- STACK00 ['.L0000043C', '.L000000EB.startup']
-- STACK01 ['.L00000470']
-- STACK02 ['.L00000495']
-- STACK03 ['.L000004D5']

<Symbol 'gzgetc' bind='globl'>

<Symbol 'gzgetc@PLT' >
    GRAPH_NXT .L00000378
    GRAPH_PRV .L00000370
-- STACK00 ['.L00000378', '.L000000EB.startup']

<Symbol 'gzgets' bind='globl'>

<Symbol 'gzgets@PLT' >
    GRAPH_NXT .L00000305
    GRAPH_PRV .L000002F7
-- STACK00 ['.L00000305', '.L000000EB.startup']

<Symbol 'gzopen' bind='globl'>

<Symbol 'gzopen@PLT' >
    GRAPH_NXT .L000001A8
    GRAPH_NXT .L00000223
    GRAPH_PRV .L00000176
    GRAPH_PRV .L00000214
-- STACK00 ['.L000001A8', '.L000000EB.startup']
-- STACK01 ['.L00000223']

<Symbol 'gzprintf' bind='globl'>

<Symbol 'gzprintf@PLT' >
    GRAPH_NXT .L000001F1
    GRAPH_PRV .L000001D9
-- STACK00 ['.L000001F1', '.L000000EB.startup']

<Symbol 'gzputc' bind='globl'>

<Symbol 'gzputc@PLT' >
    GRAPH_NXT .L000001C1
    GRAPH_PRV .L000001B4
-- STACK00 ['.L000001C1', '.L000000EB.startup']

<Symbol 'gzputs' bind='globl'>

<Symbol 'gzputs@PLT' >
    GRAPH_NXT .L000001D0
    GRAPH_PRV .L000001C1
-- STACK00 ['.L000001D0', '.L000000EB.startup']

<Symbol 'gzread' bind='globl'>

<Symbol 'gzread@PLT' >
    GRAPH_NXT .L0000024B
    GRAPH_PRV .L0000022F
-- STACK00 ['.L0000024B', '.L000000EB.startup']

<Symbol 'gzseek' bind='globl'>

<Symbol 'gzseek@PLT' >
    GRAPH_NXT .L0000020C
    GRAPH_NXT .L00000294
    GRAPH_PRV .L000001FA
    GRAPH_PRV .L00000280
-- STACK00 ['.L0000020C', '.L000000EB.startup']
-- STACK01 ['.L00000294']

<Symbol 'gztell' bind='globl'>

<Symbol 'gztell@PLT' >
    GRAPH_NXT .L000002A9
    GRAPH_NXT .L000003B2
    GRAPH_PRV .L000002A1
    GRAPH_PRV .L000003AA
-- STACK00 ['.L000002A9', '.L000000EB.startup']
-- STACK01 ['.L000003B2']

<Symbol 'gzungetc' bind='globl'>

<Symbol 'gzungetc@PLT' >
    GRAPH_NXT .L000002EE
    GRAPH_PRV .L000002E1
-- STACK00 ['.L000002EE', '.L000000EB.startup']

<Symbol 'inflate' bind='globl'>

<Symbol 'inflate@PLT' >
    GRAPH_NXT .L00000711
    GRAPH_NXT .L00000A28
    GRAPH_NXT .L00000CD4
    GRAPH_NXT .L00000CF6
    GRAPH_NXT .L00000FC2
    GRAPH_PRV .L000006F7
    GRAPH_PRV .L00000A14
    GRAPH_PRV .L00000CBC
    GRAPH_PRV .L00000CE9
    GRAPH_PRV .L00000FB8
-- STACK00 ['.L00000711', '.L0000010B.startup']
-- STACK01 ['.L00000A28', '.L00000133.startup']
-- STACK02 ['.L00000CD4', '.L00000152.startup']
-- STACK03 ['.L00000CF6']
-- STACK04 ['.L00000FC2', '.L0000017B.startup']

<Symbol 'inflateEnd' bind='globl'>

<Symbol 'inflateEnd@PLT' >
    GRAPH_NXT .L00000729
    GRAPH_NXT .L00000A35
    GRAPH_NXT .L00000D03
    GRAPH_NXT .L00000FF8
    GRAPH_PRV .L00000721
    GRAPH_PRV .L00000A2D
    GRAPH_PRV .L00000CFB
    GRAPH_PRV .L00000FF0
-- STACK00 ['.L00000729', '.L0000010B.startup']
-- STACK01 ['.L00000A35', '.L00000133.startup']
-- STACK02 ['.L00000D03', '.L00000152.startup']
-- STACK03 ['.L00000FF8', '.L0000017B.startup']

<Symbol 'inflateInit_' bind='globl'>

<Symbol 'inflateInit_@PLT' >
    GRAPH_NXT .L000006DD
    GRAPH_NXT .L00000A03
    GRAPH_NXT .L00000CB8
    GRAPH_NXT .L00000F8C
    GRAPH_PRV test_dict_inflate
    GRAPH_PRV test_inflate
    GRAPH_PRV test_large_inflate
    GRAPH_PRV test_sync
-- STACK00 ['.L000006DD', '.L0000010B.startup']
-- STACK01 ['.L00000A03', '.L00000133.startup']
-- STACK02 ['.L00000CB8', '.L00000152.startup']
-- STACK03 ['.L00000F8C', '.L0000017B.startup']

<Symbol 'inflateSetDictionary' bind='globl'>

<Symbol 'inflateSetDictionary@PLT' >
    GRAPH_NXT .L00000FEE
    GRAPH_PRV .L00000FDE
-- STACK00 ['.L00000FEE', '.L0000017B.startup']

<Symbol 'inflateSync' bind='globl'>

<Symbol 'inflateSync@PLT' >
    GRAPH_NXT .L00000CE1
    GRAPH_PRV .L00000CD4
-- STACK00 ['.L00000CE1', '.L00000152.startup']

<Symbol 'puts' bind='globl'>

<Symbol 'puts@PLT' >
    GRAPH_NXT .L00000204.startup
    GRAPH_NXT .L00000A5B
    GRAPH_PRV .L000001F8.startup
    GRAPH_PRV .L00000A4F
-- STACK00 ['.L00000204.startup']
-- STACK01 ['.L00000A5B', '.L00000133.startup']

<Symbol 'stderr' bind='globl'>

<Symbol 'strcmp' bind='globl'>

<Symbol 'strcmp@PLT' >
    GRAPH_NXT .L000000AA
    GRAPH_NXT .L00000262
    GRAPH_NXT .L00000326
    GRAPH_NXT .L00000740
    GRAPH_NXT .L0000100F
    GRAPH_PRV .L0000009B
    GRAPH_PRV .L00000253
    GRAPH_PRV .L00000317
    GRAPH_PRV .L00000731
    GRAPH_PRV .L00001000
-- STACK00 ['.L000000AA', '.L000000CD.startup']
-- STACK01 ['.L00000262', '.L000000EB.startup']
-- STACK02 ['.L00000326']
-- STACK03 ['.L00000740', '.L0000010B.startup']
-- STACK04 ['.L0000100F', '.L0000017B.startup']

<Symbol 'strlen' bind='globl'>

<Symbol 'strlen@PLT' >
    GRAPH_NXT .L0000030D
    GRAPH_PRV .L00000305
-- STACK00 ['.L0000030D', '.L000000EB.startup']

<Symbol 'uncompress' bind='globl'>

<Symbol 'uncompress@PLT' >
    GRAPH_NXT .L00000093
    GRAPH_PRV .L00000073
-- STACK00 ['.L00000093', '.L000000CD.startup']

<Symbol 'zlibCompileFlags' bind='globl'>

<Symbol 'zlibCompileFlags@PLT' >
    GRAPH_NXT .L00000060.startup
    GRAPH_PRV .L0000005B.startup
-- STACK00 ['.L00000060.startup']

<Symbol 'zlibVersion' bind='globl'>

<Symbol 'zlibVersion@PLT' >
    GRAPH_NXT .L0000002F.startup
    GRAPH_NXT .L0000003D.startup
    GRAPH_PRV .L00000038.startup
    GRAPH_PRV main
-- STACK00 ['.L0000002F.startup']
-- STACK01 ['.L0000003D.startup']

<Symbol 'hello+14' section='.data', type='padding', address=14>
    ENDER None -- NXT None
    CFG None

<Symbol '.LC00000006' section='.rodata', type='endofsymbol', address=6>
    ENDER None -- NXT None
    CFG None

<Symbol 'test_dict_inflate+438' section='.text', type='padding', address=4326>
    ENDER None -- NXT None
    CFG None

<Symbol 'main+526' section='.text.startup', type='padding', address=526>
    ENDER None -- NXT None
    CFG None

('.comment', '.comment,"MS",@progbits,1')
('.eh_frame', '.eh_frame,"a",@progbits')
('.note.GNU-stack', '.note.GNU-stack,"",@progbits')
('.rodata.str1.1', '.rodata.str1.1,"aMS",@progbits,1')
('.rodata.str1.8', '.rodata.str1.8,"aMS",@progbits,1')
('.text.startup', '.text.startup,"ax",@progbits')
relocatable:True,ident:'GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0',endianess:'<',eh_frame_size:704,eh_frame_relocs:{32: (('ELF', 62, 2), {'section': '.text', 'address': 0}), 76: (('ELF', 62, 2), {'section': '.text', 'address': 304}), 144: (('ELF', 62, 2), {'section': '.text', 'address': 1264}), 212: (('ELF', 62, 2), {'section': '.text', 'address': 1648}), 272: (('ELF', 62, 2), {'section': '.text', 'address': 2032}), 340: (('ELF', 62, 2), {'section': '.text', 'address': 2464}), 408: (('ELF', 62, 2), {'section': '.text', 'address': 2800}), 476: (('ELF', 62, 2), {'section': '.text', 'address': 3152}), 536: (('ELF', 62, 2), {'section': '.text', 'address': 3504}), 588: (('ELF', 62, 2), {'section': '.text', 'address': 3888}), 644: (('ELF', 62, 2), {'section': '.text.startup', 'address': 0})},container:'ELF',compiler:'gcc',PIC:'unknown'
