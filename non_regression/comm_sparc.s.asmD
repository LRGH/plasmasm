	.file	"l2.c"
	.common	b,4,4
# ----------------------
	.section       ".data"
	.align 4
	.globl	c
	.type	c, #object
c:
	.long	1
	.size	c, 4
# ----------------------
	.common	v,4,4
# ----------------------
	.common	O,36,4
# ----------------------
	.common	j,4,4
# ----------------------
	.align 4
	.globl	s
	.type	s, #object
s:
	.long	16
	.size	s, 4
# ----------------------
	.common	a,4,4
# ----------------------
	.common	n,4,4
# ----------------------
	.common	Z,12,4
# ----------------------
	.common	L,99,8
# ----------------------
	.align 4
	.globl	S
	.type	S, #object
S:
	.long	Z
	.size	S, 4
# ----------------------
	.common	M,999,8
# ----------------------
	.common	m,64,8
# ----------------------
	.common	co,1,1
# ----------------------
	.common	ol,1,1
# ----------------------
	.section       ".rodata"
	.align 8
.LLC0:
	.asciz	"XXX"
	.align 8
.LLC1:
	.asciz	"Y\n : ! ,.?>"
# ----------------------
	.section       ".data"
	.align 4
	.globl	p
	.type	p, #object
p:
	.long	.LLC0+1
	.size	p, 4
# ----------------------
	.section       ".text"
	.align 4
	.align 4
	.globl	y
	.type	y, #function
	.proc	04
y:
	save    %sp, -96, %sp                              ##  DEAD:g1;g2
	st      %i0, [%fp+68]                              ##  DEAD:g1;g2;psr
	sethi   %hi(_impure_ptr), %g1                      ##  DEAD:g1;g2;psr
	bset    %lo(_impure_ptr), %g1                      ##  DEAD:g2;psr
	ld      [%g1], %g1                                 ##  DEAD:g2;psr
	ld      [%g1+8], %g1                               ##  DEAD:g2;psr
	ld      [%g1+8], %g2                               ##  DEAD:g2;psr
	inc     -1, %g2                                    ##  DEAD:psr
	st      %g2, [%g1+8]                               ##  DEAD:psr
	ld      [%g1+8], %g1                               ##  DEAD:psr
	cmp     %g1, 0, %g0                                ##  DEAD:psr
	bge     .LL2                                       ##  DEAD:
	nop                                                ##  DEAD:
	sethi   %hi(_impure_ptr), %g1                      ##  DEAD:g1;g2;psr
	bset    %lo(_impure_ptr), %g1                      ##  DEAD:g2;psr
	ld      [%g1], %g1                                 ##  DEAD:g2;psr
	ld      [%g1+8], %g1                               ##  DEAD:g2;psr
	ld      [%g1+8], %g2                               ##  DEAD:g2;psr
	sethi   %hi(_impure_ptr), %g1                      ##  DEAD:g1;psr
	bset    %lo(_impure_ptr), %g1                      ##  DEAD:psr
	ld      [%g1], %g1                                 ##  DEAD:psr
	ld      [%g1+8], %g1                               ##  DEAD:psr
	ld      [%g1+24], %g1                              ##  DEAD:psr
	cmp     %g2, %g1, %g0                              ##  DEAD:psr
	bl      .LL3                                       ##  DEAD:
	nop                                                ##  DEAD:
	sethi   %hi(_impure_ptr), %g1                      ##  DEAD:g1;g2;psr
	bset    %lo(_impure_ptr), %g1                      ##  DEAD:g2;psr
	ld      [%g1], %g1                                 ##  DEAD:g2;psr
	ld      [%g1+8], %g1                               ##  DEAD:g2;psr
	ld      [%g1], %g1                                 ##  DEAD:g2;psr
	ld      [%fp+68], %g2                              ##  DEAD:g2;psr
	stb     %g2, [%g1]                                 ##  DEAD:psr
	sethi   %hi(_impure_ptr), %g1                      ##  DEAD:g1;psr
	bset    %lo(_impure_ptr), %g1                      ##  DEAD:psr
	ld      [%g1], %g1                                 ##  DEAD:psr
	ld      [%g1+8], %g1                               ##  DEAD:psr
	ld      [%g1], %g1                                 ##  DEAD:psr
	ldub    [%g1], %g1                                 ##  DEAD:psr
	and     %g1, 0xff, %g1                             ##  DEAD:psr
	cmp     %g1, 10, %g0                               ##  DEAD:psr
	be      .LL4                                       ##  DEAD:
	nop                                                ##  DEAD:
	sethi   %hi(_impure_ptr), %g1                      ##  DEAD:g1;g2;g3;i0
	bset    %lo(_impure_ptr), %g1                      ##  DEAD:g2;g3;i0
	ld      [%g1], %g1                                 ##  DEAD:g2;g3;i0
	ld      [%g1+8], %g2                               ##  DEAD:g2;g3;i0
	ld      [%g2], %g3                                 ##  DEAD:g1;g3;i0
	ldub    [%g3], %g1                                 ##  DEAD:g1;i0
	and     %g1, 0xff, %g1                             ##  DEAD:i0
	inc     %g3, %g3                                   ##  DEAD:i0
	st      %g3, [%g2]                                 ##  DEAD:i0
	ba      .LL5                                       ##  DEAD:i0
	nop                                                ##  DEAD:i0
.LL4:
	sethi   %hi(_impure_ptr), %g1                      ##  DEAD:g1;o0;o1;o7
	bset    %lo(_impure_ptr), %g1                      ##  DEAD:o0;o1;o7
	ld      [%g1], %g1                                 ##  DEAD:o0;o1;o7
	ld      [%g1+8], %g1                               ##  DEAD:o0;o1;o7
	mov     0xa, %o0                                   ##  DEAD:o0;o1;o7
	mov     %g1, %o1                                   ##  DEAD:o1;o7
	call    __swbuf, 0                                 ##  DEAD:o7
	nop                                                ##  DEAD:o7
	mov     %o0, %g1                                   ##  DEAD:g1;i0
.LL5:
	ba      .LL6                                       ##  DEAD:i0
	nop                                                ##  DEAD:i0
.LL3:
	sethi   %hi(_impure_ptr), %g1                      ##  DEAD:g1;o0;o1;o7
	bset    %lo(_impure_ptr), %g1                      ##  DEAD:o0;o1;o7
	ld      [%g1], %g1                                 ##  DEAD:o0;o1;o7
	ld      [%g1+8], %g1                               ##  DEAD:o0;o1;o7
	ld      [%fp+68], %o0                              ##  DEAD:o0;o1;o7
	mov     %g1, %o1                                   ##  DEAD:o1;o7
	call    __swbuf, 0                                 ##  DEAD:o7
	nop                                                ##  DEAD:o7
	mov     %o0, %g1                                   ##  DEAD:g1;i0
.LL6:
	ba      .LL7                                       ##  DEAD:i0
	nop                                                ##  DEAD:i0
.LL2:
	sethi   %hi(_impure_ptr), %g1                      ##  DEAD:g1;g2;g3;i0
	bset    %lo(_impure_ptr), %g1                      ##  DEAD:g2;g3;i0
	ld      [%g1], %g1                                 ##  DEAD:g2;g3;i0
	ld      [%g1+8], %g1                               ##  DEAD:g2;g3;i0
	ld      [%g1], %g1                                 ##  DEAD:g2;g3;i0
	ld      [%fp+68], %g2                              ##  DEAD:g2;g3;i0
	stb     %g2, [%g1]                                 ##  DEAD:g3;i0
	sethi   %hi(_impure_ptr), %g1                      ##  DEAD:g1;g2;g3;i0
	bset    %lo(_impure_ptr), %g1                      ##  DEAD:g2;g3;i0
	ld      [%g1], %g1                                 ##  DEAD:g2;g3;i0
	ld      [%g1+8], %g2                               ##  DEAD:g2;g3;i0
	ld      [%g2], %g3                                 ##  DEAD:g1;g3;i0
	ldub    [%g3], %g1                                 ##  DEAD:g1;i0
	and     %g1, 0xff, %g1                             ##  DEAD:i0
	inc     %g3, %g3                                   ##  DEAD:i0
	st      %g3, [%g2]                                 ##  DEAD:i0
.LL7:
	mov     %g1, %i0                                   ##  DEAD:i0
	restore                                            ##  DEAD:
	retl                                               ##  DEAD:
	nop                                                ##  DEAD:
	.size	y, .-y
# ----------------------
	.align 4
	.align 4
	.globl	r
	.type	r, #function
	.proc	04
r:
	save    %sp, -96, %sp                              ##  DEAD:g1;g2
	st      %i0, [%fp+68]                              ##  DEAD:g1;g2;o0;o7
	sethi   %hi(p), %g1                                ##  DEAD:g1;g2;o0;o7
	bset    %lo(p), %g1                                ##  DEAD:g2;o0;o7
	ld      [%g1], %g1                                 ##  DEAD:g2;o0;o7
	ldub    [%g1], %g1                                 ##  DEAD:g2;o0;o7
	sll     %g1, 24, %g1                               ##  DEAD:g2;o0;o7
	sra     %g1, 24, %g1                               ##  DEAD:g2;o0;o7
	sethi   %hi(.LLC1), %g2                            ##  DEAD:g2;o0;o7
	bset    %lo(.LLC1), %g2                            ##  DEAD:o0;o7
	ldub    [%g1+%g2], %g1                             ##  DEAD:o0;o7
	sll     %g1, 24, %g1                               ##  DEAD:g2;o0;o7
	sra     %g1, 24, %g1                               ##  DEAD:g2;o0;o7
	mov     %g1, %o0                                   ##  DEAD:g2;o0;o7
	call    y, 0                                       ##  DEAD:g1;g2;o7
	nop                                                ##  DEAD:g1;g2;o7
	mov     %o0, %g1                                   ##  DEAD:g1;i0
	mov     %g1, %i0                                   ##  DEAD:i0
	restore                                            ##  DEAD:
	retl                                               ##  DEAD:
	nop                                                ##  DEAD:
	.size	r, .-r
# ----------------------
	.align 4
	.align 4
	.globl	X
	.type	X, #function
	.proc	04
X:
	save    %sp, -96, %sp                              ##  DEAD:
	st      %i0, [%fp+68]                              ##  DEAD:o0;o7
	mov     0x0, %o0                                   ##  DEAD:o0;o7
	call    time, 0                                    ##  DEAD:o7
	nop                                                ##  DEAD:o7
	mov     %o0, %g3                                   ##  DEAD:g1;g2;g3;psr
	sethi   %hi(b), %g1                                ##  DEAD:g1;g2;psr
	bset    %lo(b), %g1                                ##  DEAD:g2;psr
	ld      [%g1], %g2                                 ##  DEAD:g2;psr
	mov     0x1, %g1                                   ##  DEAD:g1;psr
	cmp     %g3, %g2, %g0                              ##  DEAD:psr
	bg      .LL12                                      ##  DEAD:
	nop                                                ##  DEAD:
	mov     0x0, %g1                                   ##  DEAD:g1;i0
.LL12:
	mov     %g1, %i0                                   ##  DEAD:i0
	restore                                            ##  DEAD:
	retl                                               ##  DEAD:
	nop                                                ##  DEAD:
	.size	X, .-X
# ----------------------
	.align 4
	.align 4
	.globl	main
	.type	main, #function
	.proc	04
main:
	save    %sp, -96, %sp                              ##  DEAD:g1
	mov     0x0, %g1                                   ##  DEAD:g1;i0
	mov     %g1, %i0                                   ##  DEAD:i0
	restore                                            ##  DEAD:
	retl                                               ##  DEAD:
	nop                                                ##  DEAD:
	.size	main, .-main
# ----------------------
	.ident	"GCC: (GNU) 4.4.2"
