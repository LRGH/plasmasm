<Symbol 'P' section='.text', type='function', bind='globl', size=40, address=0>
    ENDER False -- NXT .L00000011
    CFG __ctype_b_loc
    GRAPH_NXT __ctype_b_loc
    GRAPH_PRV .L00000054
    GRAPH_PRV .L000000AB
    GRAPH_PRV .L00000158
    GRAPH_PRV .L00000180
-- STACK00 ['.L00000065', '.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L00000065', '.L0000012C', '.L0000052F']
-- STACK02 ['.L000000BC']
-- STACK03 ['.L00000169']
-- STACK04 ['.L00000191']
'I386_MIASM.InstructionCFG'>0 [None][] push {5:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1 [None][] mov {5:1,ad:False,size:u32} {4:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>3 [None][] sub {4:1,ad:False,size:u32} {ad:False,imm:uint32(0x18),size:u32} 
'I386_MIASM.InstructionCFG'>6 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>9 [None][] mov {5:1,ad:u08,imm:uint32(0xfffffff4),size:u08,txt:ebp+imm} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>12 [sub][] call {ad:False,size:u32,symb__intern__:{__ctype_b_loc:1}} 

<Symbol '.L00000011' section='.text', address=17>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L00000065
    GRAPH_NXT .L000000BC
    GRAPH_NXT .L00000169
    GRAPH_NXT .L00000191
    GRAPH_PRV __ctype_b_loc
-- STACK00 ['.L00000065', '.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L00000065', '.L0000012C', '.L0000052F']
-- STACK02 ['.L000000BC']
-- STACK03 ['.L00000169']
-- STACK04 ['.L00000191']
'I386_MIASM.InstructionCFG'>17 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>19 [None][] movsx {2:1,ad:False,size:u32} {5:1,ad:u08,imm:uint32(0xfffffff4),size:u08,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>23 [None][] add {2:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>25 [None][] add {0:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>27 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u16,size:u16,txt:eax} 
'I386_MIASM.InstructionCFG'>30 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:False,size:u16} 
'I386_MIASM.InstructionCFG'>33 [None][] and {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x2000),size:u32} 
'I386_MIASM.InstructionCFG'>38 [None][] leave 
'I386_MIASM.InstructionCFG'>39 [ret][] ret 

<Symbol 'D' section='.text', type='function', bind='globl', size=157, address=40>
    ENDER False -- NXT .L00000034
    CFG .L0000003E
    CFG .L00000034
    GRAPH_NXT .L00000034
    GRAPH_NXT .L0000003E
    GRAPH_PRV .L00000118
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>40 [None][] push {5:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>41 [None][] mov {5:1,ad:False,size:u32} {4:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>43 [None][] sub {4:1,ad:False,size:u32} {ad:False,imm:uint32(0x28),size:u32} 
'I386_MIASM.InstructionCFG'>46 [None][] cmp {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>50 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L0000003E:1}} 

<Symbol '.L00000034' section='.text', address=52>
    ENDER True -- NXT None
    CFG .L000000C3
    GRAPH_NXT .L000000C3
    GRAPH_PRV D
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>52 [None][] mov {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>57 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L000000C3:1}} 

<Symbol '.L0000003E' section='.text', address=62>
    ENDER True -- NXT None
    CFG .L0000004A
    GRAPH_NXT .L0000004A
    GRAPH_PRV D
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>62 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>65 [None][] mov {5:1,ad:u32,imm:uint32(0xfffffff0),size:u32,txt:ebp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>68 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L0000004A:1}} 

<Symbol '.L00000046' section='.text', address=70>
    ENDER False -- NXT .L0000004A
    CFG .L0000004A
    GRAPH_NXT .L0000004A
    GRAPH_PRV .L00000065
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>70 [None][] add {5:1,ad:u32,imm:uint32(0xfffffff0),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x1),size:u32} 

<Symbol '.L0000004A' section='.text', address=74>
    ENDER False -- NXT .L00000054
    CFG .L00000069
    CFG .L00000054
    GRAPH_NXT .L00000054
    GRAPH_NXT .L00000069
    GRAPH_PRV .L0000003E
    GRAPH_PRV .L00000046
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>74 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xfffffff0),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>77 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>80 [None][] test {0:1,ad:False,size:u08} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>82 [jcc][] je {ad:False,size:u32,symb__intern__:{.L00000069:1}} 

<Symbol '.L00000054' section='.text', address=84>
    ENDER False -- NXT .L00000065
    CFG P
    GRAPH_NXT P
    GRAPH_PRV .L0000004A
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>84 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xfffffff0),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>87 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>90 [None][] movsx {0:1,ad:False,size:u32} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>93 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>96 [sub][] call {ad:False,size:u32,symb__intern__:{P:1}} 

<Symbol '.L00000065' section='.text', address=101>
    ENDER False -- NXT .L00000069
    CFG .L00000046
    CFG .L00000069
    GRAPH_NXT .L00000046
    GRAPH_NXT .L00000069
    GRAPH_PRV .L00000011
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>101 [None][] test {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>103 [jcc][] je {ad:False,size:u32,symb__intern__:{.L00000046:1}} 

<Symbol '.L00000069' section='.text', address=105>
    ENDER False -- NXT .L0000007D
    CFG malloc
    GRAPH_NXT malloc
    GRAPH_PRV .L0000004A
    GRAPH_PRV .L00000065
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>105 [None][] mov {2:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xfffffff0),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>108 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>111 [None][] mov {1:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>113 [None][] sub {1:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>115 [None][] mov {0:1,ad:False,size:u32} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>117 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>120 [sub][] call {ad:False,size:u32,symb__intern__:{malloc:1}} 

<Symbol '.L0000007D' section='.text', address=125>
    ENDER False -- NXT .L00000086
    CFG .L000000C0
    CFG .L00000086
    GRAPH_NXT .L00000086
    GRAPH_NXT .L000000C0
    GRAPH_PRV malloc
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>125 [None][] mov {5:1,ad:u32,imm:uint32(0xfffffff4),size:u32,txt:ebp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>128 [None][] cmp {5:1,ad:u32,imm:uint32(0xfffffff4),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>132 [jcc][] je {ad:False,size:u32,symb__intern__:{.L000000C0:1}} 

<Symbol '.L00000086' section='.text', address=134>
    ENDER True -- NXT None
    CFG .L000000A1
    GRAPH_NXT .L000000A1
    GRAPH_PRV .L0000007D
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>134 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xfffffff4),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>137 [None][] mov {5:1,ad:u32,imm:uint32(0xfffffff0),size:u32,txt:ebp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>140 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L000000A1:1}} 

<Symbol '.L0000008E' section='.text', address=142>
    ENDER False -- NXT .L000000A1
    CFG .L000000A1
    GRAPH_NXT .L000000A1
    GRAPH_PRV .L000000BC
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>142 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>145 [None][] movzx {2:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>148 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xfffffff0),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>151 [None][] mov {0:1,ad:u08,size:u08,txt:eax} {2:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>153 [None][] add {5:1,ad:u32,imm:uint32(0xfffffff0),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>157 [None][] add {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x1),size:u32} 

<Symbol '.L000000A1' section='.text', address=161>
    ENDER False -- NXT .L000000AB
    CFG .L000000C0
    CFG .L000000AB
    GRAPH_NXT .L000000AB
    GRAPH_NXT .L000000C0
    GRAPH_PRV .L00000086
    GRAPH_PRV .L0000008E
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>161 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>164 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>167 [None][] test {0:1,ad:False,size:u08} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>169 [jcc][] je {ad:False,size:u32,symb__intern__:{.L000000C0:1}} 

<Symbol '.L000000AB' section='.text', address=171>
    ENDER False -- NXT .L000000BC
    CFG P
    GRAPH_NXT P
    GRAPH_PRV .L000000A1
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>171 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>174 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>177 [None][] movsx {0:1,ad:False,size:u32} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>180 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>183 [sub][] call {ad:False,size:u32,symb__intern__:{P:1}} 

<Symbol '.L000000BC' section='.text', address=188>
    ENDER False -- NXT .L000000C0
    CFG .L0000008E
    CFG .L000000C0
    GRAPH_NXT .L0000008E
    GRAPH_NXT .L000000C0
    GRAPH_PRV .L00000011
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>188 [None][] test {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>190 [jcc][] je {ad:False,size:u32,symb__intern__:{.L0000008E:1}} 

<Symbol '.L000000C0' section='.text', address=192>
    ENDER False -- NXT .L000000C3
    CFG .L000000C3
    GRAPH_NXT .L000000C3
    GRAPH_PRV .L0000007D
    GRAPH_PRV .L000000A1
    GRAPH_PRV .L000000BC
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>192 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xfffffff4),size:u32,txt:ebp+imm} 

<Symbol '.L000000C3' section='.text', address=195>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L0000012C
    GRAPH_PRV .L00000034
    GRAPH_PRV .L000000C0
-- STACK00 ['.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000012C', '.L0000052F']
'I386_MIASM.InstructionCFG'>195 [None][] leave 
'I386_MIASM.InstructionCFG'>196 [ret][] ret 

<Symbol 'l' section='.text', type='function', bind='globl', size=23, address=197>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L00000148
    GRAPH_PRV .L0000012C
-- STACK00 ['.L00000148', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L00000148', '.L0000052F']
'I386_MIASM.InstructionCFG'>197 [None][] push {5:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>198 [None][] mov {5:1,ad:False,size:u32} {4:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>200 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>203 [None][] mov {2:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>205 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xc),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>208 [None][] mov {0:1,ad:u32,size:u32,txt:eax} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>210 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>213 [None][] mov {2:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xc),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>216 [None][] mov {0:1,ad:u32,size:u32,txt:eax} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>218 [None][] pop {5:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>219 [ret][] ret 

<Symbol 'h' section='.text', type='function', bind='globl', size=212, address=220>
    ENDER True -- NXT None
    CFG .L00000195
    GRAPH_NXT .L00000195
    GRAPH_PRV .L00000293
    GRAPH_PRV .L00000502
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>220 [None][] push {5:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>221 [None][] mov {5:1,ad:False,size:u32} {4:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>223 [None][] sub {4:1,ad:False,size:u32} {ad:False,imm:uint32(0x38),size:u32} 
'I386_MIASM.InstructionCFG'>226 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0x10),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>229 [None][] mov {5:1,ad:u08,imm:uint32(0xffffffe4),size:u08,txt:ebp+imm} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>232 [None][] movsx {0:1,ad:False,size:u32} {5:1,ad:u08,imm:uint32(0xffffffe4),size:u08,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>236 [None][] sal {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x2),size:u32} 
'I386_MIASM.InstructionCFG'>239 [None][] add {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>242 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000195:1}} 

<Symbol '.L000000F7' section='.text', address=247>
    ENDER False -- NXT .L00000103
    CFG malloc
    GRAPH_NXT malloc
    GRAPH_PRV .L0000019B
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>247 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0xc),size:u32} 
'I386_MIASM.InstructionCFG'>254 [sub][] call {ad:False,size:u32,symb__intern__:{malloc:1}} 

<Symbol '.L00000103' section='.text', address=259>
    ENDER False -- NXT .L0000010C
    CFG .L00000118
    CFG .L0000010C
    GRAPH_NXT .L0000010C
    GRAPH_NXT .L00000118
    GRAPH_PRV malloc
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>259 [None][] mov {5:1,ad:u32,imm:uint32(0xfffffff4),size:u32,txt:ebp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>262 [None][] cmp {5:1,ad:u32,imm:uint32(0xfffffff4),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>266 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L00000118:1}} 

<Symbol '.L0000010C' section='.text', address=268>
    ENDER True -- NXT None
    CFG exit
    GRAPH_NXT exit
    GRAPH_PRV .L00000103
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>268 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>275 [sub][] call {ad:False,size:u32,symb__intern__:{exit:1}} 

<Symbol '.L00000118' section='.text', address=280>
    ENDER False -- NXT .L0000012C
    CFG D
    GRAPH_NXT D
    GRAPH_PRV .L00000103
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>280 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xfffffff4),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>283 [None][] mov {0:1,ad:u32,size:u32,txt:eax} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>289 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xc),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>292 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>295 [sub][] call {ad:False,size:u32,symb__intern__:{D:1}} 

<Symbol '.L0000012C' section='.text', address=300>
    ENDER False -- NXT .L00000148
    CFG l
    GRAPH_NXT l
    GRAPH_PRV .L000000C3
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>300 [None][] mov {2:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xfffffff4),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>303 [None][] mov {2:1,ad:u32,imm:uint32(0x8),size:u32,txt:edx+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>306 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>309 [None][] add {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x4),size:u32} 
'I386_MIASM.InstructionCFG'>313 [None][] mov {2:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xfffffff4),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>316 [None][] mov {4:1,ad:u32,imm:uint32(0x4),size:u32,txt:esp+imm} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>320 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>323 [sub][] call {ad:False,size:u32,symb__intern__:{l:1}} 

<Symbol '.L00000148' section='.text', address=328>
    ENDER True -- NXT None
    CFG .L0000014E
    GRAPH_NXT .L0000014E
    GRAPH_PRV l
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>328 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L0000014E:1}} 

<Symbol '.L0000014A' section='.text', address=330>
    ENDER False -- NXT .L0000014E
    CFG .L0000014E
    GRAPH_NXT .L0000014E
    GRAPH_PRV .L00000169
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>330 [None][] add {5:1,ad:u32,imm:uint32(0xc),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x1),size:u32} 

<Symbol '.L0000014E' section='.text', address=334>
    ENDER False -- NXT .L00000158
    CFG .L00000175
    CFG .L00000158
    GRAPH_NXT .L00000158
    GRAPH_NXT .L00000175
    GRAPH_PRV .L00000148
    GRAPH_PRV .L0000014A
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>334 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xc),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>337 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>340 [None][] test {0:1,ad:False,size:u08} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>342 [jcc][] je {ad:False,size:u32,symb__intern__:{.L00000175:1}} 

<Symbol '.L00000158' section='.text', address=344>
    ENDER False -- NXT .L00000169
    CFG P
    GRAPH_NXT P
    GRAPH_PRV .L0000014E
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>344 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xc),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>347 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>350 [None][] movsx {0:1,ad:False,size:u32} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>353 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>356 [sub][] call {ad:False,size:u32,symb__intern__:{P:1}} 

<Symbol '.L00000169' section='.text', address=361>
    ENDER False -- NXT .L0000016D
    CFG .L0000014A
    CFG .L0000016D
    GRAPH_NXT .L0000014A
    GRAPH_NXT .L0000016D
    GRAPH_PRV .L00000011
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>361 [None][] test {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>363 [jcc][] je {ad:False,size:u32,symb__intern__:{.L0000014A:1}} 

<Symbol '.L0000016D' section='.text', address=365>
    ENDER True -- NXT None
    CFG .L00000175
    GRAPH_NXT .L00000175
    GRAPH_PRV .L00000169
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>365 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000175:1}} 

<Symbol '.L0000016F' section='.text', address=367>
    ENDER True -- NXT None
    CFG .L00000176
    GRAPH_NXT .L00000176
    GRAPH_PRV .L00000191
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>367 [None][] add {5:1,ad:u32,imm:uint32(0xc),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>371 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000176:1}} 

<Symbol '.L00000175' section='.text', address=373>
    ENDER False -- NXT .L00000176
    CFG .L00000176
    GRAPH_NXT .L00000176
    GRAPH_PRV .L0000014E
    GRAPH_PRV .L0000016D
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'plasmasm.constants.P2Align'>373 [None][.]nop 90[.p2align 1]

<Symbol '.L00000176' section='.text', address=374>
    ENDER False -- NXT .L00000180
    CFG .L00000195
    CFG .L00000180
    GRAPH_NXT .L00000180
    GRAPH_NXT .L00000195
    GRAPH_PRV .L0000016F
    GRAPH_PRV .L00000175
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>374 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xc),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>377 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>380 [None][] test {0:1,ad:False,size:u08} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>382 [jcc][] je {ad:False,size:u32,symb__intern__:{.L00000195:1}} 

<Symbol '.L00000180' section='.text', address=384>
    ENDER False -- NXT .L00000191
    CFG P
    GRAPH_NXT P
    GRAPH_PRV .L00000176
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>384 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xc),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>387 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>390 [None][] movsx {0:1,ad:False,size:u32} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>393 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>396 [sub][] call {ad:False,size:u32,symb__intern__:{P:1}} 

<Symbol '.L00000191' section='.text', address=401>
    ENDER False -- NXT .L00000195
    CFG .L0000016F
    CFG .L00000195
    GRAPH_NXT .L0000016F
    GRAPH_NXT .L00000195
    GRAPH_PRV .L00000011
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>401 [None][] test {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>403 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L0000016F:1}} 

<Symbol '.L00000195' section='.text', address=405>
    ENDER False -- NXT .L0000019B
    CFG .L000001A9
    CFG .L0000019B
    GRAPH_NXT .L0000019B
    GRAPH_NXT .L000001A9
    GRAPH_PRV .L00000176
    GRAPH_PRV .L00000191
    GRAPH_PRV h
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>405 [None][] cmp {5:1,ad:u32,imm:uint32(0xc),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>409 [jcc][] je {ad:False,size:u32,symb__intern__:{.L000001A9:1}} 

<Symbol '.L0000019B' section='.text', address=411>
    ENDER False -- NXT .L000001A9
    CFG .L000000F7
    CFG .L000001A9
    GRAPH_NXT .L000000F7
    GRAPH_NXT .L000001A9
    GRAPH_PRV .L00000195
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>411 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xc),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>414 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>417 [None][] test {0:1,ad:False,size:u08} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>419 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L000000F7:1}} 

<Symbol '.L000001A9' section='.text', address=425>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L000002BD
    GRAPH_NXT .L0000052F
    GRAPH_PRV .L00000195
    GRAPH_PRV .L0000019B
-- STACK00 ['.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000052F']
'I386_MIASM.InstructionCFG'>425 [None][] mov {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>430 [None][] leave 
'I386_MIASM.InstructionCFG'>431 [ret][] ret 

<Symbol 'k' section='.text', type='function', bind='globl', size=49, address=432>
    ENDER False -- NXT .L000001C1
    CFG .L000001D8
    CFG .L000001C1
    GRAPH_NXT .L000001C1
    GRAPH_NXT .L000001D8
    GRAPH_PRV .L000002DF
-- STACK00 ['.L000002E4', '   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>432 [None][] push {5:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>433 [None][] mov {5:1,ad:False,size:u32} {4:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>435 [None][] sub {4:1,ad:False,size:u32} {ad:False,imm:uint32(0x18),size:u32} 
'I386_MIASM.InstructionCFG'>438 [None][] movzx {0:1,ad:False,size:u32} {ad:u08,size:u08,symb__intern__:{c.2498:1},txt:imm} 
'I386_MIASM.InstructionCFG'>445 [None][] test {0:1,ad:False,size:u08} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>447 [jcc][] je {ad:False,size:u32,symb__intern__:{.L000001D8:1}} 

<Symbol '.L000001C1' section='.text', address=449>
    ENDER False -- NXT .L000001D6
    CFG putchar
    GRAPH_NXT putchar
    GRAPH_PRV k
-- STACK00 ['.L000002E4', '   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>449 [None][] mov {2:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{R:1},txt:imm} 
'I386_MIASM.InstructionCFG'>455 [None][] movzx {0:1,ad:False,size:u32} {ad:u08,size:u08,symb__intern__:{c.2498:1},txt:imm} 
'I386_MIASM.InstructionCFG'>462 [None][] movsx {0:1,ad:False,size:u32} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>465 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>468 [sub][] call {2:1,ad:False,size:u32} 

<Symbol '.L000001D6' section='.text', address=470>
    ENDER True -- NXT None
    CFG .L000001DF
    GRAPH_NXT .L000001DF
    GRAPH_PRV putchar
-- STACK00 ['.L000002E4', '   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>470 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L000001DF:1}} 

<Symbol '.L000001D8' section='.text', address=472>
    ENDER False -- NXT .L000001DF
    CFG .L000001DF
    GRAPH_NXT .L000001DF
    GRAPH_PRV k
-- STACK00 ['.L000002E4', '   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>472 [None][] mov {ad:u08,size:u08,symb__intern__:{c.2498:1},txt:imm} {ad:False,imm:uint8(0xa),size:u08} 

<Symbol '.L000001DF' section='.text', address=479>
    ENDER True -- NXT None
    CFG None
    GRAPH_NXT .L000002E4
    GRAPH_PRV .L000001D6
    GRAPH_PRV .L000001D8
-- STACK00 ['.L000002E4', '   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>479 [None][] leave 
'I386_MIASM.InstructionCFG'>480 [ret][] ret 

<Symbol 'main' section='.text', type='function', bind='globl', size=1678, address=481>
    ENDER False -- NXT .L0000020E
    CFG .L0000066C
    CFG .L0000020E
    GRAPH_NXT .L0000020E
    GRAPH_NXT .L0000066C
    GRAPH_PRV .L000007E8
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>481 [None][] push {5:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>482 [None][] mov {5:1,ad:False,size:u32} {4:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>484 [None][] push {3:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>485 [None][] and {4:1,ad:False,size:u32} {ad:False,imm:uint32(0xfffffff0),size:u32} 
'I386_MIASM.InstructionCFG'>488 [None][] sub {4:1,ad:False,size:u32} {ad:False,imm:uint32(0x190),size:u32} 
'I386_MIASM.InstructionCFG'>494 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0xc),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>497 [None][] mov {4:1,ad:u32,imm:uint32(0x1c),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>501 [None][101] mov {0:1,ad:False,size:u32} {ad:u32,imm:uint32(0x14),segm:5,size:u32} 
'I386_MIASM.InstructionCFG'>507 [None][] mov {4:1,ad:u32,imm:uint32(0x18c),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>514 [None][] xor {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>516 [None][] cmp {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x4),size:u32} 
'I386_MIASM.InstructionCFG'>520 [jcc][] ja {ad:False,size:u32,symb__intern__:{.L0000066C:1}} 

<Symbol '.L0000020E' section='.text', address=526>
    ENDER True -- NXT None
    CFG .L0000021D
    CFG .L000002F5
    CFG .L0000048B
    CFG .L000005FF
    CFG .L00000694
    GRAPH_NXT .L0000021D
    GRAPH_NXT .L000002F5
    GRAPH_NXT .L0000048B
    GRAPH_NXT .L000005FF
    GRAPH_NXT .L00000694
    GRAPH_PRV main
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>526 [None][] mov {0:1,ad:False,size:u32} {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} 
'I386_MIASM.InstructionCFG'>529 [None][] sal {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x2),size:u32} 
'I386_MIASM.InstructionCFG'>532 [None][] add {0:1,ad:False,size:u32} {ad:False,size:u32,symb__intern__:{.LC000000D4:1}} 
'I386_MIASM.InstructionCFG'>537 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>539 [jmp][] jmp {0:1,ad:False,size:u32} 

<Symbol '.L0000021D' section='.text', address=541>
    ENDER False -- NXT .L00000279
    CFG calloc
    GRAPH_NXT calloc
    GRAPH_PRV .L0000020E
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>541 [None][] mov {4:1,ad:u32,imm:uint32(0x24),size:u32,txt:esp+imm} {ad:False,size:u32,symb__intern__:{.LC00000000:1}} 
'I386_MIASM.InstructionCFG'>549 [None][] mov {4:1,ad:u32,imm:uint32(0x28),size:u32,txt:esp+imm} {ad:False,size:u32,symb__intern__:{.LC0000004C:1}} 
'I386_MIASM.InstructionCFG'>557 [None][] mov {4:1,ad:u32,imm:uint32(0x2c),size:u32,txt:esp+imm} {ad:False,size:u32,symb__intern__:{.LC00000098:1}} 
'I386_MIASM.InstructionCFG'>565 [None][] mov {4:1,ad:u32,imm:uint32(0x30),size:u32,txt:esp+imm} {ad:False,size:u32,symb__intern__:{.LC000000BE:1}} 
'I386_MIASM.InstructionCFG'>573 [None][] mov {4:1,ad:u32,imm:uint32(0x34),size:u32,txt:esp+imm} {ad:False,size:u32,symb__intern__:{.LC000000C3:1}} 
'I386_MIASM.InstructionCFG'>581 [None][] mov {4:1,ad:u32,imm:uint32(0x38),size:u32,txt:esp+imm} {ad:False,size:u32,symb__intern__:{.LC000000C8:1}} 
'I386_MIASM.InstructionCFG'>589 [None][] mov {4:1,ad:u32,imm:uint32(0x3c),size:u32,txt:esp+imm} {ad:False,size:u32,symb__intern__:{.LC000000CE:1}} 
'I386_MIASM.InstructionCFG'>597 [None][] mov {4:1,ad:u32,imm:uint32(0x40),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>605 [None][] lea {0:1,ad:False,size:u32} {4:1,ad:True,imm:uint32(0x24),size:True,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>609 [None][] mov {4:1,ad:u32,imm:uint32(0x4c),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>613 [None][] mov {4:1,ad:u32,imm:uint32(0x4),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x4),size:u32} 
'I386_MIASM.InstructionCFG'>621 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0x180),size:u32} 
'I386_MIASM.InstructionCFG'>628 [sub][] call {ad:False,size:u32,symb__intern__:{calloc:1}} 

<Symbol '.L00000279' section='.text', address=633>
    ENDER False -- NXT .L00000287
    CFG .L00000293
    CFG .L00000287
    GRAPH_NXT .L00000287
    GRAPH_NXT .L00000293
    GRAPH_PRV calloc
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>633 [None][] mov {ad:u32,size:u32,symb__intern__:{X.2503:1}} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>638 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{X.2503:1}} 
'I386_MIASM.InstructionCFG'>643 [None][] test {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>645 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L00000293:1}} 

<Symbol '.L00000287' section='.text', address=647>
    ENDER True -- NXT None
    CFG exit
    GRAPH_NXT exit
    GRAPH_PRV .L00000279
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>647 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>654 [sub][] call {ad:False,size:u32,symb__intern__:{exit:1}} 

<Symbol '.L00000293' section='.text', address=659>
    ENDER False -- NXT .L000002BD
    CFG h
    GRAPH_NXT h
    GRAPH_PRV .L00000279
    GRAPH_PRV .L000002BD
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>659 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x4c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>663 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>665 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>668 [None][] movsx {2:1,ad:False,size:u32} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>671 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x4c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>675 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>677 [None][] lea {1:1,ad:False,size:u32} {0:1,ad:True,imm:uint32(0x1),size:True,txt:eax+imm} 
'I386_MIASM.InstructionCFG'>680 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{X.2503:1}} 
'I386_MIASM.InstructionCFG'>685 [None][] mov {4:1,ad:u32,imm:uint32(0x8),size:u32,txt:esp+imm} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>689 [None][] mov {4:1,ad:u32,imm:uint32(0x4),size:u32,txt:esp+imm} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>693 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>696 [sub][] call {ad:False,size:u32,symb__intern__:{h:1}} 

<Symbol '.L000002BD' section='.text', address=701>
    ENDER False -- NXT .L000002CC
    CFG .L00000293
    CFG .L000002CC
    GRAPH_NXT .L00000293
    GRAPH_NXT .L000002CC
    GRAPH_PRV .L000001A9
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>701 [None][] add {4:1,ad:u32,imm:uint32(0x4c),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x4),size:u32} 
'I386_MIASM.InstructionCFG'>706 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x4c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>710 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>712 [None][] test {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>714 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L00000293:1}} 

<Symbol '.L000002CC' section='.text', address=716>
    ENDER True -- NXT None
    CFG .L000002CF
    GRAPH_NXT .L000002CF
    GRAPH_PRV .L000002BD
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>716 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L000002CF:1}} 

<Symbol '.L000002CE' section='.text', address=718>
    ENDER False -- NXT .L000002CF
    CFG .L000002CF
    GRAPH_NXT .L000002CF
    GRAPH_PRV .L000007C0
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>718 [None][] nop 90

<Symbol '.L000002CF' section='.text', address=719>
    ENDER False -- NXT .L000002D4
    CFG getchar
    GRAPH_NXT getchar
    GRAPH_PRV .L000002CC
    GRAPH_PRV .L000002CE
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>719 [sub][] call {ad:False,size:u32,symb__intern__:{getchar:1}} 

<Symbol '.L000002D4' section='.text', address=724>
    ENDER False -- NXT .L000002DF
    CFG .L000002E9
    CFG .L000002DF
    GRAPH_NXT .L000002DF
    GRAPH_NXT .L000002E9
    GRAPH_PRV getchar
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>724 [None][] mov {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>728 [None][] cmp {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>733 [jcc][] js {ad:False,size:u32,symb__intern__:{.L000002E9:1}} 

<Symbol '.L000002DF' section='.text', address=735>
    ENDER False -- NXT .L000002E4
    CFG k
    GRAPH_NXT k
    GRAPH_PRV .L000002D4
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>735 [sub][] call {ad:False,size:u32,symb__intern__:{k:1}} 

<Symbol '.L000002E4' section='.text', address=740>
    ENDER True -- NXT None
    CFG .L00000694
    GRAPH_NXT .L00000694
    GRAPH_PRV .L000001DF
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>740 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000694:1}} 

<Symbol '.L000002E9' section='.text', address=745>
    ENDER True -- NXT None
    CFG exit
    GRAPH_NXT exit
    GRAPH_PRV .L000002D4
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>745 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>752 [sub][] call {ad:False,size:u32,symb__intern__:{exit:1}} 

<Symbol '.L000002F5' section='.text', address=757>
    ENDER True -- NXT None
    CFG .L00000312
    GRAPH_NXT .L00000312
    GRAPH_PRV .L0000020E
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>757 [None][] mov {4:1,ad:u32,imm:uint32(0x54),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>765 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000312:1}} 

<Symbol '.L000002FF' section='.text', address=767>
    ENDER False -- NXT .L00000312
    CFG .L00000312
    GRAPH_NXT .L00000312
    GRAPH_PRV .L00000312
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>767 [None][] lea {0:1,ad:False,size:u32} {4:1,ad:True,imm:uint32(0x8c),size:True,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>774 [None][] add {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x54),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>778 [None][] mov {0:1,ad:u08,size:u08,txt:eax} {ad:False,imm:uint8(0x0),size:u08} 
'I386_MIASM.InstructionCFG'>781 [None][] add {4:1,ad:u32,imm:uint32(0x54),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 

<Symbol '.L00000312' section='.text', address=786>
    ENDER False -- NXT .L00000319
    CFG .L000002FF
    CFG .L00000319
    GRAPH_NXT .L000002FF
    GRAPH_NXT .L00000319
    GRAPH_PRV .L000002F5
    GRAPH_PRV .L000002FF
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>786 [None][] cmp {4:1,ad:u32,imm:uint32(0x54),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x21),size:u32} 
'I386_MIASM.InstructionCFG'>791 [jcc][] jle {ad:False,size:u32,symb__intern__:{.L000002FF:1}} 

<Symbol '.L00000319' section='.text', address=793>
    ENDER True -- NXT None
    CFG .L0000032F
    GRAPH_NXT .L0000032F
    GRAPH_PRV .L00000312
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>793 [None][] mov {4:1,ad:u32,imm:uint32(0x58),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>801 [None][] lea {0:1,ad:False,size:u32} {4:1,ad:True,imm:uint32(0x8c),size:True,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>808 [None][] mov {4:1,ad:u32,imm:uint32(0x50),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>812 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L0000032F:1}} 

<Symbol '.L0000032E' section='.text', address=814>
    ENDER False -- NXT .L0000032F
    CFG .L0000032F
    GRAPH_NXT .L0000032F
    GRAPH_PRV .L00000454
    GRAPH_PRV .L00000481
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>814 [None][] nop 90

<Symbol '.L0000032F' section='.text', address=815>
    ENDER False -- NXT .L00000339
    CFG .L00000340
    CFG .L00000339
    GRAPH_NXT .L00000339
    GRAPH_NXT .L00000340
    GRAPH_PRV .L00000319
    GRAPH_PRV .L0000032E
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>815 [None][] cmp {4:1,ad:u32,imm:uint32(0x58),size:u32,txt:esp+imm} {ad:False,imm:uint32(0xc8),size:u32} 
'I386_MIASM.InstructionCFG'>823 [jcc][] je {ad:False,size:u32,symb__intern__:{.L00000340:1}} 

<Symbol '.L00000339' section='.text', address=825>
    ENDER False -- NXT .L0000033E
    CFG getchar
    GRAPH_NXT getchar
    GRAPH_PRV .L0000032F
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>825 [sub][] call {ad:False,size:u32,symb__intern__:{getchar:1}} 

<Symbol '.L0000033E' section='.text', address=830>
    ENDER True -- NXT None
    CFG .L00000345
    GRAPH_NXT .L00000345
    GRAPH_PRV getchar
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>830 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000345:1}} 

<Symbol '.L00000340' section='.text', address=832>
    ENDER False -- NXT .L00000345
    CFG .L00000345
    GRAPH_NXT .L00000345
    GRAPH_PRV .L0000032F
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>832 [None][] mov {0:1,ad:False,size:u32} {ad:False,imm:uint32(0xa),size:u32} 

<Symbol '.L00000345' section='.text', address=837>
    ENDER False -- NXT .L00000356
    CFG .L00000404
    CFG .L00000356
    GRAPH_NXT .L00000356
    GRAPH_NXT .L00000404
    GRAPH_PRV .L0000033E
    GRAPH_PRV .L00000340
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>837 [None][] mov {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>841 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>845 [None][] cmp {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x20),size:u32} 
'I386_MIASM.InstructionCFG'>848 [jcc][] je {ad:False,size:u32,symb__intern__:{.L00000404:1}} 

<Symbol '.L00000356' section='.text', address=854>
    ENDER False -- NXT .L0000035F
    CFG .L00000417
    CFG .L0000035F
    GRAPH_NXT .L0000035F
    GRAPH_NXT .L00000417
    GRAPH_PRV .L00000345
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>854 [None][] cmp {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x20),size:u32} 
'I386_MIASM.InstructionCFG'>857 [jcc][] jg {ad:False,size:u32,symb__intern__:{.L00000417:1}} 

<Symbol '.L0000035F' section='.text', address=863>
    ENDER False -- NXT .L00000364
    CFG .L0000036D
    CFG .L00000364
    GRAPH_NXT .L00000364
    GRAPH_NXT .L0000036D
    GRAPH_PRV .L00000356
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>863 [None][] cmp {0:1,ad:False,size:u32} {ad:False,imm:uint32(0xffffffff),size:u32} 
'I386_MIASM.InstructionCFG'>866 [jcc][] je {ad:False,size:u32,symb__intern__:{.L0000036D:1}} 

<Symbol '.L00000364' section='.text', address=868>
    ENDER False -- NXT .L0000036D
    CFG .L00000417
    CFG .L0000036D
    GRAPH_NXT .L0000036D
    GRAPH_NXT .L00000417
    GRAPH_PRV .L0000035F
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>868 [None][] cmp {0:1,ad:False,size:u32} {ad:False,imm:uint32(0xa),size:u32} 
'I386_MIASM.InstructionCFG'>871 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L00000417:1}} 

<Symbol '.L0000036D' section='.text', address=877>
    ENDER False -- NXT .L0000037E
    CFG .L000003F6
    CFG .L0000037E
    GRAPH_NXT .L0000037E
    GRAPH_NXT .L000003F6
    GRAPH_PRV .L0000035F
    GRAPH_PRV .L00000364
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>877 [None][] cmp {4:1,ad:u32,imm:uint32(0x58),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>882 [None][] setne {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>885 [None][] sub {4:1,ad:u32,imm:uint32(0x58),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>890 [None][] test {0:1,ad:False,size:u08} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>892 [jcc][] je {ad:False,size:u32,symb__intern__:{.L000003F6:1}} 

<Symbol '.L0000037E' section='.text', address=894>
    ENDER False -- NXT .L00000398
    CFG putchar
    GRAPH_NXT putchar
    GRAPH_PRV .L0000036D
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>894 [None][] mov {2:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{R:1},txt:imm} 
'I386_MIASM.InstructionCFG'>900 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x1c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>904 [None][] add {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x4),size:u32} 
'I386_MIASM.InstructionCFG'>907 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>909 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>912 [None][] movsx {0:1,ad:False,size:u32} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>915 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>918 [sub][] call {2:1,ad:False,size:u32} 

<Symbol '.L00000398' section='.text', address=920>
    ENDER True -- NXT None
    CFG .L000003D6
    GRAPH_NXT .L000003D6
    GRAPH_PRV putchar
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>920 [None][] mov {4:1,ad:u32,imm:uint32(0x54),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>928 [None][] lea {0:1,ad:False,size:u32} {4:1,ad:True,imm:uint32(0x8c),size:True,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>935 [None][] mov {4:1,ad:u32,imm:uint32(0x50),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>939 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L000003D6:1}} 

<Symbol '.L000003AD' section='.text', address=941>
    ENDER False -- NXT .L000003C5
    CFG putchar
    GRAPH_NXT putchar
    GRAPH_PRV .L000003D6
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>941 [None][] mov {2:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{R:1},txt:imm} 
'I386_MIASM.InstructionCFG'>947 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x50),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>951 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>954 [None][] movsx {0:1,ad:False,size:u32} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>957 [None][] add {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x2b),size:u32} 
'I386_MIASM.InstructionCFG'>960 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>963 [sub][] call {2:1,ad:False,size:u32} 

<Symbol '.L000003C5' section='.text', address=965>
    ENDER False -- NXT .L000003D6
    CFG .L000003D6
    GRAPH_NXT .L000003D6
    GRAPH_PRV putchar
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>965 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x50),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>969 [None][] mov {0:1,ad:u08,size:u08,txt:eax} {ad:False,imm:uint8(0x0),size:u08} 
'I386_MIASM.InstructionCFG'>972 [None][] add {4:1,ad:u32,imm:uint32(0x50),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>977 [None][] add {4:1,ad:u32,imm:uint32(0x54),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x6),size:u32} 

<Symbol '.L000003D6' section='.text', address=982>
    ENDER False -- NXT .L000003E0
    CFG .L000003AD
    CFG .L000003E0
    GRAPH_NXT .L000003AD
    GRAPH_NXT .L000003E0
    GRAPH_PRV .L00000398
    GRAPH_PRV .L000003C5
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>982 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x54),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>986 [None][] cmp {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x58),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>990 [jcc][] jle {ad:False,size:u32,symb__intern__:{.L000003AD:1}} 

<Symbol '.L000003E0' section='.text', address=992>
    ENDER False -- NXT .L000003EE
    CFG putchar
    GRAPH_NXT putchar
    GRAPH_PRV .L000003D6
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>992 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{R:1}} 
'I386_MIASM.InstructionCFG'>997 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0xa),size:u32} 
'I386_MIASM.InstructionCFG'>1004 [sub][] call {0:1,ad:False,size:u32} 

<Symbol '.L000003EE' section='.text', address=1006>
    ENDER False -- NXT .L000003F6
    CFG .L000003F6
    GRAPH_NXT .L000003F6
    GRAPH_PRV putchar
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1006 [None][] mov {4:1,ad:u32,imm:uint32(0x58),size:u32,txt:esp+imm} {ad:False,imm:uint32(0xffffffff),size:u32} 

<Symbol '.L000003F6' section='.text', address=1014>
    ENDER False -- NXT .L00000404
    CFG .L00000404
    GRAPH_NXT .L00000404
    GRAPH_PRV .L0000036D
    GRAPH_PRV .L000003EE
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1014 [None][] lea {0:1,ad:False,size:u32} {4:1,ad:True,imm:uint32(0x8c),size:True,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1021 [None][] sub {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1024 [None][] mov {4:1,ad:u32,imm:uint32(0x50),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 

<Symbol '.L00000404' section='.text', address=1028>
    ENDER False -- NXT .L0000040B
    CFG .L00000453
    CFG .L0000040B
    GRAPH_NXT .L0000040B
    GRAPH_NXT .L00000453
    GRAPH_PRV .L00000345
    GRAPH_PRV .L000003F6
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1028 [None][] cmp {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>1033 [jcc][] jns {ad:False,size:u32,symb__intern__:{.L00000453:1}} 

<Symbol '.L0000040B' section='.text', address=1035>
    ENDER True -- NXT None
    CFG exit
    GRAPH_NXT exit
    GRAPH_PRV .L00000404
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1035 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>1042 [sub][] call {ad:False,size:u32,symb__intern__:{exit:1}} 

<Symbol '.L00000417' section='.text', address=1047>
    ENDER True -- NXT None
    CFG .L00000454
    GRAPH_NXT .L00000454
    GRAPH_PRV .L00000356
    GRAPH_PRV .L00000364
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1047 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x50),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1051 [None][] movzx {3:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>1054 [None][] mov {1:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x58),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1058 [None][] mov {2:1,ad:False,size:u32} {ad:False,imm:uint32(0x2aaaaaab),size:u32} 
'I386_MIASM.InstructionCFG'>1063 [None][] mov {0:1,ad:False,size:u32} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1065 [None][] imul {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1067 [None][] mov {0:1,ad:False,size:u32} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1069 [None][] sar {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x1f),size:u32} 
'I386_MIASM.InstructionCFG'>1072 [None][] sub {2:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1074 [None][] mov {0:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1076 [None][] add {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1078 [None][] add {0:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1080 [None][] add {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1082 [None][] mov {2:1,ad:False,size:u32} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1084 [None][] sub {2:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1086 [None][] mov {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1091 [None][] mov {1:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1093 [None][] sal {0:1,ad:False,size:u32} {1:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>1095 [None][] mov {2:1,ad:False,size:u32} {3:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1097 [None][] or {2:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1099 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x50),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1103 [None][] mov {0:1,ad:u08,size:u08,txt:eax} {2:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>1105 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000454:1}} 

<Symbol '.L00000453' section='.text', address=1107>
    ENDER False -- NXT .L00000454
    CFG .L00000454
    GRAPH_NXT .L00000454
    GRAPH_PRV .L00000404
-- STACK00 ['   0x7fc-.text-.L000007E8']
'plasmasm.constants.P2Align'>1107 [None][.]nop 90[.p2align 2]

<Symbol '.L00000454' section='.text', address=1108>
    ENDER False -- NXT .L00000481
    CFG .L0000032E
    CFG .L00000481
    GRAPH_NXT .L0000032E
    GRAPH_NXT .L00000481
    GRAPH_PRV .L00000417
    GRAPH_PRV .L00000453
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1108 [None][] add {4:1,ad:u32,imm:uint32(0x58),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1113 [None][] mov {1:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x58),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1117 [None][] mov {2:1,ad:False,size:u32} {ad:False,imm:uint32(0x2aaaaaab),size:u32} 
'I386_MIASM.InstructionCFG'>1122 [None][] mov {0:1,ad:False,size:u32} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1124 [None][] imul {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1126 [None][] mov {0:1,ad:False,size:u32} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1128 [None][] sar {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x1f),size:u32} 
'I386_MIASM.InstructionCFG'>1131 [None][] sub {2:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1133 [None][] mov {0:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1135 [None][] add {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1137 [None][] add {0:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1139 [None][] add {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1141 [None][] mov {2:1,ad:False,size:u32} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1143 [None][] sub {2:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1145 [None][] test {2:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1147 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L0000032E:1}} 

<Symbol '.L00000481' section='.text', address=1153>
    ENDER True -- NXT None
    CFG .L0000032E
    GRAPH_NXT .L0000032E
    GRAPH_PRV .L00000454
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1153 [None][] add {4:1,ad:u32,imm:uint32(0x50),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1158 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L0000032E:1}} 

<Symbol '.L0000048B' section='.text', address=1163>
    ENDER False -- NXT .L000004A7
    CFG calloc
    GRAPH_NXT calloc
    GRAPH_PRV .L0000020E
    GRAPH_PRV .L00000608
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1163 [None][] mov {4:1,ad:u32,imm:uint32(0x48),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1171 [None][] mov {4:1,ad:u32,imm:uint32(0x4),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x4),size:u32} 
'I386_MIASM.InstructionCFG'>1179 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0x180),size:u32} 
'I386_MIASM.InstructionCFG'>1186 [sub][] call {ad:False,size:u32,symb__intern__:{calloc:1}} 

<Symbol '.L000004A7' section='.text', address=1191>
    ENDER False -- NXT .L000004B5
    CFG .L000004C1
    CFG .L000004B5
    GRAPH_NXT .L000004B5
    GRAPH_NXT .L000004C1
    GRAPH_PRV calloc
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1191 [None][] mov {ad:u32,size:u32,symb__intern__:{X.2503:1}} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1196 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{X.2503:1}} 
'I386_MIASM.InstructionCFG'>1201 [None][] test {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1203 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L000004C1:1}} 

<Symbol '.L000004B5' section='.text', address=1205>
    ENDER True -- NXT None
    CFG exit
    GRAPH_NXT exit
    GRAPH_PRV .L000004A7
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1205 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1212 [sub][] call {ad:False,size:u32,symb__intern__:{exit:1}} 

<Symbol '.L000004C1' section='.text', address=1217>
    ENDER False -- NXT .L000004DF
    CFG fopen
    GRAPH_NXT fopen
    GRAPH_PRV .L000004A7
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1217 [None][] mov {2:1,ad:False,size:u32} {ad:False,size:u32,symb__intern__:{.LC000000D1:1}} 
'I386_MIASM.InstructionCFG'>1222 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x48),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1226 [None][] sal {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x2),size:u32} 
'I386_MIASM.InstructionCFG'>1229 [None][] add {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x1c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1233 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>1235 [None][] mov {4:1,ad:u32,imm:uint32(0x4),size:u32,txt:esp+imm} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1239 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1242 [sub][] call {ad:False,size:u32,symb__intern__:{fopen:1}} 

<Symbol '.L000004DF' section='.text', address=1247>
    ENDER False -- NXT .L000004EA
    CFG .L00000533
    CFG .L000004EA
    GRAPH_NXT .L000004EA
    GRAPH_NXT .L00000533
    GRAPH_PRV fopen
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1247 [None][] mov {4:1,ad:u32,imm:uint32(0x68),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1251 [None][] cmp {4:1,ad:u32,imm:uint32(0x68),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>1256 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L00000533:1}} 

<Symbol '.L000004EA' section='.text', address=1258>
    ENDER True -- NXT None
    CFG exit
    GRAPH_NXT exit
    GRAPH_PRV .L000004DF
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1258 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1265 [sub][] call {ad:False,size:u32,symb__intern__:{exit:1}} 

<Symbol '.L000004F6' section='.text', address=1270>
    ENDER False -- NXT .L00000502
    CFG .L00000534
    CFG .L00000502
    GRAPH_NXT .L00000502
    GRAPH_NXT .L00000534
    GRAPH_PRV .L00000558
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1270 [None][] movzx {0:1,ad:False,size:u32} {4:1,ad:u08,imm:uint32(0x8c),size:u08,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1278 [None][] test {0:1,ad:False,size:u08} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>1280 [jcc][] je {ad:False,size:u32,symb__intern__:{.L00000534:1}} 

<Symbol '.L00000502' section='.text', address=1282>
    ENDER False -- NXT .L0000052F
    CFG h
    GRAPH_NXT h
    GRAPH_PRV .L000004F6
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1282 [None][] movzx {0:1,ad:False,size:u32} {4:1,ad:u08,imm:uint32(0x8c),size:u08,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1290 [None][] movsx {2:1,ad:False,size:u32} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>1293 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x48),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1297 [None][] lea {1:1,ad:False,size:u32} {4:1,ad:True,imm:uint32(0x8c),size:True,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1304 [None][] add {1:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1306 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{X.2503:1}} 
'I386_MIASM.InstructionCFG'>1311 [None][] mov {4:1,ad:u32,imm:uint32(0x8),size:u32,txt:esp+imm} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1315 [None][] mov {4:1,ad:u32,imm:uint32(0x4),size:u32,txt:esp+imm} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1319 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1322 [sub][] call {ad:False,size:u32,symb__intern__:{h:1}} 

<Symbol '.L0000052F' section='.text', address=1327>
    ENDER True -- NXT None
    CFG .L00000534
    GRAPH_NXT .L00000534
    GRAPH_PRV .L000001A9
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1327 [None][] test {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1329 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000534:1}} 

<Symbol '.L00000533' section='.text', address=1331>
    ENDER False -- NXT .L00000534
    CFG .L00000534
    GRAPH_NXT .L00000534
    GRAPH_PRV .L000004DF
-- STACK00 ['   0x7fc-.text-.L000007E8']
'plasmasm.constants.P2Align'>1331 [None][.]nop 90[.p2align 2]

<Symbol '.L00000534' section='.text', address=1332>
    ENDER False -- NXT .L00000558
    CFG fgets
    GRAPH_NXT fgets
    GRAPH_PRV .L000004F6
    GRAPH_PRV .L0000052F
    GRAPH_PRV .L00000533
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1332 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x48),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1336 [None][] mov {1:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1338 [None][] sal {1:1,ad:False,size:u32} {ad:False,imm:uint32(0x8),size:u32} 
'I386_MIASM.InstructionCFG'>1341 [None][] lea {0:1,ad:False,size:u32} {4:1,ad:True,imm:uint32(0x8c),size:True,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1348 [None][] mov {2:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x68),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1352 [None][] mov {4:1,ad:u32,imm:uint32(0x8),size:u32,txt:esp+imm} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1356 [None][] mov {4:1,ad:u32,imm:uint32(0x4),size:u32,txt:esp+imm} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1360 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1363 [sub][] call {ad:False,size:u32,symb__intern__:{fgets:1}} 

<Symbol '.L00000558' section='.text', address=1368>
    ENDER False -- NXT .L0000055C
    CFG .L000004F6
    CFG .L0000055C
    GRAPH_NXT .L000004F6
    GRAPH_NXT .L0000055C
    GRAPH_PRV fgets
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1368 [None][] test {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1370 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L000004F6:1}} 

<Symbol '.L0000055C' section='.text', address=1372>
    ENDER True -- NXT None
    CFG .L00000572
    GRAPH_NXT .L00000572
    GRAPH_PRV .L00000558
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1372 [None][] and {4:1,ad:u32,imm:uint32(0x64),size:u32,txt:esp+imm} {ad:False,imm:uint32(0xff),size:u32} 
'I386_MIASM.InstructionCFG'>1380 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x64),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1384 [None][] mov {4:1,ad:u32,imm:uint32(0x48),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1388 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000572:1}} 

<Symbol '.L0000056E' section='.text', address=1390>
    ENDER True -- NXT None
    CFG .L00000572
    GRAPH_NXT .L00000572
    GRAPH_PRV .L000005C1
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1390 [None][] nop 90
'I386_MIASM.InstructionCFG'>1391 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000572:1}} 

<Symbol '.L00000571' section='.text', address=1393>
    ENDER False -- NXT .L00000572
    CFG .L00000572
    GRAPH_NXT .L00000572
    GRAPH_PRV .L00000801
-- STACK00 ['   0x7fc-.text-.L000007E8']
'plasmasm.constants.P2Align'>1393 [None][.]nop 90[.p2align 1]

<Symbol '.L00000572' section='.text', address=1394>
    ENDER True -- NXT None
    CFG .L000005BA
    GRAPH_NXT .L000005BA
    GRAPH_PRV .L0000055C
    GRAPH_PRV .L0000056E
    GRAPH_PRV .L00000571
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1394 [None][] mov {4:1,ad:u32,imm:uint32(0x5c),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>1402 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{X.2503:1}} 
'I386_MIASM.InstructionCFG'>1407 [None][] mov {2:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x64),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1411 [None][] sal {2:1,ad:False,size:u32} {ad:False,imm:uint32(0x2),size:u32} 
'I386_MIASM.InstructionCFG'>1414 [None][] add {0:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1416 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>1418 [None][] mov {4:1,ad:u32,imm:uint32(0x60),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1422 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L000005BA:1}} 

<Symbol '.L00000590' section='.text', address=1424>
    ENDER False -- NXT .L000005BA
    CFG .L000005BA
    GRAPH_NXT .L000005BA
    GRAPH_PRV .L000005BA
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1424 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x60),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1428 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>1430 [None][] mov {4:1,ad:u32,imm:uint32(0x84),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1437 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x60),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1441 [None][] mov {2:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x5c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1445 [None][] mov {0:1,ad:u32,size:u32,txt:eax} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1447 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x60),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1451 [None][] mov {4:1,ad:u32,imm:uint32(0x5c),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1455 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x84),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1462 [None][] mov {4:1,ad:u32,imm:uint32(0x60),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 

<Symbol '.L000005BA' section='.text', address=1466>
    ENDER False -- NXT .L000005C1
    CFG .L00000590
    CFG .L000005C1
    GRAPH_NXT .L00000590
    GRAPH_NXT .L000005C1
    GRAPH_PRV .L00000572
    GRAPH_PRV .L00000590
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1466 [None][] cmp {4:1,ad:u32,imm:uint32(0x60),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>1471 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L00000590:1}} 

<Symbol '.L000005C1' section='.text', address=1473>
    ENDER False -- NXT .L000005F3
    CFG .L0000056E
    CFG .L000005F3
    GRAPH_NXT .L0000056E
    GRAPH_NXT .L000005F3
    GRAPH_PRV .L000005BA
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1473 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{X.2503:1}} 
'I386_MIASM.InstructionCFG'>1478 [None][] mov {2:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x64),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1482 [None][] sal {2:1,ad:False,size:u32} {ad:False,imm:uint32(0x2),size:u32} 
'I386_MIASM.InstructionCFG'>1485 [None][] add {2:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1487 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x5c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1491 [None][] mov {2:1,ad:u32,size:u32,txt:edx} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1493 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x64),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1497 [None][] add {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x7),size:u32} 
'I386_MIASM.InstructionCFG'>1500 [None][] and {0:1,ad:False,size:u32} {ad:False,imm:uint32(0xff),size:u32} 
'I386_MIASM.InstructionCFG'>1505 [None][] mov {4:1,ad:u32,imm:uint32(0x64),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1509 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x64),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1513 [None][] cmp {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x48),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1517 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L0000056E:1}} 

<Symbol '.L000005F3' section='.text', address=1523>
    ENDER False -- NXT .L000005FF
    CFG fclose
    GRAPH_NXT fclose
    GRAPH_PRV .L000005C1
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1523 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x68),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1527 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1530 [sub][] call {ad:False,size:u32,symb__intern__:{fclose:1}} 

<Symbol '.L000005FF' section='.text', address=1535>
    ENDER False -- NXT .L00000608
    CFG .L0000061E
    CFG .L00000608
    GRAPH_NXT .L00000608
    GRAPH_NXT .L0000061E
    GRAPH_PRV .L0000020E
    GRAPH_PRV fclose
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1535 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{X.2503:1}} 
'I386_MIASM.InstructionCFG'>1540 [None][] test {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1542 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L0000061E:1}} 

<Symbol '.L00000608' section='.text', address=1544>
    ENDER True -- NXT None
    CFG .L0000048B
    GRAPH_NXT .L0000048B
    GRAPH_PRV .L000005FF
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1544 [None][] mov {4:1,ad:u32,imm:uint32(0x48),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1552 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x48),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1556 [None][] mov {ad:u32,size:u32,symb__intern__:{i.2546:1}} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1561 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L0000048B:1}} 

<Symbol '.L0000061E' section='.text', address=1566>
    ENDER False -- NXT .L00000627
    CFG .L0000066C
    CFG .L00000627
    GRAPH_NXT .L00000627
    GRAPH_NXT .L0000066C
    GRAPH_PRV .L000005FF
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1566 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{i.2546:1}} 
'I386_MIASM.InstructionCFG'>1571 [None][] test {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1573 [jcc][] je {ad:False,size:u32,symb__intern__:{.L0000066C:1}} 

<Symbol '.L00000627' section='.text', address=1575>
    ENDER False -- NXT .L0000063D
    CFG .L0000063D
    GRAPH_NXT .L0000063D
    GRAPH_PRV .L0000061E
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1575 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{X.2503:1}} 
'I386_MIASM.InstructionCFG'>1580 [None][] mov {4:1,ad:u32,imm:uint32(0x6c),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1584 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x6c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1588 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>1590 [None][] mov {4:1,ad:u32,imm:uint32(0x88),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 

<Symbol '.L0000063D' section='.text', address=1597>
    ENDER False -- NXT .L0000065F
    CFG .L0000063D
    CFG .L0000065F
    GRAPH_NXT .L0000063D
    GRAPH_NXT .L0000065F
    GRAPH_PRV .L00000627
    GRAPH_PRV .L0000063D
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1597 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x6c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1601 [None][] mov {2:1,ad:False,size:u32} {0:1,ad:u32,imm:uint32(0x4),size:u32,txt:eax+imm} 
'I386_MIASM.InstructionCFG'>1604 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x6c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1608 [None][] mov {0:1,ad:u32,size:u32,txt:eax} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1610 [None][] add {4:1,ad:u32,imm:uint32(0x6c),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x4),size:u32} 
'I386_MIASM.InstructionCFG'>1615 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{X.2503:1}} 
'I386_MIASM.InstructionCFG'>1620 [None][] add {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x3fc),size:u32} 
'I386_MIASM.InstructionCFG'>1625 [None][] cmp {4:1,ad:u32,imm:uint32(0x6c),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1629 [jcc][] jb {ad:False,size:u32,symb__intern__:{.L0000063D:1}} 

<Symbol '.L0000065F' section='.text', address=1631>
    ENDER False -- NXT .L0000066C
    CFG .L0000066C
    GRAPH_NXT .L0000066C
    GRAPH_PRV .L0000063D
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1631 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x6c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1635 [None][] mov {2:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x88),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1642 [None][] mov {0:1,ad:u32,size:u32,txt:eax} {2:1,ad:False,size:u32} 

<Symbol '.L0000066C' section='.text', address=1644>
    ENDER False -- NXT .L00000694
    CFG .L000007FE
    CFG .L00000694
    GRAPH_NXT .L00000694
    GRAPH_NXT .L000007FE
    GRAPH_PRV .L0000061E
    GRAPH_PRV .L0000065F
    GRAPH_PRV main
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1644 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x1c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1648 [None][] add {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x8),size:u32} 
'I386_MIASM.InstructionCFG'>1651 [None][] mov {2:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>1653 [None][] movzx {1:1,ad:False,size:u32} {2:1,ad:u08,size:u08,txt:edx} 
'I386_MIASM.InstructionCFG'>1656 [None][] movsx {1:1,ad:False,size:u32} {1:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>1659 [None][] mov {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1663 [None][] cmp {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>1668 [None][] sete {1:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>1671 [None][] add {2:1,ad:False,size:u32} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1674 [None][] mov {0:1,ad:u32,size:u32,txt:eax} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1676 [None][] test {1:1,ad:False,size:u08} {1:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>1678 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L000007FE:1}} 

<Symbol '.L00000694' section='.text', address=1684>
    ENDER True -- NXT None
    CFG .L000006B0
    GRAPH_NXT .L000006B0
    GRAPH_PRV .L0000020E
    GRAPH_PRV .L000002E4
    GRAPH_PRV .L0000066C
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1684 [None][] mov {4:1,ad:u32,imm:uint32(0x7c),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>1692 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x7c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1696 [None][] mov {4:1,ad:u32,imm:uint32(0x78),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1700 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L000006B0:1}} 

<Symbol '.L000006A6' section='.text', address=1702>
    ENDER False -- NXT .L000006AB
    CFG .L000006AB
    GRAPH_NXT .L000006AB
    GRAPH_PRV .L000006B0
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1702 [None][] add {4:1,ad:u32,imm:uint32(0x78),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 

<Symbol '.L000006AB' section='.text', address=1707>
    ENDER False -- NXT .L000006B0
    CFG .L000006B0
    GRAPH_NXT .L000006B0
    GRAPH_PRV .L000006A6
    GRAPH_PRV .L000006BE
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1707 [None][] add {4:1,ad:u32,imm:uint32(0x7c),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 

<Symbol '.L000006B0' section='.text', address=1712>
    ENDER False -- NXT .L000006B7
    CFG .L000006A6
    CFG .L000006B7
    GRAPH_NXT .L000006A6
    GRAPH_NXT .L000006B7
    GRAPH_PRV .L00000694
    GRAPH_PRV .L000006AB
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1712 [None][] cmp {4:1,ad:u32,imm:uint32(0x78),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x9),size:u32} 
'I386_MIASM.InstructionCFG'>1717 [jcc][] jle {ad:False,size:u32,symb__intern__:{.L000006A6:1}} 

<Symbol '.L000006B7' section='.text', address=1719>
    ENDER False -- NXT .L000006BE
    CFG .L000006EB
    CFG .L000006BE
    GRAPH_NXT .L000006BE
    GRAPH_NXT .L000006EB
    GRAPH_PRV .L000006B0
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1719 [None][] cmp {4:1,ad:u32,imm:uint32(0x7c),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x26),size:u32} 
'I386_MIASM.InstructionCFG'>1724 [jcc][] jg {ad:False,size:u32,symb__intern__:{.L000006EB:1}} 

<Symbol '.L000006BE' section='.text', address=1726>
    ENDER True -- NXT None
    CFG .L000006AB
    GRAPH_NXT .L000006AB
    GRAPH_PRV .L000006B7
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1726 [None][] mov {1:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x7c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1730 [None][] mov {2:1,ad:False,size:u32} {ad:False,imm:uint32(0x92492493),size:u32} 
'I386_MIASM.InstructionCFG'>1735 [None][] mov {0:1,ad:False,size:u32} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1737 [None][] imul {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1739 [None][] lea {0:1,ad:False,size:u32} {1:1,2:1,ad:True,size:True,txt:edx+ecx} 
'I386_MIASM.InstructionCFG'>1742 [None][] mov {2:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1744 [None][] sar {2:1,ad:False,size:u32} {ad:False,imm:uint32(0x2),size:u32} 
'I386_MIASM.InstructionCFG'>1747 [None][] mov {0:1,ad:False,size:u32} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1749 [None][] sar {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x1f),size:u32} 
'I386_MIASM.InstructionCFG'>1752 [None][] sub {2:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1754 [None][] mov {0:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1756 [None][] sal {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x3),size:u32} 
'I386_MIASM.InstructionCFG'>1759 [None][] sub {0:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1761 [None][] mov {2:1,ad:False,size:u32} {1:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1763 [None][] sub {2:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1765 [None][] sub {4:1,ad:u32,imm:uint32(0x78),size:u32,txt:esp+imm} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1769 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L000006AB:1}} 

<Symbol '.L000006EB' section='.text', address=1771>
    ENDER True -- NXT None
    CFG .L000007B2
    GRAPH_NXT .L000007B2
    GRAPH_PRV .L000006B7
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1771 [None][] add {4:1,ad:u32,imm:uint32(0x7c),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1776 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{X.2503:1}} 
'I386_MIASM.InstructionCFG'>1781 [None][] mov {2:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1785 [None][] sal {2:1,ad:False,size:u32} {ad:False,imm:uint32(0x2),size:u32} 
'I386_MIASM.InstructionCFG'>1788 [None][] add {0:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1790 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>1792 [None][] mov {4:1,ad:u32,imm:uint32(0x80),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1799 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L000007B2:1}} 

<Symbol '.L0000070C' section='.text', address=1804>
    ENDER True -- NXT None
    CFG .L00000784
    GRAPH_NXT .L00000784
    GRAPH_PRV .L000007B2
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1804 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x80),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1811 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,imm:uint32(0x8),size:u32,txt:eax+imm} 
'I386_MIASM.InstructionCFG'>1814 [None][] mov {4:1,ad:u32,imm:uint32(0x70),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1818 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000784:1}} 

<Symbol '.L0000071C' section='.text', address=1820>
    ENDER True -- NXT None
    CFG .L0000077A
    GRAPH_NXT .L0000077A
    GRAPH_PRV .L00000784
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1820 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x70),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1824 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>1827 [None][] movsx {0:1,ad:False,size:u32} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>1830 [None][] sub {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x7c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1834 [None][] mov {4:1,ad:u32,imm:uint32(0x74),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1838 [None][] add {4:1,ad:u32,imm:uint32(0x70),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1843 [None][] mov {4:1,ad:u32,imm:uint32(0x78),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>1851 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L0000077A:1}} 

<Symbol '.L0000073D' section='.text', address=1853>
    ENDER False -- NXT .L00000744
    CFG .L00000754
    CFG .L00000744
    GRAPH_NXT .L00000744
    GRAPH_NXT .L00000754
    GRAPH_PRV .L0000077A
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1853 [None][] cmp {4:1,ad:u32,imm:uint32(0x74),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>1858 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L00000754:1}} 

<Symbol '.L00000744' section='.text', address=1860>
    ENDER False -- NXT .L00000754
    CFG .L00000783
    CFG .L00000754
    GRAPH_NXT .L00000754
    GRAPH_NXT .L00000783
    GRAPH_PRV .L0000073D
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1860 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x70),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1864 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>1867 [None][] movsx {0:1,ad:False,size:u32} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>1870 [None][] cmp {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x7c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1874 [jcc][] jl {ad:False,size:u32,symb__intern__:{.L00000783:1}} 

<Symbol '.L00000754' section='.text', address=1876>
    ENDER False -- NXT .L00000771
    CFG putchar
    GRAPH_NXT putchar
    GRAPH_PRV .L0000073D
    GRAPH_PRV .L00000744
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1876 [None][] mov {1:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{R:1},txt:imm} 
'I386_MIASM.InstructionCFG'>1882 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x74),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1886 [None][] mov {2:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1888 [None][] and {2:1,ad:False,size:u32} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1891 [None][] mov {0:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1893 [None][] add {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1895 [None][] add {0:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1897 [None][] add {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x20),size:u32} 
'I386_MIASM.InstructionCFG'>1900 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>1903 [sub][] call {1:1,ad:False,size:u32} 

<Symbol '.L00000771' section='.text', address=1905>
    ENDER False -- NXT .L0000077A
    CFG .L0000077A
    GRAPH_NXT .L0000077A
    GRAPH_PRV putchar
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1905 [None][] add {4:1,ad:u32,imm:uint32(0x78),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1910 [None][] sar {4:1,ad:u32,imm:uint32(0x74),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 

<Symbol '.L0000077A' section='.text', address=1914>
    ENDER False -- NXT .L00000781
    CFG .L0000073D
    CFG .L00000781
    GRAPH_NXT .L0000073D
    GRAPH_NXT .L00000781
    GRAPH_PRV .L0000071C
    GRAPH_PRV .L00000771
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1914 [None][] cmp {4:1,ad:u32,imm:uint32(0x78),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x5),size:u32} 
'I386_MIASM.InstructionCFG'>1919 [jcc][] jle {ad:False,size:u32,symb__intern__:{.L0000073D:1}} 

<Symbol '.L00000781' section='.text', address=1921>
    ENDER True -- NXT None
    CFG .L00000784
    GRAPH_NXT .L00000784
    GRAPH_PRV .L0000077A
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1921 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000784:1}} 

<Symbol '.L00000783' section='.text', address=1923>
    ENDER False -- NXT .L00000784
    CFG .L00000784
    GRAPH_NXT .L00000784
    GRAPH_PRV .L00000744
-- STACK00 ['   0x7fc-.text-.L000007E8']
'plasmasm.constants.P2Align'>1923 [None][.]nop 90[.p2align 2]

<Symbol '.L00000784' section='.text', address=1924>
    ENDER False -- NXT .L00000794
    CFG .L0000071C
    CFG .L00000794
    GRAPH_NXT .L0000071C
    GRAPH_NXT .L00000794
    GRAPH_PRV .L0000070C
    GRAPH_PRV .L00000781
    GRAPH_PRV .L00000783
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1924 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x70),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1928 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>1931 [None][] movsx {0:1,ad:False,size:u32} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>1934 [None][] cmp {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x7c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1938 [jcc][] jge {ad:False,size:u32,symb__intern__:{.L0000071C:1}} 

<Symbol '.L00000794' section='.text', address=1940>
    ENDER False -- NXT .L000007A2
    CFG putchar
    GRAPH_NXT putchar
    GRAPH_PRV .L00000784
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1940 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{R:1}} 
'I386_MIASM.InstructionCFG'>1945 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0xa),size:u32} 
'I386_MIASM.InstructionCFG'>1952 [sub][] call {0:1,ad:False,size:u32} 

<Symbol '.L000007A2' section='.text', address=1954>
    ENDER False -- NXT .L000007B2
    CFG .L000007B2
    GRAPH_NXT .L000007B2
    GRAPH_PRV putchar
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1954 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x80),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1961 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>1963 [None][] mov {4:1,ad:u32,imm:uint32(0x80),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 

<Symbol '.L000007B2' section='.text', address=1970>
    ENDER False -- NXT .L000007C0
    CFG .L0000070C
    CFG .L000007C0
    GRAPH_NXT .L0000070C
    GRAPH_NXT .L000007C0
    GRAPH_PRV .L000006EB
    GRAPH_PRV .L000007A2
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1970 [None][] cmp {4:1,ad:u32,imm:uint32(0x80),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>1978 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L0000070C:1}} 

<Symbol '.L000007C0' section='.text', address=1984>
    ENDER False -- NXT .L000007CA
    CFG .L000002CE
    CFG .L000007CA
    GRAPH_NXT .L000002CE
    GRAPH_NXT .L000007CA
    GRAPH_PRV .L000007B2
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1984 [None][] cmp {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>1988 [jcc][] jle {ad:False,size:u32,symb__intern__:{.L000002CE:1}} 

<Symbol '.L000007CA' section='.text', address=1994>
    ENDER False -- NXT .L000007DA
    CFG .L00000853
    CFG .L000007DA
    GRAPH_NXT .L000007DA
    GRAPH_NXT .L00000853
    GRAPH_PRV .L000007C0
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>1994 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x1c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>1998 [None][] add {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x8),size:u32} 
'I386_MIASM.InstructionCFG'>2001 [None][] mov {0:1,ad:False,size:u32} {0:1,ad:u32,size:u32,txt:eax} 
'I386_MIASM.InstructionCFG'>2003 [None][] movzx {0:1,ad:False,size:u32} {0:1,ad:u08,size:u08,txt:eax} 
'I386_MIASM.InstructionCFG'>2006 [None][] test {0:1,ad:False,size:u08} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>2008 [jcc][] je {ad:False,size:u32,symb__intern__:{.L00000853:1}} 

<Symbol '.L000007DA' section='.text', address=2010>
    ENDER False -- NXT .L000007E8
    CFG putchar
    GRAPH_NXT putchar
    GRAPH_PRV .L000007CA
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>2010 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{R:1}} 
'I386_MIASM.InstructionCFG'>2015 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0xa),size:u32} 
'I386_MIASM.InstructionCFG'>2022 [sub][] call {0:1,ad:False,size:u32} 

<Symbol '.L000007E8' section='.text', address=2024>
    ENDER True -- NXT None
    CFG main
    GRAPH_NXT main
    GRAPH_PRV putchar
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>2024 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x1c),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>2028 [None][] mov {4:1,ad:u32,imm:uint32(0x4),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>2032 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0x4),size:u32} 
'I386_MIASM.InstructionCFG'>2039 [sub][] call {ad:False,size:u32,symb__intern__:{main:1}} 

<Symbol '.L000007FC' section='.text', size=2, address=2044>
    ENDER True -- NXT None
    CFG .L00000853
    GRAPH_NXT .L00000853
'I386_MIASM.InstructionCFG'>2044 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000853:1}} 

<Symbol '.L000007FE' section='.text', address=2046>
    ENDER True -- NXT None
    CFG .L00000853
    GRAPH_NXT .L00000853
    GRAPH_PRV .L0000066C
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>2046 [None][] nop 90
'I386_MIASM.InstructionCFG'>2047 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000853:1}} 

<Symbol '.L00000801' section='.text', address=2049>
    ENDER False -- NXT .L00000824
    CFG .L00000571
    CFG .L00000824
    GRAPH_NXT .L00000571
    GRAPH_NXT .L00000824
    GRAPH_PRV .L00000854
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>2049 [None][] mov {0:1,ad:False,size:u32} {ad:u32,size:u32,symb__intern__:{X.2503:1}} 
'I386_MIASM.InstructionCFG'>2054 [None][] mov {2:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>2058 [None][] sal {2:1,ad:False,size:u32} {ad:False,imm:uint32(0x2),size:u32} 
'I386_MIASM.InstructionCFG'>2061 [None][] add {0:1,ad:False,size:u32} {2:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>2063 [None][] mov {ad:u32,size:u32,symb__intern__:{X.2503:1}} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>2068 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>2072 [None][] and {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x7),size:u32} 
'I386_MIASM.InstructionCFG'>2075 [None][] cmp {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x3),size:u32} 
'I386_MIASM.InstructionCFG'>2078 [jcc][] jg {ad:False,size:u32,symb__intern__:{.L00000571:1}} 

<Symbol '.L00000824' section='.text', address=2084>
    ENDER False -- NXT .L00000835
    CFG putchar
    GRAPH_NXT putchar
    GRAPH_PRV .L00000801
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>2084 [None][] sub {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>2089 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>2093 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>2096 [sub][] call {ad:False,size:u32,symb__intern__:{putchar:1}} 

<Symbol '.L00000835' section='.text', address=2101>
    ENDER False -- NXT .L00000840
    CFG .L00000849
    CFG .L00000840
    GRAPH_NXT .L00000840
    GRAPH_NXT .L00000849
    GRAPH_PRV putchar
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>2101 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>2105 [None][] and {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x7),size:u32} 
'I386_MIASM.InstructionCFG'>2108 [None][] test {0:1,ad:False,size:u32} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>2110 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L00000849:1}} 

<Symbol '.L00000840' section='.text', address=2112>
    ENDER True -- NXT None
    CFG .L0000084D
    GRAPH_NXT .L0000084D
    GRAPH_PRV .L00000835
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>2112 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} 
'I386_MIASM.InstructionCFG'>2116 [None][] sub {0:1,ad:False,size:u32} {ad:False,imm:uint32(0x2a),size:u32} 
'I386_MIASM.InstructionCFG'>2119 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L0000084D:1}} 

<Symbol '.L00000849' section='.text', address=2121>
    ENDER False -- NXT .L0000084D
    CFG .L0000084D
    GRAPH_NXT .L0000084D
    GRAPH_PRV .L00000835
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>2121 [None][] mov {0:1,ad:False,size:u32} {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} 

<Symbol '.L0000084D' section='.text', address=2125>
    ENDER True -- NXT None
    CFG .L00000854
    GRAPH_NXT .L00000854
    GRAPH_PRV .L00000840
    GRAPH_PRV .L00000849
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>2125 [None][] mov {4:1,ad:u32,imm:uint32(0x44),size:u32,txt:esp+imm} {0:1,ad:False,size:u32} 
'I386_MIASM.InstructionCFG'>2129 [jmp][] jmp {ad:False,size:u32,symb__intern__:{.L00000854:1}} 

<Symbol '.L00000853' section='.text', address=2131>
    ENDER False -- NXT .L00000854
    CFG .L00000854
    GRAPH_NXT .L00000854
    GRAPH_PRV .L000007CA
    GRAPH_PRV .L000007FC
    GRAPH_PRV .L000007FE
-- STACK00 ['   0x7fc-.text-.L000007E8']
'plasmasm.constants.P2Align'>2131 [None][.]nop 90[.p2align 2]

<Symbol '.L00000854' section='.text', address=2132>
    ENDER False -- NXT .L00000863
    CFG .L00000801
    CFG .L00000863
    GRAPH_NXT .L00000801
    GRAPH_NXT .L00000863
    GRAPH_PRV .L0000084D
    GRAPH_PRV .L00000853
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>2132 [None][] cmp {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>2136 [None][] setle {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>2139 [None][] add {5:1,ad:u32,imm:uint32(0x8),size:u32,txt:ebp+imm} {ad:False,imm:uint32(0x1),size:u32} 
'I386_MIASM.InstructionCFG'>2143 [None][] test {0:1,ad:False,size:u08} {0:1,ad:False,size:u08} 
'I386_MIASM.InstructionCFG'>2145 [jcc][] jne {ad:False,size:u32,symb__intern__:{.L00000801:1}} 

<Symbol '.L00000863' section='.text', address=2147>
    ENDER True -- NXT None
    CFG exit
    GRAPH_NXT exit
    GRAPH_PRV .L00000854
-- STACK00 ['   0x7fc-.text-.L000007E8']
'I386_MIASM.InstructionCFG'>2147 [None][] mov {4:1,ad:u32,size:u32,txt:esp} {ad:False,imm:uint32(0x0),size:u32} 
'I386_MIASM.InstructionCFG'>2154 [sub][] call {ad:False,size:u32,symb__intern__:{exit:1}} 

<Symbol 'R' section='.data', type='object', bind='globl', size=4, address=0>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>0 (4, 'long', 'I') [<Symbol 'putchar' bind='globl'>]

<Symbol '.LC00000000' section='.rodata', address=0>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>0 .string	"aH B0 BB B, , `0 b0 @, 0 Hb, B2 H0 b, B bH HB b`, H, @ 2 `, @2 H2 BH Bb b@"

<Symbol '.LC0000004B' section='.rodata', type='padding', address=75>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant1Byte'>75 (1, 'byte', 'B') [0]

<Symbol '.LC0000004C' section='.rodata', align=4, address=76>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>76 .string	"AH B0 BB B, , `0 b0 @, 0 Hb, B2 H0 b, B bH HB b`, H, @ 2 `, @2 H2 BH Bb b@"

<Symbol '.LC00000097' section='.rodata', type='padding', address=151>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant1Byte'>151 (1, 'byte', 'B') [0]

<Symbol '.LC00000098' section='.rodata', align=2, address=152>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>152 .string	"0bHb, HbH `H2 @b, @H @0 B@ b@ bH0 bHB"

<Symbol '.LC000000BE' section='.rodata', address=190>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>190 .string	".HHH"

<Symbol '.LC000000C3' section='.rodata', address=195>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>195 .string	"?`H0"

<Symbol '.LC000000C8' section='.rodata', address=200>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>200 .string	",b@b,"

<Symbol '.LC000000CE' section='.rodata', address=206>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>206 .string	" +"

<Symbol '.LC000000D1' section='.rodata', address=209>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>209 .string	"r"

<Symbol '.LC000000D3' section='.rodata', type='padding', address=211>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant1Byte'>211 (1, 'byte', 'B') [0]

<Symbol '.LC000000D4' section='.rodata', align=2, address=212>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>212 (4, 'long', 'I') [<Symbol '.L00000694' section='.text', address=1684>]
'plasmasm.constants.Constant4Byte'>216 (4, 'long', 'I') [<Symbol '.L0000021D' section='.text', address=541>]
'plasmasm.constants.Constant4Byte'>220 (4, 'long', 'I') [<Symbol '.L000002F5' section='.text', address=757>]
'plasmasm.constants.Constant4Byte'>224 (4, 'long', 'I') [<Symbol '.L0000048B' section='.text', address=1163>]
'plasmasm.constants.Constant4Byte'>228 (4, 'long', 'I') [<Symbol '.L000005FF' section='.text', address=1535>]

<Symbol 'X.2503' section='.bss', type='object', bind='local', align=4, size=4, address=0>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>0 .zero	4

<Symbol 'i.2546' section='.bss', type='object', bind='local', align=4, size=4, address=4>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>4 .zero	4

<Symbol 'c.2498' section='.bss', type='object', bind='local', size=1, address=8>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>8 .zero	1

<Symbol '__ctype_b_loc' bind='globl'>
    GRAPH_NXT .L00000011
    GRAPH_PRV P
-- STACK00 ['.L00000011', '.L00000065', '.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L00000011', '.L00000065', '.L0000012C', '.L0000052F']
-- STACK02 ['.L00000011', '.L000000BC']
-- STACK03 ['.L00000011', '.L00000169']
-- STACK04 ['.L00000011', '.L00000191']

<Symbol 'c9.c' bind='file'>

<Symbol 'calloc' bind='globl'>
    GRAPH_NXT .L00000279
    GRAPH_NXT .L000004A7
    GRAPH_PRV .L0000021D
    GRAPH_PRV .L0000048B
-- STACK00 ['.L00000279', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L000004A7']

<Symbol 'exit' bind='globl'>
    GRAPH_PRV .L0000010C
    GRAPH_PRV .L00000287
    GRAPH_PRV .L000002E9
    GRAPH_PRV .L0000040B
    GRAPH_PRV .L000004B5
    GRAPH_PRV .L000004EA
    GRAPH_PRV .L00000863
-- STACK00 ['   0x118-.text-.L0000010C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['   0x118-.text-.L0000010C', '.L0000052F']
-- STACK02 ['   0x293-.text-.L00000287']
-- STACK03 ['   0x2f5-.text-.L000002E9']
-- STACK04 ['   0x417-.text-.L0000040B']
-- STACK05 ['   0x4c1-.text-.L000004B5']
-- STACK06 ['   0x4f6-.text-.L000004EA']
-- STACK07 ['   0x86f-.text-.L00000863']

<Symbol 'fclose' bind='globl'>
    GRAPH_NXT .L000005FF
    GRAPH_PRV .L000005F3
-- STACK00 ['.L000005FF', '   0x7fc-.text-.L000007E8']

<Symbol 'fgets' bind='globl'>
    GRAPH_NXT .L00000558
    GRAPH_PRV .L00000534
-- STACK00 ['.L00000558', '   0x7fc-.text-.L000007E8']

<Symbol 'fopen' bind='globl'>
    GRAPH_NXT .L000004DF
    GRAPH_PRV .L000004C1
-- STACK00 ['.L000004DF', '   0x7fc-.text-.L000007E8']

<Symbol 'getchar' bind='globl'>
    GRAPH_NXT .L000002D4
    GRAPH_NXT .L0000033E
    GRAPH_PRV .L000002CF
    GRAPH_PRV .L00000339
-- STACK00 ['.L000002D4', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000033E']

<Symbol 'malloc' bind='globl'>
    GRAPH_NXT .L0000007D
    GRAPH_NXT .L00000103
    GRAPH_PRV .L00000069
    GRAPH_PRV .L000000F7
-- STACK00 ['.L0000007D', '.L0000012C', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L0000007D', '.L0000012C', '.L0000052F']
-- STACK02 ['.L00000103', '.L000002BD', '   0x7fc-.text-.L000007E8']
-- STACK03 ['.L00000103', '.L0000052F']

<Symbol 'putchar' bind='globl'>
    GRAPH_NXT .L000001D6
    GRAPH_NXT .L00000398
    GRAPH_NXT .L000003C5
    GRAPH_NXT .L000003EE
    GRAPH_NXT .L00000771
    GRAPH_NXT .L000007A2
    GRAPH_NXT .L000007E8
    GRAPH_NXT .L00000835
    GRAPH_PRV .L000001C1
    GRAPH_PRV .L0000037E
    GRAPH_PRV .L000003AD
    GRAPH_PRV .L000003E0
    GRAPH_PRV .L00000754
    GRAPH_PRV .L00000794
    GRAPH_PRV .L000007DA
    GRAPH_PRV .L00000824
-- STACK00 ['.L000001D6', '.L000002E4', '   0x7fc-.text-.L000007E8']
-- STACK01 ['.L00000398']
-- STACK02 ['.L000003C5']
-- STACK03 ['.L000003EE']
-- STACK04 ['.L00000771']
-- STACK05 ['.L000007A2']
-- STACK06 ['.L000007E8']
-- STACK07 ['.L00000835']

<Symbol 'c.2498+1' section='.bss', type='endofsymbol', bind='local', address=9>
    ENDER None -- NXT None
    CFG None

<Symbol 'R+4' section='.data', type='padding', address=4>
    ENDER None -- NXT None
    CFG None

<Symbol '.LC000000E8' section='.rodata', type='endofsymbol', address=232>
    ENDER None -- NXT None
    CFG None

<Symbol 'main+1678' section='.text', type='padding', address=2159>
    ENDER None -- NXT None
    CFG None

('.comment', '.comment,"MS",@progbits,1')
('.eh_frame', '.eh_frame,"a",@progbits')
('.note.GNU-stack', '.note.GNU-stack,"",@progbits')
relocatable:True,ident:'GCC: (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3',endianess:'<',eh_frame_size:212,eh_frame_relocs:{32: (('ELF', 3, 2), {'section': '.text', 'address': 0}), 64: (('ELF', 3, 2), {'section': '.text', 'address': 0}), 96: (('ELF', 3, 2), {'section': '.text', 'address': 0}), 128: (('ELF', 3, 2), {'section': '.text', 'address': 0}), 160: (('ELF', 3, 2), {'section': '.text', 'address': 0}), 192: (('ELF', 3, 2), {'section': '.text', 'address': 0})},container:'ELF',compiler:'gcc'
