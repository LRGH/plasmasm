<Symbol 'strntoGENexp' section='.text', type='function', bind='globl', size=335, address=0>
    ENDER False -- NXT .L00000046
    CFG .L00000052
    CFG .L00000046
    GRAPH_NXT .L00000046
    GRAPH_NXT .L00000052
'X64_AMOCO.InstructionDEAD'>0 [None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>2 [None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>4 [None]movq      %rdi, %r13
	 R['rdi', 'rip'] W['r13', 'rip']
	 D['r13', 'r14', 'rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'r14', 'rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>10 [None]movq      %rsi, %r12
	 R['rip', 'rsi'] W['r12', 'rip']
	 D['r12', 'r14', 'rax', 'rbp', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>13 [None]movq      avma@GOTPCREL(%rip), %rbp
	 R['MEM', 'rip'] W['rbp', 'rip']
	 D['r14', 'rax', 'rbp', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>20 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>21 [None]leaq      6(%rsi), %rbx
	 R['MEM', 'rip', 'rsi'] W['rbx', 'rip']
	 D['r14', 'rax', 'rbx', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>25 [None]shrq      $3, %rbx
	 R['rbx', 'rflags', 'rip'] W['rbx', 'rflags', 'rip']
	 D['r14', 'rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>29 [None]movq      (%rbp), %rax
	 R['MEM', 'rbp', 'rip'] W['rax', 'rip']
	 D['r14', 'rax', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>33 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['r14', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>37 [None]leaq      0(,%rbx,8), %rdx
	 R['MEM', 'rbx', 'rip'] W['rdx', 'rip']
	 D['r14', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>45 [None]movq      %rax, %r14
	 R['rax', 'rip'] W['r14', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>48 [None]subq      %rdx, %r14
	 R['r14', 'rdx', 'rip'] W['r14', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>51 [None]movq      bot@GOTPCREL(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>58 [None]subq      (%rdx), %rax
	 R['MEM', 'rax', 'rdx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>61 [None]shrq      $3, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>65 [None]cmpq      %rax, %rbx
	 R['rax', 'rbx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>68 [jcc]jbe       .L00000052
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000052' section='.text', address=82>]

<Symbol '.L00000046' section='.text', address=70>
    ENDER False -- NXT .L00000052
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV strntoGENexp
'X64_AMOCO.InstructionDEAD'>70 [None]movl      $14, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>75 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>77 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00000052' section='.text', address=82>
    ENDER False -- NXT .L00000065
    CFG .L00000078
    CFG .L00000065
    GRAPH_NXT .L00000065
    GRAPH_NXT .L00000078
    GRAPH_PRV pari_err@PLT
    GRAPH_PRV strntoGENexp
'X64_AMOCO.InstructionDEAD'>82 [None]movq      $-72057594037927936, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>92 [None]movq      %r14, (%rbp)
	 R['r14', 'rbp', 'rip'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>96 [None]testq     %rax, %rbx
	 R['rax', 'rbx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>99 [jcc]je        .L00000078
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000078' section='.text', address=120>]

<Symbol '.L00000065' section='.text', address=101>
    ENDER False -- NXT .L00000078
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00000052
'X64_AMOCO.InstructionDEAD'>101 [None]leaq      .LC0(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>108 [None]movl      $15, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>113 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>115 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00000078' section='.text', address=120>
    ENDER False -- NXT .L00000093
    CFG .L00000093
    GRAPH_NXT .L00000093
    GRAPH_PRV .L00000052
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>120 [None]movq      $3026418949592973312, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>130 [None]leaq      8(%r14), %rbp
	 R['MEM', 'r14', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>134 [None]addq      %r13, %r12
	 R['r12', 'r13', 'rip'] W['r12', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>137 [None]orq       %rax, %rbx
	 R['rax', 'rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>140 [None]movq      %rbx, (%r14)
	 R['r14', 'rbx', 'rip'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>143 [None]leaq      1(%r13), %rbx
	 R['MEM', 'r13', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rflags']
	 STACK:{}:()

<Symbol '.L00000093' section='.text', address=147>
    ENDER False -- NXT .L00000098
    CFG .L000000C0
    CFG .L00000098
    GRAPH_NXT .L00000098
    GRAPH_NXT .L000000C0
    GRAPH_PRV .L00000078
    GRAPH_PRV .L00000104
    GRAPH_PRV .L00000146
'X64_AMOCO.InstructionDEAD'>147 [None]cmpq      %r12, %rbx
	 R['r12', 'rbx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>150 [jcc]jbe       .L000000C0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000000C0' section='.text', address=192>]

<Symbol '.L00000098' section='.text', address=152>
    ENDER True -- NXT None
    CFG .L00000136
    GRAPH_NXT .L00000136
    GRAPH_PRV .L00000093
'X64_AMOCO.InstructionDEAD'>152 [jmp]jmp       .L00000136
	 R['rip'] W['rip']
	 D['r12', 'r13', 'rax', 'rbx']
	 STACK:{}:()
	 dst=[<Symbol '.L00000136' section='.text', address=310>]

<Symbol '.L0000009D' section='.text', size=3, address=157>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>157 [None].p2align 4,,10
'plasmasm.constants.P2Align'>157 [None].p2align 3

<Symbol '.L000000A0' section='.text', address=160>
    ENDER False -- NXT .L000000A5
    CFG .L000000F0
    CFG .L000000A5
    GRAPH_NXT .L000000A5
    GRAPH_NXT .L000000F0
    GRAPH_PRV .L000000C7
'X64_AMOCO.InstructionDEAD'>160 [None]cmpb      $116, %dl
	 R['rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>163 [jcc]je        .L000000F0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000000F0' section='.text', address=240>]

<Symbol '.L000000A5' section='.text', address=165>
    ENDER False -- NXT .L000000AA
    CFG .L000000E0
    CFG .L000000AA
    GRAPH_NXT .L000000AA
    GRAPH_NXT .L000000E0
    GRAPH_PRV .L000000A0
'X64_AMOCO.InstructionDEAD'>165 [None]cmpb      $101, %dl
	 R['rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>168 [jcc]je        .L000000E0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000000E0' section='.text', address=224>]

<Symbol '.L000000AA' section='.text', address=170>
    ENDER False -- NXT .L000000B3
    CFG .L00000118
    CFG .L000000B3
    GRAPH_NXT .L000000B3
    GRAPH_NXT .L00000118
    GRAPH_PRV .L000000A5
'X64_AMOCO.InstructionDEAD'>170 [None]movb      %dl, (%rbp)
	 R['rbp', 'rdx', 'rip'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>173 [None]cmpb      $0, 1(%rbx)
	 R['MEM', 'rbx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>177 [jcc]je        .L00000118
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000118' section='.text', address=280>]

<Symbol '.L000000B3' section='.text', address=179>
    ENDER False -- NXT .L000000B8
    CFG .L000000B8
    GRAPH_NXT .L000000B8
    GRAPH_PRV .L000000AA
'plasmasm.constants.P2Align'>179 [None].p2align 4,,10
'plasmasm.constants.P2Align'>179 [None].p2align 3

<Symbol '.L000000B8' section='.text', address=184>
    ENDER False -- NXT .L000000C0
    CFG .L000000C0
    GRAPH_NXT .L000000C0
    GRAPH_PRV .L000000B3
    GRAPH_PRV .L000000D0
    GRAPH_PRV .L000000E0
    GRAPH_PRV .L000000F0
    GRAPH_PRV .L00000127
'X64_AMOCO.InstructionDEAD'>184 [None]addq      $2, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>188 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:()

<Symbol '.L000000C0' section='.text', address=192>
    ENDER False -- NXT .L000000C7
    CFG .L00000100
    CFG .L000000C7
    GRAPH_NXT .L000000C7
    GRAPH_NXT .L00000100
    GRAPH_PRV .L00000093
    GRAPH_PRV .L000000B8
'X64_AMOCO.InstructionDEAD'>192 [None]movzbl    (%rbx), %eax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>195 [None]cmpb      $92, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>197 [jcc]jne       .L00000100
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000100' section='.text', address=256>]

<Symbol '.L000000C7' section='.text', address=199>
    ENDER False -- NXT .L000000D0
    CFG .L000000A0
    CFG .L000000D0
    GRAPH_NXT .L000000A0
    GRAPH_NXT .L000000D0
    GRAPH_PRV .L000000C0
'X64_AMOCO.InstructionDEAD'>199 [None]movzbl    1(%rbx), %edx
	 R['MEM', 'rbx', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>203 [None]cmpb      $110, %dl
	 R['rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>206 [jcc]jne       .L000000A0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000000A0' section='.text', address=160>]

<Symbol '.L000000D0' section='.text', address=208>
    ENDER True -- NXT None
    CFG .L000000B8
    GRAPH_NXT .L000000B8
    GRAPH_PRV .L000000C7
'X64_AMOCO.InstructionDEAD'>208 [None]movb      $10, (%rbp)
	 R['rbp', 'rip'] W['MEM', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>212 [jmp]jmp       .L000000B8
	 R['rip'] W['rip']
	 D['rax', 'rflags']
	 STACK:{}:()
	 dst=[<Symbol '.L000000B8' section='.text', address=184>]

<Symbol '.L000000D6' section='.text', size=10, address=214>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>214 [None].p2align 4

<Symbol '.L000000E0' section='.text', address=224>
    ENDER True -- NXT None
    CFG .L000000B8
    GRAPH_NXT .L000000B8
    GRAPH_PRV .L000000A5
'X64_AMOCO.InstructionDEAD'>224 [None]movb      $27, (%rbp)
	 R['rbp', 'rip'] W['MEM', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>228 [jmp]jmp       .L000000B8
	 R['rip'] W['rip']
	 D['rax', 'rflags']
	 STACK:{}:()
	 dst=[<Symbol '.L000000B8' section='.text', address=184>]

<Symbol '.L000000E6' section='.text', size=10, address=230>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>230 [None].p2align 4

<Symbol '.L000000F0' section='.text', address=240>
    ENDER True -- NXT None
    CFG .L000000B8
    GRAPH_NXT .L000000B8
    GRAPH_PRV .L000000A0
'X64_AMOCO.InstructionDEAD'>240 [None]movb      $9, (%rbp)
	 R['rbp', 'rip'] W['MEM', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>244 [jmp]jmp       .L000000B8
	 R['rip'] W['rip']
	 D['rax', 'rflags']
	 STACK:{}:()
	 dst=[<Symbol '.L000000B8' section='.text', address=184>]

<Symbol '.L000000F6' section='.text', size=10, address=246>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>246 [None].p2align 4

<Symbol '.L00000100' section='.text', address=256>
    ENDER False -- NXT .L00000104
    CFG .L00000130
    CFG .L00000104
    GRAPH_NXT .L00000104
    GRAPH_NXT .L00000130
    GRAPH_PRV .L000000C0
'X64_AMOCO.InstructionDEAD'>256 [None]cmpb      $34, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>258 [jcc]je        .L00000130
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000130' section='.text', address=304>]

<Symbol '.L00000104' section='.text', address=260>
    ENDER True -- NXT None
    CFG .L00000093
    GRAPH_NXT .L00000093
    GRAPH_PRV .L00000100
'X64_AMOCO.InstructionDEAD'>260 [None]movb      %al, (%rbp)
	 R['rax', 'rbp', 'rip'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>263 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>267 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>271 [jmp]jmp       .L00000093
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{}:()
	 dst=[<Symbol '.L00000093' section='.text', address=147>]

<Symbol '.L00000111' section='.text', size=7, address=273>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>273 [None].p2align 4,,10
'plasmasm.constants.P2Align'>273 [None].p2align 3

<Symbol '.L00000118' section='.text', address=280>
    ENDER False -- NXT .L00000127
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L000000AA
'X64_AMOCO.InstructionDEAD'>280 [None]leaq      .LC1(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>287 [None]movq      %r13, %rsi
	 R['r13', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>290 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00000127' section='.text', address=295>
    ENDER True -- NXT None
    CFG .L000000B8
    GRAPH_NXT .L000000B8
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>295 [jmp]jmp       .L000000B8
	 R['rip'] W['rip']
	 D['rax', 'rflags']
	 STACK:{}:()
	 dst=[<Symbol '.L000000B8' section='.text', address=184>]

<Symbol '.L00000129' section='.text', size=7, address=297>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>297 [None].p2align 4

<Symbol '.L00000130' section='.text', address=304>
    ENDER False -- NXT .L00000136
    CFG .L00000146
    CFG .L00000136
    GRAPH_NXT .L00000136
    GRAPH_NXT .L00000146
    GRAPH_PRV .L00000100
'X64_AMOCO.InstructionDEAD'>304 [None]cmpb      $34, 1(%rbx)
	 R['MEM', 'rbx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>308 [jcc]je        .L00000146
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000146' section='.text', address=326>]

<Symbol '.L00000136' section='.text', address=310>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV .L00000098
    GRAPH_PRV .L00000130
'X64_AMOCO.InstructionDEAD'>310 [None]movb      $0, (%rbp)
	 R['rbp', 'rip'] W['MEM', 'rip']
	 D['r12', 'r13', 'rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>314 [None]movq      %r14, %rax
	 R['r14', 'rip'] W['rax', 'rip']
	 D['r12', 'r13', 'rax', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>317 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>318 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>319 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>321 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>323 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>325 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[None]

<Symbol '.L00000146' section='.text', address=326>
    ENDER True -- NXT None
    CFG .L00000093
    GRAPH_NXT .L00000093
    GRAPH_PRV .L00000130
'X64_AMOCO.InstructionDEAD'>326 [None]addq      $2, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>330 [jmp]jmp       .L00000093
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{}:()
	 dst=[<Symbol '.L00000093' section='.text', address=147>]

<Symbol '.L0000014F' section='.text', type='padding', address=335>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>335 [None].p2align 4,,10
'plasmasm.constants.P2Align'>335 [None].p2align 3

<Symbol 'parseproto' section='.text', type='function', bind='globl', size=514, address=336>
    ENDER False -- NXT .L00000168
    CFG .L00000210
    CFG .L00000168
    GRAPH_NXT .L00000168
    GRAPH_NXT .L00000210
'X64_AMOCO.InstructionDEAD'>336 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>338 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>339 [None]movq      %rsi, %r12
	 R['rip', 'rsi'] W['r12', 'rip']
	 D['r12', 'rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>342 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>343 [None]movq      (%rdi), %rbx
	 R['MEM', 'rdi', 'rip'] W['rbx', 'rip']
	 D['rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>346 [None]movq      %rdi, %rbp
	 R['rdi', 'rip'] W['rbp', 'rip']
	 D['rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>349 [None]movzbl    (%rbx), %eax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>352 [None]cmpb      $68, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>354 [jcc]je        .L00000210
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000210' section='.text', address=528>]

<Symbol '.L00000168' section='.text', address=360>
    ENDER False -- NXT .L0000016A
    CFG .L00000190
    CFG .L0000016A
    GRAPH_NXT .L0000016A
    GRAPH_NXT .L00000190
    GRAPH_PRV parseproto
'X64_AMOCO.InstructionDEAD'>360 [jcc]jle       .L00000190
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000190' section='.text', address=400>]

<Symbol '.L0000016A' section='.text', address=362>
    ENDER False -- NXT .L00000172
    CFG .L000001F4
    CFG .L00000172
    GRAPH_NXT .L00000172
    GRAPH_NXT .L000001F4
    GRAPH_PRV .L00000168
'X64_AMOCO.InstructionDEAD'>362 [None]cmpb      $102, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>364 [jcc]je        .L000001F4
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000001F4' section='.text', address=500>]

<Symbol '.L00000172' section='.text', address=370>
    ENDER False -- NXT .L00000174
    CFG .L000001C0
    CFG .L00000174
    GRAPH_NXT .L00000174
    GRAPH_NXT .L000001C0
    GRAPH_PRV .L0000016A
'X64_AMOCO.InstructionDEAD'>370 [jcc]jg        .L000001C0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000001C0' section='.text', address=448>]

<Symbol '.L00000174' section='.text', address=372>
    ENDER False -- NXT .L00000178
    CFG .L000001F4
    CFG .L00000178
    GRAPH_NXT .L00000178
    GRAPH_NXT .L000001F4
    GRAPH_PRV .L00000172
'X64_AMOCO.InstructionDEAD'>372 [None]cmpb      $80, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>374 [jcc]je        .L000001F4
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000001F4' section='.text', address=500>]

<Symbol '.L00000178' section='.text', address=376>
    ENDER False -- NXT .L0000017C
    CFG .L000001D2
    CFG .L0000017C
    GRAPH_NXT .L0000017C
    GRAPH_NXT .L000001D2
    GRAPH_PRV .L00000174
'X64_AMOCO.InstructionDEAD'>376 [None]cmpb      $86, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>378 [jcc]jne       .L000001D2
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000001D2' section='.text', address=466>]

<Symbol '.L0000017C' section='.text', address=380>
    ENDER False -- NXT .L00000186
    CFG .L00000300
    CFG .L00000186
    GRAPH_NXT .L00000186
    GRAPH_NXT .L00000300
    GRAPH_PRV .L00000178
'X64_AMOCO.InstructionDEAD'>380 [None]cmpb      $61, 1(%rbx)
	 R['MEM', 'rbx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>384 [jcc]je        .L00000300
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000300' section='.text', address=768>]

<Symbol '.L00000186' section='.text', address=390>
    ENDER True -- NXT None
    CFG .L000001D6
    GRAPH_NXT .L000001D6
    GRAPH_PRV .L0000017C
'X64_AMOCO.InstructionDEAD'>390 [None]movb      $86, (%rsi)
	 R['rip', 'rsi'] W['MEM', 'rip']
	 D['r12', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>393 [jmp]jmp       .L000001D6
	 R['rip'] W['rip']
	 D['r12', 'rax', 'rflags']
	 STACK:{}:()
	 dst=[<Symbol '.L000001D6' section='.text', address=470>]

<Symbol '.L0000018B' section='.text', size=5, address=395>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>395 [None].p2align 4,,10
'plasmasm.constants.P2Align'>395 [None].p2align 3

<Symbol '.L00000190' section='.text', address=400>
    ENDER False -- NXT .L00000198
    CFG .L00000260
    CFG .L00000198
    GRAPH_NXT .L00000198
    GRAPH_NXT .L00000260
    GRAPH_PRV .L00000168
'X64_AMOCO.InstructionDEAD'>400 [None]cmpb      $10, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>402 [jcc]je        .L00000260
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000260' section='.text', address=608>]

<Symbol '.L00000198' section='.text', address=408>
    ENDER False -- NXT .L0000019E
    CFG .L00000258
    CFG .L0000019E
    GRAPH_NXT .L0000019E
    GRAPH_NXT .L00000258
    GRAPH_PRV .L00000190
'X64_AMOCO.InstructionDEAD'>408 [jcc]jle       .L00000258
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000258' section='.text', address=600>]

<Symbol '.L0000019E' section='.text', address=414>
    ENDER False -- NXT .L000001A2
    CFG .L000001F0
    CFG .L000001A2
    GRAPH_NXT .L000001A2
    GRAPH_NXT .L000001F0
    GRAPH_PRV .L00000198
'X64_AMOCO.InstructionDEAD'>414 [None]cmpb      $38, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>416 [jcc]jne       .L000001F0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000001F0' section='.text', address=496>]

<Symbol '.L000001A2' section='.text', address=418>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV .L0000019E
'X64_AMOCO.InstructionDEAD'>418 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['r12', 'rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>422 [None]movb      $42, (%rsi)
	 R['rip', 'rsi'] W['MEM', 'rip']
	 D['r12', 'rax', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>425 [None]movl      $1, %eax
	 R['rip'] W['rax', 'rip']
	 D['r12', 'rax', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>430 [None]movq      %rbx, (%rdi)
	 R['rbx', 'rdi', 'rip'] W['MEM', 'rip']
	 D['r12', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>433 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>434 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>435 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>437 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[None]

<Symbol '.L000001B6' section='.text', size=10, address=438>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>438 [None].p2align 4

<Symbol '.L000001C0' section='.text', address=448>
    ENDER False -- NXT .L000001C4
    CFG .L000001F4
    CFG .L000001C4
    GRAPH_NXT .L000001C4
    GRAPH_NXT .L000001F4
    GRAPH_PRV .L00000172
'X64_AMOCO.InstructionDEAD'>448 [None]cmpb      $112, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>450 [jcc]je        .L000001F4
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000001F4' section='.text', address=500>]

<Symbol '.L000001C4' section='.text', address=452>
    ENDER False -- NXT .L000001C8
    CFG .L000001D2
    CFG .L000001C8
    GRAPH_NXT .L000001C8
    GRAPH_NXT .L000001D2
    GRAPH_PRV .L000001C0
'X64_AMOCO.InstructionDEAD'>452 [None]cmpb      $115, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>454 [jcc]jne       .L000001D2
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000001D2' section='.text', address=466>]

<Symbol '.L000001C8' section='.text', address=456>
    ENDER False -- NXT .L000001D2
    CFG .L00000270
    CFG .L000001D2
    GRAPH_NXT .L000001D2
    GRAPH_NXT .L00000270
    GRAPH_PRV .L000001C4
'X64_AMOCO.InstructionDEAD'>456 [None]cmpb      $42, 1(%rbx)
	 R['MEM', 'rbx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>460 [jcc]je        .L00000270
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000270' section='.text', address=624>]

<Symbol '.L000001D2' section='.text', address=466>
    ENDER False -- NXT .L000001D6
    CFG .L000001D6
    GRAPH_NXT .L000001D6
    GRAPH_PRV .L00000178
    GRAPH_PRV .L000001C4
    GRAPH_PRV .L000001C8
    GRAPH_PRV .L000001F0
    GRAPH_PRV .L00000258
'X64_AMOCO.InstructionDEAD'>466 [None]movb      %al, (%r12)
	 R['r12', 'rax', 'rip'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{}:()

<Symbol '.L000001D6' section='.text', address=470>
    ENDER False -- NXT .L000001E3
    CFG .L000001E3
    GRAPH_NXT .L000001E3
    GRAPH_PRV .L00000186
    GRAPH_PRV .L000001D2
    GRAPH_PRV .L00000315
'X64_AMOCO.InstructionDEAD'>470 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['r12', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>474 [None]movl      $1, %eax
	 R['rip'] W['rax', 'rip']
	 D['r12', 'rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>479 [None]movq      %rbx, (%rbp)
	 R['rbp', 'rbx', 'rip'] W['MEM', 'rip']
	 D['r12']
	 STACK:{}:()

<Symbol '.L000001E3' section='.text', address=483>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV .L000001D6
    GRAPH_PRV .L00000241
    GRAPH_PRV .L00000270
    GRAPH_PRV .L000002C9
'X64_AMOCO.InstructionDEAD'>483 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>484 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>485 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>487 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[None]

<Symbol '.L000001E8' section='.text', size=8, address=488>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>488 [None].p2align 4

<Symbol '.L000001F0' section='.text', address=496>
    ENDER False -- NXT .L000001F4
    CFG .L000001D2
    CFG .L000001F4
    GRAPH_NXT .L000001D2
    GRAPH_NXT .L000001F4
    GRAPH_PRV .L0000019E
'X64_AMOCO.InstructionDEAD'>496 [None]cmpb      $67, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>498 [jcc]jne       .L000001D2
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000001D2' section='.text', address=466>]

<Symbol '.L000001F4' section='.text', address=500>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV .L0000016A
    GRAPH_PRV .L00000174
    GRAPH_PRV .L000001C0
    GRAPH_PRV .L000001F0
'X64_AMOCO.InstructionDEAD'>500 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>504 [None]movb      %al, (%r12)
	 R['r12', 'rax', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>508 [None]movl      $5, %eax
	 R['rip'] W['rax', 'rip']
	 D['r12', 'rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>513 [None]movq      %rbx, (%rbp)
	 R['rbp', 'rbx', 'rip'] W['MEM', 'rip']
	 D['r12']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>517 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>518 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>519 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>521 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[None]

<Symbol '.L0000020A' section='.text', size=6, address=522>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>522 [None].p2align 4,,10
'plasmasm.constants.P2Align'>522 [None].p2align 3

<Symbol '.L00000210' section='.text', address=528>
    ENDER False -- NXT .L00000219
    CFG .L00000241
    CFG .L00000219
    GRAPH_NXT .L00000219
    GRAPH_NXT .L00000241
    GRAPH_PRV parseproto
'X64_AMOCO.InstructionDEAD'>528 [None]movzbl    1(%rbx), %ecx
	 R['MEM', 'rbx', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>532 [None]cmpb      $80, %cl
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>535 [jcc]je        .L00000241
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000241' section='.text', address=577>]

<Symbol '.L00000219' section='.text', address=537>
    ENDER False -- NXT .L0000021F
    CFG .L000002E0
    CFG .L0000021F
    GRAPH_NXT .L0000021F
    GRAPH_NXT .L000002E0
    GRAPH_PRV .L00000210
'X64_AMOCO.InstructionDEAD'>537 [jcc]jg        .L000002E0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000002E0' section='.text', address=736>]

<Symbol '.L0000021F' section='.text', address=543>
    ENDER False -- NXT .L00000224
    CFG .L00000241
    CFG .L00000224
    GRAPH_NXT .L00000224
    GRAPH_NXT .L00000241
    GRAPH_PRV .L00000219
'X64_AMOCO.InstructionDEAD'>543 [None]cmpb      $69, %cl
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>546 [jcc]je        .L00000241
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000241' section='.text', address=577>]

<Symbol '.L00000224' section='.text', address=548>
    ENDER False -- NXT .L0000022A
    CFG .L00000328
    CFG .L0000022A
    GRAPH_NXT .L0000022A
    GRAPH_NXT .L00000328
    GRAPH_PRV .L0000021F
'X64_AMOCO.InstructionDEAD'>548 [jcc]jg        .L00000328
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000328' section='.text', address=808>]

<Symbol '.L0000022A' section='.text', address=554>
    ENDER False -- NXT .L0000022E
    CFG .L00000288
    CFG .L0000022E
    GRAPH_NXT .L0000022E
    GRAPH_NXT .L00000288
    GRAPH_PRV .L00000224
'X64_AMOCO.InstructionDEAD'>554 [None]testb     %cl, %cl
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>556 [jcc]jne       .L00000288
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000288' section='.text', address=648>]

<Symbol '.L0000022E' section='.text', address=558>
    ENDER False -- NXT .L0000023D
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L0000022A
'X64_AMOCO.InstructionDEAD'>558 [None]leaq      .LC3(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>565 [None]movq      %rdx, %rsi
	 R['rdx', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>568 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L0000023D' section='.text', address=573>
    ENDER False -- NXT .L00000241
    CFG .L00000241
    GRAPH_NXT .L00000241
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>573 [None]movzbl    1(%rbx), %ecx
	 R['MEM', 'rbx', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:()

<Symbol '.L00000241' section='.text', address=577>
    ENDER True -- NXT None
    CFG .L000001E3
    GRAPH_NXT .L000001E3
    GRAPH_PRV .L00000210
    GRAPH_PRV .L0000021F
    GRAPH_PRV .L0000023D
    GRAPH_PRV .L00000288
    GRAPH_PRV .L000002E0
    GRAPH_PRV .L000002F4
    GRAPH_PRV .L00000328
    GRAPH_PRV .L0000033A
    GRAPH_PRV .L0000034D
'X64_AMOCO.InstructionDEAD'>577 [None]addq      $2, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>581 [None]movb      %cl, (%r12)
	 R['r12', 'rcx', 'rip'] W['MEM', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>585 [None]movl      $2, %eax
	 R['rip'] W['rax', 'rip']
	 D['r12', 'rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>590 [None]movq      %rbx, (%rbp)
	 R['rbp', 'rbx', 'rip'] W['MEM', 'rip']
	 D['r12']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>594 [jmp]jmp       .L000001E3
	 R['rip'] W['rip']
	 D['r12', 'rbp', 'rbx']
	 STACK:{}:()
	 dst=[<Symbol '.L000001E3' section='.text', address=483>]

<Symbol '.L00000254' section='.text', size=4, address=596>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>596 [None].p2align 4,,10
'plasmasm.constants.P2Align'>596 [None].p2align 3

<Symbol '.L00000258' section='.text', address=600>
    ENDER False -- NXT .L00000260
    CFG .L000001D2
    CFG .L00000260
    GRAPH_NXT .L000001D2
    GRAPH_NXT .L00000260
    GRAPH_PRV .L00000198
'X64_AMOCO.InstructionDEAD'>600 [None]testb     %al, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>602 [jcc]jne       .L000001D2
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000001D2' section='.text', address=466>]

<Symbol '.L00000260' section='.text', address=608>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV .L00000190
    GRAPH_PRV .L00000258
'X64_AMOCO.InstructionDEAD'>608 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'rax', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>609 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r12', 'rax', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>611 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>612 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>614 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[None]

<Symbol '.L00000267' section='.text', size=9, address=615>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>615 [None].p2align 4

<Symbol '.L00000270' section='.text', address=624>
    ENDER True -- NXT None
    CFG .L000001E3
    GRAPH_NXT .L000001E3
    GRAPH_PRV .L000001C8
'X64_AMOCO.InstructionDEAD'>624 [None]addq      $2, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['r12', 'rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>628 [None]movb      $115, (%rsi)
	 R['rip', 'rsi'] W['MEM', 'rip']
	 D['r12', 'rax', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>631 [None]movl      $4, %eax
	 R['rip'] W['rax', 'rip']
	 D['r12', 'rax', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>636 [None]movq      %rbx, (%rdi)
	 R['rbx', 'rdi', 'rip'] W['MEM', 'rip']
	 D['r12', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>639 [jmp]jmp       .L000001E3
	 R['rip'] W['rip']
	 D['r12', 'rbp', 'rbx']
	 STACK:{}:()
	 dst=[<Symbol '.L000001E3' section='.text', address=483>]

<Symbol '.L00000284' section='.text', size=4, address=644>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>644 [None].p2align 4,,10
'plasmasm.constants.P2Align'>644 [None].p2align 3

<Symbol '.L00000288' section='.text', address=648>
    ENDER False -- NXT .L0000028D
    CFG .L00000241
    CFG .L0000028D
    GRAPH_NXT .L00000241
    GRAPH_NXT .L0000028D
    GRAPH_PRV .L0000022A
'X64_AMOCO.InstructionDEAD'>648 [None]cmpb      $38, %cl
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>651 [jcc]je        .L00000241
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000241' section='.text', address=577>]

<Symbol '.L0000028D' section='.text', address=653>
    ENDER True -- NXT None
    CFG .L0000029E
    GRAPH_NXT .L0000029E
    GRAPH_PRV .L00000288
    GRAPH_PRV .L000002EB
    GRAPH_PRV .L00000331
    GRAPH_PRV .L00000340
'X64_AMOCO.InstructionDEAD'>653 [None]xorl      %ecx, %ecx
	 R['rflags', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rcx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>655 [jmp]jmp       .L0000029E
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{}:()
	 dst=[<Symbol '.L0000029E' section='.text', address=670>]

<Symbol '.L00000291' section='.text', size=7, address=657>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>657 [None].p2align 4,,10
'plasmasm.constants.P2Align'>657 [None].p2align 3

<Symbol '.L00000298' section='.text', address=664>
    ENDER False -- NXT .L0000029E
    CFG .L000002C9
    CFG .L0000029E
    GRAPH_NXT .L0000029E
    GRAPH_NXT .L000002C9
    GRAPH_PRV .L0000029E
'X64_AMOCO.InstructionDEAD'>664 [None]cmpq      $1, %rcx
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>668 [jcc]jg        .L000002C9
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000002C9' section='.text', address=713>]

<Symbol '.L0000029E' section='.text', address=670>
    ENDER False -- NXT .L000002B4
    CFG .L00000298
    CFG .L000002B4
    GRAPH_NXT .L00000298
    GRAPH_NXT .L000002B4
    GRAPH_PRV .L0000028D
    GRAPH_PRV .L00000298
'X64_AMOCO.InstructionDEAD'>670 [None]cmpb      $44, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>672 [None]sete      %al
	 R['rax', 'rflags', 'rip'] W['rax', 'rip']
	 D[]
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>675 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>679 [None]movzbl    %al, %eax
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>682 [None]addq      %rax, %rcx
	 R['rax', 'rcx', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>685 [None]movzbl    (%rbx), %eax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>688 [None]testb     %al, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>690 [jcc]jne       .L00000298
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000298' section='.text', address=664>]

<Symbol '.L000002B4' section='.text', address=692>
    ENDER False -- NXT .L000002BA
    CFG .L000002C9
    CFG .L000002BA
    GRAPH_NXT .L000002BA
    GRAPH_NXT .L000002C9
    GRAPH_PRV .L0000029E
'X64_AMOCO.InstructionDEAD'>692 [None]cmpq      $1, %rcx
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>696 [jcc]jg        .L000002C9
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000002C9' section='.text', address=713>]

<Symbol '.L000002BA' section='.text', address=698>
    ENDER False -- NXT .L000002C9
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L000002B4
'X64_AMOCO.InstructionDEAD'>698 [None]leaq      .LC3(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>705 [None]movq      %rdx, %rsi
	 R['rdx', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>708 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L000002C9' section='.text', address=713>
    ENDER True -- NXT None
    CFG .L000001E3
    GRAPH_NXT .L000001E3
    GRAPH_PRV .L00000298
    GRAPH_PRV .L000002B4
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>713 [None]movzbl    -2(%rbx), %eax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>717 [None]movb      %al, (%r12)
	 R['r12', 'rax', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>721 [None]movq      %rbx, (%rbp)
	 R['rbp', 'rbx', 'rip'] W['MEM', 'rip']
	 D['r12', 'rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>725 [None]movl      $3, %eax
	 R['rip'] W['rax', 'rip']
	 D['r12', 'rax', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>730 [jmp]jmp       .L000001E3
	 R['rip'] W['rip']
	 D['r12', 'rbp', 'rbx']
	 STACK:{}:()
	 dst=[<Symbol '.L000001E3' section='.text', address=483>]

<Symbol '.L000002DF' section='.text', size=1, address=735>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>735 [None].p2align 4,,10
'plasmasm.constants.P2Align'>735 [None].p2align 3

<Symbol '.L000002E0' section='.text', address=736>
    ENDER False -- NXT .L000002E9
    CFG .L00000241
    CFG .L000002E9
    GRAPH_NXT .L00000241
    GRAPH_NXT .L000002E9
    GRAPH_PRV .L00000219
'X64_AMOCO.InstructionDEAD'>736 [None]cmpb      $110, %cl
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>739 [jcc]je        .L00000241
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000241' section='.text', address=577>]

<Symbol '.L000002E9' section='.text', address=745>
    ENDER False -- NXT .L000002EB
    CFG .L00000340
    CFG .L000002EB
    GRAPH_NXT .L000002EB
    GRAPH_NXT .L00000340
    GRAPH_PRV .L000002E0
'X64_AMOCO.InstructionDEAD'>745 [jcc]jg        .L00000340
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000340' section='.text', address=832>]

<Symbol '.L000002EB' section='.text', address=747>
    ENDER False -- NXT .L000002F4
    CFG .L0000028D
    CFG .L000002F4
    GRAPH_NXT .L0000028D
    GRAPH_NXT .L000002F4
    GRAPH_PRV .L000002E9
'X64_AMOCO.InstructionDEAD'>747 [None]leal      -86(%rcx), %esi
	 R['MEM', 'rcx', 'rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>750 [None]cmpb      $1, %sil
	 R['rip', 'rsi'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>754 [jcc]ja        .L0000028D
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L0000028D' section='.text', address=653>]

<Symbol '.L000002F4' section='.text', address=756>
    ENDER True -- NXT None
    CFG .L00000241
    GRAPH_NXT .L00000241
    GRAPH_PRV .L000002EB
'X64_AMOCO.InstructionDEAD'>756 [jmp]jmp       .L00000241
	 R['rip'] W['rip']
	 D['rax', 'rflags']
	 STACK:{}:()
	 dst=[<Symbol '.L00000241' section='.text', address=577>]

<Symbol '.L000002F9' section='.text', size=7, address=761>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>761 [None].p2align 4

<Symbol '.L00000300' section='.text', address=768>
    ENDER False -- NXT .L00000306
    CFG .L00000315
    CFG .L00000306
    GRAPH_NXT .L00000306
    GRAPH_NXT .L00000315
    GRAPH_PRV .L0000017C
'X64_AMOCO.InstructionDEAD'>768 [None]cmpb      $71, 2(%rbx)
	 R['MEM', 'rbx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>772 [jcc]je        .L00000315
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000315' section='.text', address=789>]

<Symbol '.L00000306' section='.text', address=774>
    ENDER False -- NXT .L00000315
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L00000300
'X64_AMOCO.InstructionDEAD'>774 [None]leaq      .LC4(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>781 [None]movq      %rdx, %rsi
	 R['rdx', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>784 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00000315' section='.text', address=789>
    ENDER True -- NXT None
    CFG .L000001D6
    GRAPH_NXT .L000001D6
    GRAPH_PRV .L00000300
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>789 [None]movb      $61, (%r12)
	 R['r12', 'rip'] W['MEM', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>794 [None]addq      $2, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['r12', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>798 [jmp]jmp       .L000001D6
	 R['rip'] W['rip']
	 D['r12', 'rax', 'rflags']
	 STACK:{}:()
	 dst=[<Symbol '.L000001D6' section='.text', address=470>]

<Symbol '.L00000323' section='.text', size=5, address=803>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>803 [None].p2align 4,,10
'plasmasm.constants.P2Align'>803 [None].p2align 3

<Symbol '.L00000328' section='.text', address=808>
    ENDER False -- NXT .L00000331
    CFG .L00000241
    CFG .L00000331
    GRAPH_NXT .L00000241
    GRAPH_NXT .L00000331
    GRAPH_PRV .L00000224
'X64_AMOCO.InstructionDEAD'>808 [None]cmpb      $71, %cl
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>811 [jcc]je        .L00000241
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000241' section='.text', address=577>]

<Symbol '.L00000331' section='.text', address=817>
    ENDER False -- NXT .L0000033A
    CFG .L0000028D
    CFG .L0000033A
    GRAPH_NXT .L0000028D
    GRAPH_NXT .L0000033A
    GRAPH_PRV .L00000328
'X64_AMOCO.InstructionDEAD'>817 [None]cmpb      $73, %cl
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>820 [jcc]jne       .L0000028D
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L0000028D' section='.text', address=653>]

<Symbol '.L0000033A' section='.text', address=826>
    ENDER True -- NXT None
    CFG .L00000241
    GRAPH_NXT .L00000241
    GRAPH_PRV .L00000331
'X64_AMOCO.InstructionDEAD'>826 [jmp]jmp       .L00000241
	 R['rip'] W['rip']
	 D['rax', 'rflags']
	 STACK:{}:()
	 dst=[<Symbol '.L00000241' section='.text', address=577>]

<Symbol '.L0000033F' section='.text', size=1, address=831>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>831 [None].p2align 4,,10
'plasmasm.constants.P2Align'>831 [None].p2align 3

<Symbol '.L00000340' section='.text', address=832>
    ENDER False -- NXT .L0000034D
    CFG .L0000028D
    CFG .L0000034D
    GRAPH_NXT .L0000028D
    GRAPH_NXT .L0000034D
    GRAPH_PRV .L000002E9
'X64_AMOCO.InstructionDEAD'>832 [None]leal      -114(%rcx), %esi
	 R['MEM', 'rcx', 'rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>835 [None]cmpb      $1, %sil
	 R['rip', 'rsi'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>839 [jcc]ja        .L0000028D
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L0000028D' section='.text', address=653>]

<Symbol '.L0000034D' section='.text', address=845>
    ENDER True -- NXT None
    CFG .L00000241
    GRAPH_NXT .L00000241
    GRAPH_PRV .L00000340
'X64_AMOCO.InstructionDEAD'>845 [jmp]jmp       .L00000241
	 R['rip'] W['rip']
	 D['rax', 'rflags']
	 STACK:{}:()
	 dst=[<Symbol '.L00000241' section='.text', address=577>]

<Symbol '.L00000352' section='.text', type='padding', address=850>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>850 [None].p2align 4

<Symbol 'compilecast_loc' section='.text', type='function', bind='globl', size=207, address=864>
    ENDER False -- NXT .L00000364
    CFG .L00000382
    CFG .L00000364
    GRAPH_NXT .L00000364
    GRAPH_NXT .L00000382
'X64_AMOCO.InstructionDEAD'>864 [None]cmpl      %esi, %edi
	 R['rdi', 'rip', 'rsi'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>866 [jcc]je        .L00000382
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000382' section='.text', address=898>]

<Symbol '.L00000364' section='.text', address=868>
    ENDER False -- NXT .L00000369
    CFG .L000003C8
    CFG .L00000369
    GRAPH_NXT .L00000369
    GRAPH_NXT .L000003C8
    GRAPH_PRV compilecast_loc
'X64_AMOCO.InstructionDEAD'>868 [None]cmpl      $1, %esi
	 R['rip', 'rsi'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>871 [jcc]je        .L000003C8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000003C8' section='.text', address=968>]

<Symbol '.L00000369' section='.text', address=873>
    ENDER False -- NXT .L0000036B
    CFG .L00000388
    CFG .L0000036B
    GRAPH_NXT .L0000036B
    GRAPH_NXT .L00000388
    GRAPH_PRV .L00000364
'X64_AMOCO.InstructionDEAD'>873 [jcc]jle       .L00000388
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000388' section='.text', address=904>]

<Symbol '.L0000036B' section='.text', address=875>
    ENDER False -- NXT .L00000370
    CFG .L000003B8
    CFG .L00000370
    GRAPH_NXT .L00000370
    GRAPH_NXT .L000003B8
    GRAPH_PRV .L00000369
'X64_AMOCO.InstructionDEAD'>875 [None]cmpl      $3, %esi
	 R['rip', 'rsi'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>878 [jcc]je        .L000003B8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000003B8' section='.text', address=952>]

<Symbol '.L00000370' section='.text', address=880>
    ENDER False -- NXT .L00000375
    CFG .L000003A0
    CFG .L00000375
    GRAPH_NXT .L00000375
    GRAPH_NXT .L000003A0
    GRAPH_PRV .L0000036B
'X64_AMOCO.InstructionDEAD'>880 [None]cmpl      $4, %esi
	 R['rip', 'rsi'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>883 [jcc]jne       .L000003A0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000003A0' section='.text', address=928>]

<Symbol '.L00000375' section='.text', address=885>
    ENDER False -- NXT .L0000037E
    CFG .L00000410
    CFG .L0000037E
    GRAPH_NXT .L0000037E
    GRAPH_NXT .L00000410
    GRAPH_PRV .L00000370
'X64_AMOCO.InstructionDEAD'>885 [None]cmpl      $1, %edi
	 R['rdi', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>888 [jcc]je        .L00000410
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000410' section='.text', address=1040>]

<Symbol '.L0000037E' section='.text', address=894>
    ENDER False -- NXT .L00000382
    CFG .L000003F0
    CFG .L00000382
    GRAPH_NXT .L00000382
    GRAPH_NXT .L000003F0
    GRAPH_PRV .L00000375
'X64_AMOCO.InstructionDEAD'>894 [None]testl     %edi, %edi
	 R['rdi', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>896 [jcc]je        .L000003F0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000003F0' section='.text', address=1008>]

<Symbol '.L00000382' section='.text', address=898>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV .L0000037E
    GRAPH_PRV compilecast_loc
'X64_AMOCO.InstructionDEAD'>898 [ret]rep; ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[None]

<Symbol '.L00000384' section='.text', size=4, address=900>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>900 [None].p2align 4,,10
'plasmasm.constants.P2Align'>900 [None].p2align 3

<Symbol '.L00000388' section='.text', address=904>
    ENDER False -- NXT .L0000038C
    CFG .L000003A0
    CFG .L0000038C
    GRAPH_NXT .L0000038C
    GRAPH_NXT .L000003A0
    GRAPH_PRV .L00000369
'X64_AMOCO.InstructionDEAD'>904 [None]testl     %esi, %esi
	 R['rip', 'rsi'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>906 [jcc]jne       .L000003A0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000003A0' section='.text', address=928>]

<Symbol '.L0000038C' section='.text', address=908>
    ENDER True -- NXT None
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00000388
'X64_AMOCO.InstructionDEAD'>908 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>913 [None]movl      $71, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>918 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>920 [jmp]jmp       op_push_loc@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L0000039D' section='.text', size=3, address=925>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>925 [None].p2align 4,,10
'plasmasm.constants.P2Align'>925 [None].p2align 3

<Symbol '.L000003A0' section='.text', address=928>
    ENDER True -- NXT None
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00000370
    GRAPH_PRV .L00000388
'X64_AMOCO.InstructionDEAD'>928 [None]movl      %esi, %edx
	 R['rip', 'rsi'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>930 [None]leaq      .LC7(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>937 [None]movl      $2, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>942 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>944 [jmp]jmp       pari_err@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L000003B5' section='.text', size=3, address=949>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>949 [None].p2align 4,,10
'plasmasm.constants.P2Align'>949 [None].p2align 3

<Symbol '.L000003B8' section='.text', address=952>
    ENDER False -- NXT .L000003BD
    CFG .L00000400
    CFG .L000003BD
    GRAPH_NXT .L000003BD
    GRAPH_NXT .L00000400
    GRAPH_PRV .L0000036B
'X64_AMOCO.InstructionDEAD'>952 [None]cmpl      $4, %edi
	 R['rdi', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>955 [jcc]je        .L00000400
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000400' section='.text', address=1024>]

<Symbol '.L000003BD' section='.text', address=957>
    ENDER True -- NXT None
    CFG compile_varerr@PLT
    GRAPH_NXT compile_varerr@PLT
    GRAPH_PRV .L000003B8
'X64_AMOCO.InstructionDEAD'>957 [None]movq      %rdx, %rdi
	 R['rdx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>960 [jmp]jmp       compile_varerr@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'compile_varerr@PLT' >]

<Symbol '.L000003C5' section='.text', size=3, address=965>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>965 [None].p2align 4,,10
'plasmasm.constants.P2Align'>965 [None].p2align 3

<Symbol '.L000003C8' section='.text', address=968>
    ENDER False -- NXT .L000003CD
    CFG .L00000420
    CFG .L000003CD
    GRAPH_NXT .L000003CD
    GRAPH_NXT .L00000420
    GRAPH_PRV .L00000364
'X64_AMOCO.InstructionDEAD'>968 [None]cmpl      $4, %edi
	 R['rdi', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>971 [jcc]je        .L00000420
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00000420' section='.text', address=1056>]

<Symbol '.L000003CD' section='.text', address=973>
    ENDER False -- NXT .L000003D1
    CFG .L000003E0
    CFG .L000003D1
    GRAPH_NXT .L000003D1
    GRAPH_NXT .L000003E0
    GRAPH_PRV .L000003C8
'X64_AMOCO.InstructionDEAD'>973 [None]testl     %edi, %edi
	 R['rdi', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>975 [jcc]jne       .L000003E0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000003E0' section='.text', address=992>]

<Symbol '.L000003D1' section='.text', address=977>
    ENDER True -- NXT None
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L000003CD
'X64_AMOCO.InstructionDEAD'>977 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>979 [None]movb      $65, %dil
	 R['rdi', 'rip'] W['rdi', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>982 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>984 [jmp]jmp       op_push_loc@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L000003DD' section='.text', size=3, address=989>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>989 [None].p2align 4,,10
'plasmasm.constants.P2Align'>989 [None].p2align 3

<Symbol '.L000003E0' section='.text', address=992>
    ENDER True -- NXT None
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L000003CD
'X64_AMOCO.InstructionDEAD'>992 [None]leaq      .LC6(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>999 [None]movq      %rdx, %rsi
	 R['rdx', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1002 [jmp]jmp       compile_err@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L000003EF' section='.text', size=1, address=1007>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>1007 [None].p2align 4,,10
'plasmasm.constants.P2Align'>1007 [None].p2align 3

<Symbol '.L000003F0' section='.text', address=1008>
    ENDER True -- NXT None
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L0000037E
'X64_AMOCO.InstructionDEAD'>1008 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1010 [None]movb      $66, %dil
	 R['rdi', 'rip'] W['rdi', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1013 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1015 [jmp]jmp       op_push_loc@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L000003FC' section='.text', size=4, address=1020>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>1020 [None].p2align 4,,10
'plasmasm.constants.P2Align'>1020 [None].p2align 3

<Symbol '.L00000400' section='.text', address=1024>
    ENDER True -- NXT None
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L000003B8
'X64_AMOCO.InstructionDEAD'>1024 [None]movl      $-1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1029 [None]movb      $75, %dil
	 R['rdi', 'rip'] W['rdi', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1032 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1034 [jmp]jmp       op_push_loc@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L0000040F' section='.text', size=1, address=1039>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>1039 [None].p2align 4,,10
'plasmasm.constants.P2Align'>1039 [None].p2align 3

<Symbol '.L00000410' section='.text', address=1040>
    ENDER True -- NXT None
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00000375
'X64_AMOCO.InstructionDEAD'>1040 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1042 [None]movb      $72, %dil
	 R['rdi', 'rip'] W['rdi', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1045 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1047 [jmp]jmp       op_push_loc@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L0000041C' section='.text', size=4, address=1052>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>1052 [None].p2align 4,,10
'plasmasm.constants.P2Align'>1052 [None].p2align 3

<Symbol '.L00000420' section='.text', address=1056>
    ENDER True -- NXT None
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L000003C8
'X64_AMOCO.InstructionDEAD'>1056 [None]movl      $-1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1061 [None]movb      $73, %dil
	 R['rdi', 'rip'] W['rdi', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1064 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1066 [jmp]jmp       op_push_loc@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L0000042F' section='.text', type='padding', address=1071>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>1071 [None].p2align 4,,10
'plasmasm.constants.P2Align'>1071 [None].p2align 3

<Symbol 'compilefunc' section='.text', type='function', bind='globl', size=6618, address=1072>
    ENDER False -- NXT .L0000049B
    CFG listtogen@PLT
    GRAPH_NXT listtogen@PLT
'X64_AMOCO.InstructionDEAD'>1072 [None]pushq     %r15
	 R['r15', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1074 [None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1076 [None]leaq      (%rsi,%rsi,2), %rax
	 R['MEM', 'rip', 'rsi'] W['rax', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1080 [None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1082 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1084 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'r13']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1085 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'r13', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1086 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r12', 'r13', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1090 [None]movq      $72057594037927935, %rbp
	 R['rip'] W['rbp', 'rip']
	 D['r12', 'r13', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1100 [None]subq      $456, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>1107 [None]movq      %rcx, 88(%rsp)
	 R['rcx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r12', 'r13', 'rflags']
	 STACK:{}:(88,)
'X64_AMOCO.InstructionDEAD'>1112 [None]movq      avma@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r12', 'r13', 'rcx', 'rflags']
	 STACK:{}:(88,)
'X64_AMOCO.InstructionDEAD'>1119 [None]movq      %rax, 16(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r12', 'r13', 'rflags']
	 STACK:{}:(16, 88)
'X64_AMOCO.InstructionDEAD'>1124 [None]movq      %rdi, 56(%rsp)
	 R['rdi', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r12', 'r13', 'rflags']
	 STACK:{}:(16, 56, 88)
'X64_AMOCO.InstructionDEAD'>1129 [None]movq      %rsi, 40(%rsp)
	 R['rip', 'rsi', 'rsp'] W['MEM', 'rip']
	 D['r12', 'r13', 'rdi', 'rflags']
	 STACK:{}:(16, 40, 56, 88)
'X64_AMOCO.InstructionDEAD'>1134 [None]movl      $11, %esi
	 R['rip'] W['rip', 'rsi']
	 D['r12', 'r13', 'rdi', 'rflags', 'rsi']
	 STACK:{}:(16, 40, 56, 88)
'X64_AMOCO.InstructionDEAD'>1139 [None]movl      %edx, 104(%rsp)
	 R['rdx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r12', 'r13', 'rdi', 'rflags']
	 STACK:{}:(16, 40, 56, 88, 104)
'X64_AMOCO.InstructionDEAD'>1143 [None]movq      (%rcx), %rcx
	 R['MEM', 'rcx', 'rip'] W['rcx', 'rip']
	 D['r12', 'r13', 'rdi', 'rflags']
	 STACK:{}:(16, 40, 56, 88, 104)
'X64_AMOCO.InstructionDEAD'>1146 [None]movq      %rcx, 64(%rsp)
	 R['rcx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r12', 'r13', 'rdi', 'rflags']
	 STACK:{}:(16, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1151 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r12', 'r13', 'rcx', 'rdi', 'rflags']
	 STACK:{}:(16, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1158 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['r12', 'r13', 'rdi', 'rflags']
	 STACK:{}:(16, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1161 [None]movq      16(%rax), %r13
	 R['MEM', 'rax', 'rip'] W['r13', 'rip']
	 D['r12', 'r13', 'rdi']
	 STACK:{}:(16, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1165 [None]movq      8(%rax), %r12
	 R['MEM', 'rax', 'rip'] W['r12', 'rip']
	 D['r12', 'rdi']
	 STACK:{}:(16, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1169 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(16, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1171 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(16, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1174 [sub]call      listtogen@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(16, 40, 56, 64, 88, 104)
	 dst=[<Symbol 'listtogen@PLT' >]

<Symbol '.L0000049B' section='.text', address=1179>
    ENDER False -- NXT .L000004B2
    CFG first_safe_arg@PLT
    GRAPH_NXT first_safe_arg@PLT
    GRAPH_PRV listtogen@PLT
'X64_AMOCO.InstructionDEAD'>1179 [None]movslq    %eax, %rbx
	 R['rax', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rdi', 'rsi']
	 STACK:{}:(16, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1182 [None]movl      $3, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(16, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1187 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(16, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1189 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(16, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1192 [None]movq      %rbx, 24(%rsp)
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(16, 24, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1197 [sub]call      first_safe_arg@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(16, 24, 40, 56, 64, 88, 104)
	 dst=[<Symbol 'first_safe_arg@PLT' >]

<Symbol '.L000004B2' section='.text', address=1202>
    ENDER False -- NXT .L000004C8
    CFG first_safe_arg@PLT
    GRAPH_NXT first_safe_arg@PLT
    GRAPH_PRV first_safe_arg@PLT
'X64_AMOCO.InstructionDEAD'>1202 [None]cltq      
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rdi', 'rsi']
	 STACK:{}:(16, 24, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1204 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(16, 24, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1209 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(16, 24, 40, 56, 64, 88, 104)
'X64_AMOCO.InstructionDEAD'>1212 [None]movq      %rax, 72(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(16, 24, 40, 56, 64, 72, 88, 104)
'X64_AMOCO.InstructionDEAD'>1217 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(16, 24, 40, 56, 64, 72, 88, 104)
'X64_AMOCO.InstructionDEAD'>1219 [sub]call      first_safe_arg@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(16, 24, 40, 56, 64, 72, 88, 104)
	 dst=[<Symbol 'first_safe_arg@PLT' >]

<Symbol '.L000004C8' section='.text', address=1224>
    ENDER False -- NXT .L000004E5
    CFG .L00000780
    CFG .L000004E5
    GRAPH_NXT .L000004E5
    GRAPH_NXT .L00000780
    GRAPH_PRV first_safe_arg@PLT
'X64_AMOCO.InstructionDEAD'>1224 [None]andq      (%rbx), %rbp
	 R['MEM', 'rbp', 'rbx', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(16, 24, 40, 56, 64, 72, 88, 104)
'X64_AMOCO.InstructionDEAD'>1227 [None]cltq      
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{}:(16, 24, 40, 56, 64, 72, 88, 104)
'X64_AMOCO.InstructionDEAD'>1229 [None]cmpq      $39, %r12
	 R['r12', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(16, 24, 40, 56, 64, 72, 88, 104)
'X64_AMOCO.InstructionDEAD'>1233 [None]movq      %rax, 80(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1238 [None]leaq      -1(%rbp), %rax
	 R['MEM', 'rbp', 'rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{}:(16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1242 [None]movq      %rax, 8(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1247 [jcc]jle       .L00000780
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000780' section='.text', address=1920>]

<Symbol '.L000004E5' section='.text', address=1253>
    ENDER False -- NXT .L0000050A
    CFG .L000007C3
    CFG .L0000050A
    GRAPH_NXT .L0000050A
    GRAPH_NXT .L000007C3
    GRAPH_PRV .L000004C8
'X64_AMOCO.InstructionDEAD'>1253 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r14', 'rax', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1260 [None]leaq      (%r12,%r12,2), %rdx
	 R['MEM', 'r12', 'rip'] W['rdx', 'rip']
	 D['r14', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1264 [None]salq      $4, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['r14']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1268 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1271 [None]movq      24(%rax,%rdx), %r14
	 R['MEM', 'rax', 'rdx', 'rip'] W['r14', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1276 [None]addq      16(%rsp), %rax
	 R['MEM', 'rax', 'rip', 'rsp'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1281 [None]cmpl      $4, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1284 [jcc]je        .L000007C3
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000007C3' section='.text', address=1987>]

<Symbol '.L0000050A' section='.text', address=1290>
    ENDER False -- NXT .L0000051B
    CFG is_func_named@PLT
    GRAPH_NXT is_func_named@PLT
    GRAPH_PRV .L000004E5
    GRAPH_PRV .L000007BA
'X64_AMOCO.InstructionDEAD'>1290 [None]leaq      .LC9(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1297 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1299 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1302 [sub]call      is_func_named@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'is_func_named@PLT' >]

<Symbol '.L0000051B' section='.text', address=1307>
    ENDER False -- NXT .L00000523
    CFG .L000006A0
    CFG .L00000523
    GRAPH_NXT .L00000523
    GRAPH_NXT .L000006A0
    GRAPH_PRV is_func_named@PLT
'X64_AMOCO.InstructionDEAD'>1307 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1309 [jcc]je        .L000006A0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000006A0' section='.text', address=1696>]

<Symbol '.L00000523' section='.text', address=1315>
    ENDER False -- NXT .L0000052F
    CFG .L000006A0
    CFG .L0000052F
    GRAPH_NXT .L0000052F
    GRAPH_NXT .L000006A0
    GRAPH_PRV .L0000051B
'X64_AMOCO.InstructionDEAD'>1315 [None]movl      104(%rsp), %eax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1319 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1321 [jcc]jne       .L000006A0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000006A0' section='.text', address=1696>]

<Symbol '.L0000052F' section='.text', address=1327>
    ENDER False -- NXT .L0000053B
    CFG is_entry@PLT
    GRAPH_NXT is_entry@PLT
    GRAPH_PRV .L00000523
'X64_AMOCO.InstructionDEAD'>1327 [None]leaq      .LC10(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1334 [sub]call      is_entry@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'is_entry@PLT' >]

<Symbol '.L0000053B' section='.text', address=1339>
    ENDER False -- NXT .L00000540
    CFG .L00000540
    GRAPH_NXT .L00000540
    GRAPH_PRV is_entry@PLT
'X64_AMOCO.InstructionDEAD'>1339 [None]movq      %rax, 56(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)

<Symbol '.L00000540' section='.text', address=1344>
    ENDER False -- NXT .L0000055C
    CFG .L00001810
    CFG .L0000055C
    GRAPH_NXT .L0000055C
    GRAPH_NXT .L00001810
    GRAPH_PRV .L0000053B
    GRAPH_PRV .L000007ED
    GRAPH_PRV .L000017CE
    GRAPH_PRV .L00001802
    GRAPH_PRV .L000018A8
    GRAPH_PRV .L000018CC
    GRAPH_PRV .L0000192C
    GRAPH_PRV .L000019B3
    GRAPH_PRV .L000019E7
    GRAPH_PRV .L00001CA3
    GRAPH_PRV .L00001CF0
'X64_AMOCO.InstructionDEAD'>1344 [None]movq      56(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1349 [None]cmpq      $0, 16(%rcx)
	 R['MEM', 'rcx', 'rip'] W['rflags', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1354 [None]movq      32(%rcx), %rax
	 R['MEM', 'rcx', 'rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1358 [None]movq      %rax, 232(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 232)
'X64_AMOCO.InstructionDEAD'>1366 [jcc]je        .L00001810
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 232)
	 dst=[<Symbol '.L00001810' section='.text', address=6160>]

<Symbol '.L0000055C' section='.text', address=1372>
    ENDER False -- NXT .L0000059F
    CFG get_ret_type@PLT
    GRAPH_NXT get_ret_type@PLT
    GRAPH_PRV .L00000540
    GRAPH_PRV .L00001830
'X64_AMOCO.InstructionDEAD'>1372 [None]movq      s_opcode@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 232)
'X64_AMOCO.InstructionDEAD'>1379 [None]leaq      224(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rcx': [224]}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 232)
'X64_AMOCO.InstructionDEAD'>1387 [None]leaq      220(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 232)
'X64_AMOCO.InstructionDEAD'>1395 [None]movq      8(%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdi', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 232)
'X64_AMOCO.InstructionDEAD'>1399 [None]movq      %rax, 136(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 136, 232)
'X64_AMOCO.InstructionDEAD'>1407 [None]movq      56(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 136, 232)
'X64_AMOCO.InstructionDEAD'>1412 [None]movq      56(%rax), %rsi
	 R['MEM', 'rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 136, 232)
'X64_AMOCO.InstructionDEAD'>1416 [None]leaq      232(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%rax': [232], '%rcx': [224], '%rdx': [220]}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 136, 232)
'X64_AMOCO.InstructionDEAD'>1424 [None]movq      %rax, 32(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi']
	 STACK:{'%rax': [232], '%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 104, 136, 232)
'X64_AMOCO.InstructionDEAD'>1429 [None]movq      %rax, %rdi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rax': [232], '%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 104, 136, 232)
'X64_AMOCO.InstructionDEAD'>1432 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 104, 136, 232)
'X64_AMOCO.InstructionDEAD'>1434 [sub]call      get_ret_type@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 104, 136, 232)
	 dst=[<Symbol 'get_ret_type@PLT' >]

<Symbol '.L0000059F' section='.text', address=1439>
    ENDER False -- NXT .L000005B5
    CFG .L00000D60
    CFG .L000005B5
    GRAPH_NXT .L000005B5
    GRAPH_NXT .L00000D60
    GRAPH_PRV get_ret_type@PLT
'X64_AMOCO.InstructionDEAD'>1439 [None]movq      232(%rsp), %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip']
	 D['rbp', 'rflags']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 104, 136, 232)
'X64_AMOCO.InstructionDEAD'>1447 [None]movl      %eax, 108(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 104, 108, 136, 232)
'X64_AMOCO.InstructionDEAD'>1451 [None]cmpb      $0, (%rbp)
	 R['MEM', 'rbp', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 104, 108, 136, 232)
'X64_AMOCO.InstructionDEAD'>1455 [jcc]je        .L00000D60
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 104, 108, 136, 232)
	 dst=[<Symbol '.L00000D60' section='.text', address=3424>]

<Symbol '.L000005B5' section='.text', address=1461>
    ENDER False -- NXT .L00000620
    CFG .L00000620
    GRAPH_NXT .L00000620
    GRAPH_PRV .L0000059F
'X64_AMOCO.InstructionDEAD'>1461 [None]leaq      (%r12,%r12,2), %rax
	 R['MEM', 'r12', 'rip'] W['rax', 'rip']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 104, 108, 136, 232)
'X64_AMOCO.InstructionDEAD'>1465 [None]movq      $0, 144(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rbx', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 104, 108, 136, 144, 232)
'X64_AMOCO.InstructionDEAD'>1477 [None]movq      $0, 96(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rbx', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 96, 104, 108, 136, 144, 232)
'X64_AMOCO.InstructionDEAD'>1486 [None]movq      $0, 152(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rbx', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 96, 104, 108, 136, 144, 152, 232)
'X64_AMOCO.InstructionDEAD'>1498 [None]movl      $1, %ebx
	 R['rip'] W['rbx', 'rip']
	 D['rbx', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 96, 104, 108, 136, 144, 152, 232)
'X64_AMOCO.InstructionDEAD'>1503 [None]movq      %r14, 112(%rsp)
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 96, 104, 108, 112, 136, 144, 152, 232)
'X64_AMOCO.InstructionDEAD'>1508 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 96, 104, 108, 112, 136, 144, 152, 232)
'X64_AMOCO.InstructionDEAD'>1512 [None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 96, 104, 108, 112, 120, 136, 144, 152, 232)
'X64_AMOCO.InstructionDEAD'>1517 [None]leaq      219(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rax': [219], '%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 96, 104, 108, 112, 120, 136, 144, 152, 232)
'X64_AMOCO.InstructionDEAD'>1525 [None]movq      %rax, 48(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rax': [219], '%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 108, 112, 120, 136, 144, 152, 232)
'X64_AMOCO.InstructionDEAD'>1530 [None]movq      8(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 108, 112, 120, 136, 144, 152, 232)
'X64_AMOCO.InstructionDEAD'>1535 [None]addq      $1, %rax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 108, 112, 120, 136, 144, 152, 232)
'X64_AMOCO.InstructionDEAD'>1539 [None]movq      %rax, 128(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 108, 112, 120, 128, 136, 144, 152, 232)
'X64_AMOCO.InstructionDEAD'>1547 [None]leaq      240(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rax': [240], '%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 108, 112, 120, 128, 136, 144, 152, 232)
'X64_AMOCO.InstructionDEAD'>1555 [None]movq      %rax, 160(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rax': [240], '%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 108, 112, 120, 128, 136, 144, 152, 160, 232)
'plasmasm.constants.P2Align'>1563 [None].p2align 4,,10
'plasmasm.constants.P2Align'>1563 [None].p2align 3

<Symbol '.L00000620' section='.text', address=1568>
    ENDER False -- NXT .L00000643
    CFG parseproto@PLT
    GRAPH_NXT parseproto@PLT
    GRAPH_PRV .L000005B5
    GRAPH_PRV .L00000BF8
'X64_AMOCO.InstructionDEAD'>1568 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1575 [None]movq      16(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1580 [None]movq      48(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1585 [None]movq      32(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1590 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1593 [None]movq      24(%rax,%rcx), %rdx
	 R['MEM', 'rax', 'rcx', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1598 [sub]call      parseproto@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:False:()
	 dst=[<Symbol 'parseproto@PLT' >]

<Symbol '.L00000643' section='.text', address=1603>
    ENDER False -- NXT .L0000064B
    CFG .L00000CE0
    CFG .L0000064B
    GRAPH_NXT .L0000064B
    GRAPH_NXT .L00000CE0
    GRAPH_PRV parseproto@PLT
'X64_AMOCO.InstructionDEAD'>1603 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1605 [jcc]je        .L00000CE0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000CE0' section='.text', address=3296>]

<Symbol '.L0000064B' section='.text', address=1611>
    ENDER False -- NXT .L00000656
    CFG .L00000CC0
    CFG .L00000656
    GRAPH_NXT .L00000656
    GRAPH_NXT .L00000CC0
    GRAPH_PRV .L00000643
'X64_AMOCO.InstructionDEAD'>1611 [None]cmpq      8(%rsp), %rbx
	 R['MEM', 'rbx', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1616 [jcc]jg        .L00000CC0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000CC0' section='.text', address=3264>]

<Symbol '.L00000656' section='.text', address=1622>
    ENDER False -- NXT .L00000676
    CFG .L00000682
    CFG .L00000676
    GRAPH_NXT .L00000676
    GRAPH_NXT .L00000682
    GRAPH_PRV .L0000064B
'X64_AMOCO.InstructionDEAD'>1622 [None]movq      24(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rcx', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1627 [None]movq      (%rcx,%rbx,8), %rdx
	 R['MEM', 'rbx', 'rcx', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1631 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1638 [None]leaq      (%rdx,%rdx,2), %rdx
	 R['MEM', 'rdx', 'rip'] W['rdx', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1642 [None]salq      $4, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1646 [None]addq      (%rcx), %rdx
	 R['MEM', 'rcx', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1649 [None]cmpl      $10, (%rdx)
	 R['MEM', 'rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1652 [jcc]je        .L00000682
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000682' section='.text', address=1666>]

<Symbol '.L00000676' section='.text', address=1654>
    ENDER False -- NXT .L00000682
    CFG .L00000C2D
    CFG .L00000682
    GRAPH_NXT .L00000682
    GRAPH_NXT .L00000C2D
    GRAPH_PRV .L00000656
'X64_AMOCO.InstructionDEAD'>1654 [None]leal      -2(%rax), %edx
	 R['MEM', 'rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1657 [None]cmpl      $1, %edx
	 R['rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1660 [jcc]jbe       .L00000C2D
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000C2D' section='.text', address=3117>]

<Symbol '.L00000682' section='.text', address=1666>
    ENDER False -- NXT .L0000068B
    CFG .L00000BE0
    CFG .L0000068B
    GRAPH_NXT .L0000068B
    GRAPH_NXT .L00000BE0
    GRAPH_PRV .L00000656
    GRAPH_PRV .L00000676
'X64_AMOCO.InstructionDEAD'>1666 [None]cmpl      $5, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1669 [jcc]ja        .L00000BE0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000BE0' section='.text', address=3040>]

<Symbol '.L0000068B' section='.text', address=1675>
    ENDER True -- NXT None
    CFG .L00000960
    CFG .L000009A0
    CFG .L00000B40
    CFG .L00000B70
    CFG .L00000BE0
    CFG .L00000C2D
    GRAPH_NXT .L00000960
    GRAPH_NXT .L000009A0
    GRAPH_NXT .L00000B40
    GRAPH_NXT .L00000B70
    GRAPH_NXT .L00000BE0
    GRAPH_NXT .L00000C2D
    GRAPH_PRV .L00000682
'X64_AMOCO.InstructionDEAD'>1675 [None]leaq      .LC00000000(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rcx', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1682 [None]movl      %eax, %ecx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1684 [None]movslq    (%rdx,%rcx,4), %rcx
	 R['MEM', 'rcx', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1688 [None]addq      %rcx, %rdx
	 R['rcx', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>1691 [jmp]jmp       *%rdx
	 R['rdx', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000BE0' section='.text', address=3040>, <Symbol '.L00000C2D' section='.text', address=3117>, <Symbol '.L00000B70' section='.text', address=2928>, <Symbol '.L00000B40' section='.text', address=2880>, <Symbol '.L000009A0' section='.text', address=2464>, <Symbol '.L00000960' section='.text', address=2400>]

<Symbol '.L0000069D' section='.text', size=3, address=1693>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>1693 [None].p2align 4,,10
'plasmasm.constants.P2Align'>1693 [None].p2align 3

<Symbol '.L000006A0' section='.text', address=1696>
    ENDER False -- NXT .L000006B1
    CFG is_func_named@PLT
    GRAPH_NXT is_func_named@PLT
    GRAPH_PRV .L0000051B
    GRAPH_PRV .L00000523
'X64_AMOCO.InstructionDEAD'>1696 [None]leaq      .LC11(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1703 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1705 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1708 [sub]call      is_func_named@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'is_func_named@PLT' >]

<Symbol '.L000006B1' section='.text', address=1713>
    ENDER False -- NXT .L000006B9
    CFG .L00000830
    CFG .L000006B9
    GRAPH_NXT .L000006B9
    GRAPH_NXT .L00000830
    GRAPH_PRV is_func_named@PLT
'X64_AMOCO.InstructionDEAD'>1713 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1715 [jcc]je        .L00000830
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000830' section='.text', address=2096>]

<Symbol '.L000006B9' section='.text', address=1721>
    ENDER False -- NXT .L000006F5
    CFG .L00000F05
    CFG .L000006F5
    GRAPH_NXT .L000006F5
    GRAPH_NXT .L00000F05
    GRAPH_PRV .L000006B1
'X64_AMOCO.InstructionDEAD'>1721 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r12', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1728 [None]movq      $72057594037927935, %rdx
	 R['rip'] W['rdx', 'rip']
	 D['r12', 'rcx', 'rdx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1738 [None]andq      (%rbx), %rdx
	 R['MEM', 'rbx', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['r12', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1741 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['r12', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1744 [None]leaq      0(,%rdx,8), %rcx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['r12', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1752 [None]movq      %rax, %r12
	 R['rax', 'rip'] W['r12', 'rip']
	 D['r12', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1755 [None]subq      %rcx, %r12
	 R['r12', 'rcx', 'rip'] W['r12', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1758 [None]movq      bot@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1765 [None]subq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1768 [None]shrq      $3, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1772 [None]cmpq      %rax, %rdx
	 R['rax', 'rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1775 [jcc]ja        .L00000F05
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000F05' section='.text', address=3845>]

<Symbol '.L000006F5' section='.text', address=1781>
    ENDER False -- NXT .L0000071C
    CFG .L00000BA9
    CFG .L0000071C
    GRAPH_NXT .L0000071C
    GRAPH_NXT .L00000BA9
    GRAPH_PRV .L000006B9
    GRAPH_PRV .L00000F11
'X64_AMOCO.InstructionDEAD'>1781 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1788 [None]movq      %r12, (%rax)
	 R['r12', 'rax', 'rip'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1791 [None]movq      $-72057594037927937, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1801 [None]andq      (%rbx), %rax
	 R['MEM', 'rax', 'rbx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1804 [None]cmpq      $0, 8(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1810 [None]movq      %rax, (%r12)
	 R['r12', 'rax', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1814 [jcc]je        .L00000BA9
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000BA9' section='.text', address=2985>]

<Symbol '.L0000071C' section='.text', address=1820>
    ENDER False -- NXT .L00000722
    CFG .L0000196F
    CFG .L00000722
    GRAPH_NXT .L00000722
    GRAPH_NXT .L0000196F
    GRAPH_PRV .L000006F5
'X64_AMOCO.InstructionDEAD'>1820 [jcc]jle       .L0000196F
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L0000196F' section='.text', address=6511>]

<Symbol '.L00000722' section='.text', address=1826>
    ENDER True -- NXT None
    CFG .L00000758
    GRAPH_NXT .L00000758
    GRAPH_PRV .L0000071C
'X64_AMOCO.InstructionDEAD'>1826 [None]movl      $1, %r13d
	 R['rip'] W['r13', 'rip']
	 D['r13', 'rax', 'rcx', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1832 [jmp]jmp       .L00000758
	 R['rip'] W['rip']
	 D['rax', 'rcx', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000758' section='.text', address=1880>]

<Symbol '.L0000072A' section='.text', size=6, address=1834>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>1834 [None].p2align 4,,10
'plasmasm.constants.P2Align'>1834 [None].p2align 3

<Symbol '.L00000730' section='.text', address=1840>
    ENDER False -- NXT .L00000737
    CFG getvar@PLT
    GRAPH_NXT getvar@PLT
    GRAPH_PRV .L00000758
    GRAPH_PRV .L00000773
'X64_AMOCO.InstructionDEAD'>1840 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1842 [sub]call      getvar@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'getvar@PLT' >]

<Symbol '.L00000737' section='.text', address=1847>
    ENDER False -- NXT .L0000074F
    CFG var_push@PLT
    GRAPH_NXT var_push@PLT
    GRAPH_PRV getvar@PLT
'X64_AMOCO.InstructionDEAD'>1847 [None]cltq      
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1849 [None]xorl      %edi, %edi
	 R['rflags', 'rip'] W['rdi', 'rflags', 'rip']
	 D['rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1851 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1856 [None]movq      %rax, (%r12,%r13,8)
	 R['r12', 'r13', 'rax', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1860 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1862 [None]addq      $1, %r13
	 R['r13', 'rip'] W['r13', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1866 [sub]call      var_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'var_push@PLT' >]

<Symbol '.L0000074F' section='.text', address=1871>
    ENDER False -- NXT .L00000758
    CFG .L00001073
    CFG .L00000758
    GRAPH_NXT .L00000758
    GRAPH_NXT .L00001073
    GRAPH_PRV var_push@PLT
'X64_AMOCO.InstructionDEAD'>1871 [None]cmpq      %rbp, %r13
	 R['r13', 'rbp', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1874 [jcc]je        .L00001073
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00001073' section='.text', address=4211>]

<Symbol '.L00000758' section='.text', address=1880>
    ENDER False -- NXT .L00000773
    CFG .L00000730
    CFG .L00000773
    GRAPH_NXT .L00000730
    GRAPH_NXT .L00000773
    GRAPH_PRV .L00000722
    GRAPH_PRV .L0000074F
'X64_AMOCO.InstructionDEAD'>1880 [None]movq      (%rbx,%r13,8), %rdi
	 R['MEM', 'r13', 'rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rcx', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1884 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1891 [None]leaq      (%rdi,%rdi,2), %rax
	 R['MEM', 'rdi', 'rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1895 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1899 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1902 [None]cmpl      $4, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1905 [jcc]jne       .L00000730
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000730' section='.text', address=1840>]

<Symbol '.L00000773' section='.text', address=1907>
    ENDER True -- NXT None
    CFG .L00000730
    GRAPH_NXT .L00000730
    GRAPH_PRV .L00000758
'X64_AMOCO.InstructionDEAD'>1907 [None]movq      8(%rax), %rdi
	 R['MEM', 'rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1911 [jmp]jmp       .L00000730
	 R['rip'] W['rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000730' section='.text', address=1840>]

<Symbol '.L00000779' section='.text', size=7, address=1913>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>1913 [None].p2align 4

<Symbol '.L00000780' section='.text', address=1920>
    ENDER False -- NXT .L0000078C
    CFG .L00000EA8
    CFG .L0000078C
    GRAPH_NXT .L0000078C
    GRAPH_NXT .L00000EA8
    GRAPH_PRV .L000004C8
'X64_AMOCO.InstructionDEAD'>1920 [None]cmpq      $2, 8(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1926 [jcc]je        .L00000EA8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000EA8' section='.text', address=3752>]

<Symbol '.L0000078C' section='.text', address=1932>
    ENDER False -- NXT .L00000798
    CFG .L000011AD
    CFG .L00000798
    GRAPH_NXT .L00000798
    GRAPH_NXT .L000011AD
    GRAPH_PRV .L00000780
'X64_AMOCO.InstructionDEAD'>1932 [None]cmpq      $1, 8(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1938 [jcc]je        .L000011AD
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000011AD' section='.text', address=4525>]

<Symbol '.L00000798' section='.text', address=1944>
    ENDER True -- NXT None
    CFG .L000007B4
    GRAPH_NXT .L000007B4
    GRAPH_PRV .L0000078C
'X64_AMOCO.InstructionDEAD'>1944 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r14', 'rax', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1951 [None]movq      16(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r14', 'rax', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1956 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1959 [None]movq      24(%rax), %r14
	 R['MEM', 'rax', 'rip'] W['r14', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1963 [jmp]jmp       .L000007B4
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000007B4' section='.text', address=1972>]

<Symbol '.L000007AD' section='.text', size=3, address=1965>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>1965 [None].p2align 4,,10
'plasmasm.constants.P2Align'>1965 [None].p2align 3

<Symbol '.L000007B0' section='.text', address=1968>
    ENDER False -- NXT .L000007B4
    CFG .L000007B4
    GRAPH_NXT .L000007B4
    GRAPH_PRV .L000007B4
'X64_AMOCO.InstructionDEAD'>1968 [None]addq      $1, %r14
	 R['r14', 'rip'] W['r14', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)

<Symbol '.L000007B4' section='.text', address=1972>
    ENDER False -- NXT .L000007BA
    CFG .L000007B0
    CFG .L000007BA
    GRAPH_NXT .L000007B0
    GRAPH_NXT .L000007BA
    GRAPH_PRV .L00000798
    GRAPH_PRV .L000007B0
    GRAPH_PRV .L00000EA8
    GRAPH_PRV .L000011AD
'X64_AMOCO.InstructionDEAD'>1972 [None]cmpb      $41, (%r14)
	 R['MEM', 'r14', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1976 [jcc]je        .L000007B0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000007B0' section='.text', address=1968>]

<Symbol '.L000007BA' section='.text', address=1978>
    ENDER False -- NXT .L000007C3
    CFG .L0000050A
    CFG .L000007C3
    GRAPH_NXT .L0000050A
    GRAPH_NXT .L000007C3
    GRAPH_PRV .L000007B4
'X64_AMOCO.InstructionDEAD'>1978 [None]cmpl      $4, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1981 [jcc]jne       .L0000050A
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L0000050A' section='.text', address=1290>]

<Symbol '.L000007C3' section='.text', address=1987>
    ENDER False -- NXT .L000007ED
    CFG .L00000F16
    CFG .L000007ED
    GRAPH_NXT .L000007ED
    GRAPH_NXT .L00000F16
    GRAPH_PRV .L000004E5
    GRAPH_PRV .L000007BA
'X64_AMOCO.InstructionDEAD'>1987 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rbp', 'rbx', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1994 [None]movq      (%rax), %rbx
	 R['MEM', 'rax', 'rip'] W['rbx', 'rip']
	 D['rbp', 'rbx', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>1997 [None]movq      bot@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rbp', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2004 [None]movq      %rbx, %rcx
	 R['rbx', 'rip'] W['rcx', 'rip']
	 D['rbp', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2007 [None]subq      (%rax), %rcx
	 R['MEM', 'rax', 'rcx', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rbp', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2010 [None]leaq      -24(%rbx), %rbp
	 R['MEM', 'rbx', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2014 [None]movq      %rbp, 24(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2019 [None]cmpq      $23, %rcx
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2023 [jcc]jbe       .L00000F16
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000F16' section='.text', address=3862>]

<Symbol '.L000007ED' section='.text', address=2029>
    ENDER True -- NXT None
    CFG .L00000540
    GRAPH_NXT .L00000540
    GRAPH_PRV .L000007C3
    GRAPH_PRV .L00000F22
'X64_AMOCO.InstructionDEAD'>2029 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2036 [None]movq      %r12, -16(%rbx)
	 R['r12', 'rbx', 'rip'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2040 [None]movq      %r13, -8(%rbx)
	 R['r13', 'rbx', 'rip'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2044 [None]movq      $2, 8(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2053 [None]movq      $2, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2062 [None]movq      $2, 72(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2071 [None]movq      %rbp, (%rax)
	 R['rax', 'rbp', 'rip'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2074 [None]movq      $3170534137668829187, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2084 [None]movq      %rax, -24(%rbx)
	 R['rax', 'rbx', 'rip'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2088 [jmp]jmp       .L00000540
	 R['rip'] W['rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000540' section='.text', address=1344>]

<Symbol '.L0000082D' section='.text', size=3, address=2093>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>2093 [None].p2align 4,,10
'plasmasm.constants.P2Align'>2093 [None].p2align 3

<Symbol '.L00000830' section='.text', address=2096>
    ENDER False -- NXT .L00000841
    CFG is_func_named@PLT
    GRAPH_NXT is_func_named@PLT
    GRAPH_PRV .L000006B1
'X64_AMOCO.InstructionDEAD'>2096 [None]leaq      .LC12(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2103 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2105 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2108 [sub]call      is_func_named@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'is_func_named@PLT' >]

<Symbol '.L00000841' section='.text', address=2113>
    ENDER False -- NXT .L00000849
    CFG .L00000DDB
    CFG .L00000849
    GRAPH_NXT .L00000849
    GRAPH_NXT .L00000DDB
    GRAPH_PRV is_func_named@PLT
'X64_AMOCO.InstructionDEAD'>2113 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2115 [jcc]je        .L00000DDB
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000DDB' section='.text', address=3547>]

<Symbol '.L00000849' section='.text', address=2121>
    ENDER False -- NXT .L00000886
    CFG .L00000892
    CFG .L00000886
    GRAPH_NXT .L00000886
    GRAPH_NXT .L00000892
    GRAPH_PRV .L00000841
'X64_AMOCO.InstructionDEAD'>2121 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2128 [None]movq      $72057594037927935, %rdx
	 R['rip'] W['rdx', 'rip']
	 D['rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2138 [None]andq      (%rbx), %rdx
	 R['MEM', 'rbx', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rcx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2141 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rcx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2144 [None]leaq      0(,%rdx,8), %rcx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2152 [None]movq      %rax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2155 [None]subq      %rcx, %rsi
	 R['rcx', 'rip', 'rsi'] W['rflags', 'rip', 'rsi']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2158 [None]movq      bot@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2165 [None]movq      %rsi, 16(%rsp)
	 R['rip', 'rsi', 'rsp'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2170 [None]subq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2173 [None]shrq      $3, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2177 [None]cmpq      %rax, %rdx
	 R['rax', 'rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2180 [jcc]jbe       .L00000892
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000892' section='.text', address=2194>]

<Symbol '.L00000886' section='.text', address=2182>
    ENDER False -- NXT .L00000892
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00000849
'X64_AMOCO.InstructionDEAD'>2182 [None]movl      $14, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2187 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2189 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00000892' section='.text', address=2194>
    ENDER False -- NXT .L000008C3
    CFG .L00000B9A
    CFG .L000008C3
    GRAPH_NXT .L000008C3
    GRAPH_NXT .L00000B9A
    GRAPH_PRV .L00000849
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>2194 [None]movq      16(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['r12', 'rax', 'rcx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2199 [None]movq      avma@GOTPCREL(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['r12', 'rax', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2206 [None]movq      $-72057594037927937, %rax
	 R['rip'] W['rax', 'rip']
	 D['r12', 'rax', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2216 [None]movl      $1, %r12d
	 R['rip'] W['r12', 'rip']
	 D['r12', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2222 [None]movq      %rcx, (%rsi)
	 R['rcx', 'rip', 'rsi'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2225 [None]andq      (%rbx), %rax
	 R['MEM', 'rax', 'rbx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2228 [None]cmpq      $0, 8(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2234 [None]movq      %rax, (%rcx)
	 R['rax', 'rcx', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2237 [jcc]jle       .L00000B9A
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000B9A' section='.text', address=2970>]

<Symbol '.L000008C3' section='.text', address=2243>
    ENDER True -- NXT None
    CFG .L0000090C
    GRAPH_NXT .L0000090C
    GRAPH_PRV .L00000892
'X64_AMOCO.InstructionDEAD'>2243 [None]movq      %rbp, 8(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r13', 'r14', 'r15', 'rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2248 [None]movq      %rcx, %r15
	 R['rcx', 'rip'] W['r15', 'rip']
	 D['r13', 'r14', 'r15', 'rax', 'rbp']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2251 [None]movq      %r12, %rbp
	 R['r12', 'rip'] W['rbp', 'rip']
	 D['r13', 'r14', 'rax', 'rbp', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2254 [jmp]jmp       .L0000090C
	 R['rip'] W['rip']
	 D['r12', 'r13', 'r14', 'rax', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L0000090C' section='.text', address=2316>]

<Symbol '.L000008D0' section='.text', address=2256>
    ENDER False -- NXT .L000008DA
    CFG getvar@PLT
    GRAPH_NXT getvar@PLT
    GRAPH_PRV .L0000090C
    GRAPH_PRV .L00000943
'X64_AMOCO.InstructionDEAD'>2256 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2259 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2261 [sub]call      getvar@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'getvar@PLT' >]

<Symbol '.L000008DA' section='.text', address=2266>
    ENDER False -- NXT .L000008F1
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV getvar@PLT
'X64_AMOCO.InstructionDEAD'>2266 [None]movslq    %eax, %r13
	 R['rax', 'rip'] W['r13', 'rip']
	 D['r13', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2269 [None]movq      %r12, %rdx
	 R['r12', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2272 [None]movl      %r14d, %edi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2275 [None]movq      %r13, (%r15,%rbp,8)
	 R['r13', 'r15', 'rbp', 'rip'] W['MEM', 'rip']
	 D['rax', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2279 [None]movq      %r13, %rsi
	 R['r13', 'rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2282 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2284 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L000008F1' section='.text', address=2289>
    ENDER False -- NXT .L000008FD
    CFG var_push@PLT
    GRAPH_NXT var_push@PLT
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>2289 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2291 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2293 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2296 [sub]call      var_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'var_push@PLT' >]

<Symbol '.L000008FD' section='.text', address=2301>
    ENDER False -- NXT .L0000090C
    CFG .L00000B9A
    CFG .L0000090C
    GRAPH_NXT .L0000090C
    GRAPH_NXT .L00000B9A
    GRAPH_PRV var_push@PLT
'X64_AMOCO.InstructionDEAD'>2301 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2305 [None]cmpq      8(%rsp), %rbp
	 R['MEM', 'rbp', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2310 [jcc]je        .L00000B9A
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000B9A' section='.text', address=2970>]

<Symbol '.L0000090C' section='.text', address=2316>
    ENDER False -- NXT .L00000930
    CFG .L000008D0
    CFG .L00000930
    GRAPH_NXT .L000008D0
    GRAPH_NXT .L00000930
    GRAPH_PRV .L000008C3
    GRAPH_PRV .L000008FD
'X64_AMOCO.InstructionDEAD'>2316 [None]movq      (%rbx,%rbp,8), %r12
	 R['MEM', 'rbp', 'rbx', 'rip'] W['r12', 'rip']
	 D['r12', 'r13', 'r14', 'rax', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2320 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r13', 'r14', 'rax', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2327 [None]movl      $113, %r14d
	 R['rip'] W['r14', 'rip']
	 D['r13', 'r14', 'rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2333 [None]leaq      (%r12,%r12,2), %r13
	 R['MEM', 'r12', 'rip'] W['r13', 'rip']
	 D['r13', 'rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2337 [None]salq      $4, %r13
	 R['r13', 'rflags', 'rip'] W['r13', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2341 [None]movq      %r13, %rax
	 R['r13', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2344 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2347 [None]cmpl      $4, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2350 [jcc]jne       .L000008D0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000008D0' section='.text', address=2256>]

<Symbol '.L00000930' section='.text', address=2352>
    ENDER False -- NXT .L0000093B
    CFG is_node_zero@PLT
    GRAPH_NXT is_node_zero@PLT
    GRAPH_PRV .L0000090C
'X64_AMOCO.InstructionDEAD'>2352 [None]movq      16(%rax), %rdi
	 R['MEM', 'rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2356 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2358 [sub]call      is_node_zero@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'is_node_zero@PLT' >]

<Symbol '.L0000093B' section='.text', address=2363>
    ENDER False -- NXT .L00000943
    CFG .L00001209
    CFG .L00000943
    GRAPH_NXT .L00000943
    GRAPH_NXT .L00001209
    GRAPH_PRV is_node_zero@PLT
'X64_AMOCO.InstructionDEAD'>2363 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2365 [jcc]je        .L00001209
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00001209' section='.text', address=4617>]

<Symbol '.L00000943' section='.text', address=2371>
    ENDER True -- NXT None
    CFG .L000008D0
    GRAPH_NXT .L000008D0
    GRAPH_PRV .L0000093B
    GRAPH_PRV .L0000122A
'X64_AMOCO.InstructionDEAD'>2371 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r12', 'rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2378 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['r12', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2381 [None]movq      8(%rax,%r13), %r12
	 R['MEM', 'r13', 'rax', 'rip'] W['r12', 'rip']
	 D['r12', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2386 [jmp]jmp       .L000008D0
	 R['rip'] W['rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000008D0' section='.text', address=2256>]

<Symbol '.L00000957' section='.text', size=9, address=2391>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>2391 [None].p2align 4

<Symbol '.L00000960' section='.text', address=2400>
    ENDER False -- NXT .L00000970
    CFG .L00000FBA
    CFG .L00000970
    GRAPH_NXT .L00000970
    GRAPH_NXT .L00000FBA
    GRAPH_PRV .L0000068B
    GRAPH_PRV .L00000CC9
'X64_AMOCO.InstructionDEAD'>2400 [None]movzbl    219(%rsp), %eax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2408 [None]cmpb      $80, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2410 [jcc]je        .L00000FBA
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000FBA' section='.text', address=4026>]

<Symbol '.L00000970' section='.text', address=2416>
    ENDER False -- NXT .L00000976
    CFG .L00000ED5
    CFG .L00000976
    GRAPH_NXT .L00000976
    GRAPH_NXT .L00000ED5
    GRAPH_PRV .L00000960
'X64_AMOCO.InstructionDEAD'>2416 [jcc]jle       .L00000ED5
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000ED5' section='.text', address=3797>]

<Symbol '.L00000976' section='.text', address=2422>
    ENDER False -- NXT .L0000097E
    CFG .L000011D2
    CFG .L0000097E
    GRAPH_NXT .L0000097E
    GRAPH_NXT .L000011D2
    GRAPH_PRV .L00000970
'X64_AMOCO.InstructionDEAD'>2422 [None]cmpb      $102, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2424 [jcc]je        .L000011D2
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L000011D2' section='.text', address=4562>]

<Symbol '.L0000097E' section='.text', address=2430>
    ENDER False -- NXT .L00000986
    CFG .L00000BF8
    CFG .L00000986
    GRAPH_NXT .L00000986
    GRAPH_NXT .L00000BF8
    GRAPH_PRV .L00000976
'X64_AMOCO.InstructionDEAD'>2430 [None]cmpb      $112, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2432 [jcc]jne       .L00000BF8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00000986' section='.text', address=2438>
    ENDER False -- NXT .L00000999
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L0000097E
'X64_AMOCO.InstructionDEAD'>2438 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2443 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2445 [None]movl      $78, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2450 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2452 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00000999' section='.text', address=2457>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>2457 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L0000099E' section='.text', size=2, address=2462>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>2462 [None].p2align 4,,10
'plasmasm.constants.P2Align'>2462 [None].p2align 3

<Symbol '.L000009A0' section='.text', address=2464>
    ENDER False -- NXT .L000009B0
    CFG .L00000DA9
    CFG .L000009B0
    GRAPH_NXT .L000009B0
    GRAPH_NXT .L00000DA9
    GRAPH_PRV .L0000068B
    GRAPH_PRV .L00000CC9
'X64_AMOCO.InstructionDEAD'>2464 [None]movzbl    219(%rsp), %eax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2472 [None]cmpb      $115, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2474 [jcc]jne       .L00000DA9
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000DA9' section='.text', address=3497>]

<Symbol '.L000009B0' section='.text', address=2480>
    ENDER False -- NXT .L000009EA
    CFG .L000009F6
    CFG .L000009EA
    GRAPH_NXT .L000009EA
    GRAPH_NXT .L000009F6
    GRAPH_PRV .L000009A0
'X64_AMOCO.InstructionDEAD'>2480 [None]movq      128(%rsp), %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip']
	 D['r12', 'r14', 'rax', 'rbp', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2488 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r12', 'rax', 'rbp', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2495 [None]subq      %rbx, %r14
	 R['r14', 'rbx', 'rip'] W['r14', 'rflags', 'rip']
	 D['r12', 'rbp', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2498 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['r12', 'rbp', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2501 [None]leaq      1(%r14), %rbp
	 R['MEM', 'r14', 'rip'] W['rbp', 'rip']
	 D['r12', 'rbp', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2505 [None]leaq      0(,%rbp,8), %rdx
	 R['MEM', 'rbp', 'rip'] W['rdx', 'rip']
	 D['r12', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2513 [None]movq      %rax, %r12
	 R['rax', 'rip'] W['r12', 'rip']
	 D['r12', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2516 [None]subq      %rdx, %r12
	 R['r12', 'rdx', 'rip'] W['r12', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2519 [None]movq      bot@GOTPCREL(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2526 [None]subq      (%rdx), %rax
	 R['MEM', 'rax', 'rdx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2529 [None]shrq      $3, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2533 [None]cmpq      %rax, %rbp
	 R['rax', 'rbp', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2536 [jcc]jbe       .L000009F6
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L000009F6' section='.text', address=2550>]

<Symbol '.L000009EA' section='.text', address=2538>
    ENDER False -- NXT .L000009F6
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L000009B0
'X64_AMOCO.InstructionDEAD'>2538 [None]movl      $14, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2543 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2545 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L000009F6' section='.text', address=2550>
    ENDER False -- NXT .L00000A0F
    CFG .L00000A22
    CFG .L00000A0F
    GRAPH_NXT .L00000A0F
    GRAPH_NXT .L00000A22
    GRAPH_PRV .L000009B0
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>2550 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2557 [None]movq      %r12, (%rax)
	 R['r12', 'rax', 'rip'] W['MEM', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2560 [None]movq      $-72057594037927936, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2570 [None]testq     %rax, %rbp
	 R['rax', 'rbp', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2573 [jcc]je        .L00000A22
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000A22' section='.text', address=2594>]

<Symbol '.L00000A0F' section='.text', address=2575>
    ENDER False -- NXT .L00000A22
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L000009F6
'X64_AMOCO.InstructionDEAD'>2575 [None]leaq      .LC0(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2582 [None]movl      $15, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2587 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2589 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00000A22' section='.text', address=2594>
    ENDER False -- NXT .L00000A3C
    CFG .L00001940
    CFG .L00000A3C
    GRAPH_NXT .L00000A3C
    GRAPH_NXT .L00001940
    GRAPH_PRV .L000009F6
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>2594 [None]movq      $2449958197289549824, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2604 [None]orq       %rax, %rbp
	 R['rax', 'rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2607 [None]testq     %r14, %r14
	 R['r14', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2610 [None]movq      %rbp, (%r12)
	 R['r12', 'rbp', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2614 [jcc]jle       .L00001940
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001940' section='.text', address=6464>]

<Symbol '.L00000A3C' section='.text', address=2620>
    ENDER False -- NXT .L00000A60
    CFG .L00000A60
    GRAPH_NXT .L00000A60
    GRAPH_PRV .L00000A22
'X64_AMOCO.InstructionDEAD'>2620 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r13', 'r15', 'rax', 'rbp', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2625 [None]xorl      %r13d, %r13d
	 R['rflags', 'rip'] W['r13', 'rflags', 'rip']
	 D['r13', 'r15', 'rbp', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2628 [None]movl      $1, %ebp
	 R['rip'] W['rbp', 'rip']
	 D['r15', 'rbp', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2633 [None]movq      $72057594037927935, %r15
	 R['rip'] W['r15', 'rip']
	 D['r15', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2643 [None]leaq      (%rax,%rbx,8), %rbx
	 R['MEM', 'rax', 'rbx', 'rip'] W['rbx', 'rip']
	 D['rdi', 'rsi']
	 STACK:False:()
'plasmasm.constants.P2Align'>2647 [None].p2align 4

<Symbol '.L00000A60' section='.text', address=2656>
    ENDER False -- NXT .L00000A71
    CFG cattovec@PLT
    GRAPH_NXT cattovec@PLT
    GRAPH_PRV .L00000A3C
    GRAPH_PRV .L00000A71
'X64_AMOCO.InstructionDEAD'>2656 [None]movq      -8(%rbx,%rbp,8), %rdi
	 R['MEM', 'rbp', 'rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2661 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2663 [None]movl      $19, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2668 [sub]call      cattovec@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'cattovec@PLT' >]

<Symbol '.L00000A71' section='.text', address=2673>
    ENDER False -- NXT .L00000A8B
    CFG .L00000A60
    CFG .L00000A8B
    GRAPH_NXT .L00000A60
    GRAPH_NXT .L00000A8B
    GRAPH_PRV cattovec@PLT
'X64_AMOCO.InstructionDEAD'>2673 [None]cltq      
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2675 [None]movq      %r15, %rcx
	 R['r15', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2678 [None]movq      %rax, (%r12,%rbp,8)
	 R['r12', 'rax', 'rbp', 'rip'] W['MEM', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2682 [None]andq      (%rax), %rcx
	 R['MEM', 'rax', 'rcx', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2685 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2689 [None]cmpq      %rbp, %r14
	 R['r14', 'rbp', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2692 [None]leaq      -1(%r13,%rcx), %r13
	 R['MEM', 'r13', 'rcx', 'rip'] W['r13', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2697 [jcc]jge       .L00000A60
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000A60' section='.text', address=2656>]

<Symbol '.L00000A8B' section='.text', address=2699>
    ENDER False -- NXT .L00000AB4
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00000A71
'X64_AMOCO.InstructionDEAD'>2699 [None]movq      112(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rbp', 'rbx', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2704 [None]leaq      1(%r13), %rsi
	 R['MEM', 'r13', 'rip'] W['rip', 'rsi']
	 D['rax', 'rbp', 'rbx', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2708 [None]movl      $80, %edi
	 R['rip'] W['rdi', 'rip']
	 D['r13', 'rax', 'rbp', 'rbx', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2713 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r13', 'rax', 'rbp', 'rbx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2715 [None]movl      $1, %ebp
	 R['rip'] W['rbp', 'rip']
	 D['r13', 'rbp', 'rbx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2720 [None]movl      $1, %ebx
	 R['rip'] W['rbx', 'rip']
	 D['r13', 'rbx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2725 [None]movq      $72057594037927935, %r13
	 R['rip'] W['r13', 'rip']
	 D['r13']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2735 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00000AB4' section='.text', address=2740>
    ENDER False -- NXT .L00000AB8
    CFG .L00000AB8
    GRAPH_NXT .L00000AB8
    GRAPH_PRV op_push_loc@PLT
'plasmasm.constants.P2Align'>2740 [None].p2align 4,,10
'plasmasm.constants.P2Align'>2740 [None].p2align 3

<Symbol '.L00000AB8' section='.text', address=2744>
    ENDER False -- NXT .L00000ACE
    CFG .L00000B11
    CFG .L00000ACE
    GRAPH_NXT .L00000ACE
    GRAPH_NXT .L00000B11
    GRAPH_PRV .L00000AB4
    GRAPH_PRV .L00000B11
'X64_AMOCO.InstructionDEAD'>2744 [None]movq      (%r12,%rbp,8), %rax
	 R['MEM', 'r12', 'rbp', 'rip'] W['rax', 'rip']
	 D['r15', 'rax', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2748 [None]movq      %r13, %rdx
	 R['r13', 'rip'] W['rdx', 'rip']
	 D['r15', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2751 [None]movl      $1, %r15d
	 R['rip'] W['r15', 'rip']
	 D['r15', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2757 [None]andq      (%rax), %rdx
	 R['MEM', 'rax', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2760 [None]cmpq      $1, %rdx
	 R['rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2764 [jcc]jle       .L00000B11
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000B11' section='.text', address=2833>]

<Symbol '.L00000ACE' section='.text', address=2766>
    ENDER False -- NXT .L00000AD0
    CFG .L00000AD0
    GRAPH_NXT .L00000AD0
    GRAPH_PRV .L00000AB8
'plasmasm.constants.P2Align'>2766 [None].p2align 4,,10
'plasmasm.constants.P2Align'>2766 [None].p2align 3

<Symbol '.L00000AD0' section='.text', address=2768>
    ENDER False -- NXT .L00000AE3
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L00000ACE
    GRAPH_PRV .L00000B02
'X64_AMOCO.InstructionDEAD'>2768 [None]movq      (%rax,%r15,8), %rdi
	 R['MEM', 'r15', 'rax', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2772 [None]movl      $1, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2777 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2782 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L00000AE3' section='.text', address=2787>
    ENDER False -- NXT .L00000B02
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>2787 [None]movq      (%r12,%rbp,8), %rax
	 R['MEM', 'r12', 'rbp', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2791 [None]movq      %rbx, %rsi
	 R['rbx', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2794 [None]movl      $83, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2799 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2803 [None]movq      (%rax,%r15,8), %rdx
	 R['MEM', 'r15', 'rax', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2807 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2809 [None]addq      $1, %r15
	 R['r15', 'rip'] W['r15', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2813 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00000B02' section='.text', address=2818>
    ENDER False -- NXT .L00000B11
    CFG .L00000AD0
    CFG .L00000B11
    GRAPH_NXT .L00000AD0
    GRAPH_NXT .L00000B11
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>2818 [None]movq      (%r12,%rbp,8), %rax
	 R['MEM', 'r12', 'rbp', 'rip'] W['rax', 'rip']
	 D['rax', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2822 [None]movq      %r13, %rdx
	 R['r13', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2825 [None]andq      (%rax), %rdx
	 R['MEM', 'rax', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2828 [None]cmpq      %r15, %rdx
	 R['r15', 'rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2831 [jcc]jg        .L00000AD0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000AD0' section='.text', address=2768>]

<Symbol '.L00000B11' section='.text', address=2833>
    ENDER False -- NXT .L00000B1A
    CFG .L00000AB8
    CFG .L00000B1A
    GRAPH_NXT .L00000AB8
    GRAPH_NXT .L00000B1A
    GRAPH_PRV .L00000AB8
    GRAPH_PRV .L00000B02
'X64_AMOCO.InstructionDEAD'>2833 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2837 [None]cmpq      %rbp, %r14
	 R['r14', 'rbp', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2840 [jcc]jge       .L00000AB8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000AB8' section='.text', address=2744>]

<Symbol '.L00000B1A' section='.text', address=2842>
    ENDER False -- NXT .L00000B30
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00000B11
    GRAPH_PRV .L00001956
'X64_AMOCO.InstructionDEAD'>2842 [None]movq      112(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2847 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2852 [None]movl      $71, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2857 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2859 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00000B30' section='.text', address=2864>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>2864 [None]movq      128(%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbp', 'rbx', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2872 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00000B3D' section='.text', size=3, address=2877>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>2877 [None].p2align 4,,10
'plasmasm.constants.P2Align'>2877 [None].p2align 3

<Symbol '.L00000B40' section='.text', address=2880>
    ENDER False -- NXT .L00000B57
    CFG .L00001040
    CFG .L00000B57
    GRAPH_NXT .L00000B57
    GRAPH_NXT .L00001040
    GRAPH_PRV .L0000068B
    GRAPH_PRV .L00000CC9
'X64_AMOCO.InstructionDEAD'>2880 [None]movzbl    219(%rsp), %esi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2888 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2892 [None]leal      -71(%rsi), %eax
	 R['MEM', 'rip', 'rsi'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2895 [None]cmpb      $44, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2897 [jcc]ja        .L00001040
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001040' section='.text', address=4160>]

<Symbol '.L00000B57' section='.text', address=2903>
    ENDER True -- NXT None
    CFG .L00000F27
    CFG .L00000F68
    CFG .L00000F91
    CFG .L00001040
    GRAPH_NXT .L00000F27
    GRAPH_NXT .L00000F68
    GRAPH_NXT .L00000F91
    GRAPH_NXT .L00001040
    GRAPH_PRV .L00000B40
'X64_AMOCO.InstructionDEAD'>2903 [None]leaq      .LC00000018(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2910 [None]movzbl    %al, %eax
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2913 [None]movslq    (%rdx,%rax,4), %rax
	 R['MEM', 'rax', 'rdx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2917 [None]addq      %rax, %rdx
	 R['rax', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2920 [jmp]jmp       *%rdx
	 R['rdx', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000F91' section='.text', address=3985>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00000F68' section='.text', address=3944>, <Symbol '.L00000F68' section='.text', address=3944>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00000F27' section='.text', address=3879>, <Symbol '.L00000F27' section='.text', address=3879>]

<Symbol '.L00000B6A' section='.text', size=6, address=2922>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>2922 [None].p2align 4,,10
'plasmasm.constants.P2Align'>2922 [None].p2align 3

<Symbol '.L00000B70' section='.text', address=2928>
    ENDER False -- NXT .L00000B87
    CFG .L00001040
    CFG .L00000B87
    GRAPH_NXT .L00000B87
    GRAPH_NXT .L00001040
    GRAPH_PRV .L0000068B
    GRAPH_PRV .L00000CC9
'X64_AMOCO.InstructionDEAD'>2928 [None]movzbl    219(%rsp), %esi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2936 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2940 [None]leal      -38(%rsi), %eax
	 R['MEM', 'rip', 'rsi'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2943 [None]cmpb      $77, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2945 [jcc]ja        .L00001040
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001040' section='.text', address=4160>]

<Symbol '.L00000B87' section='.text', address=2951>
    ENDER True -- NXT None
    CFG .L00000FBA
    CFG .L00000FD2
    CFG .L00000FED
    CFG .L00001012
    CFG .L00001040
    GRAPH_NXT .L00000FBA
    GRAPH_NXT .L00000FD2
    GRAPH_NXT .L00000FED
    GRAPH_NXT .L00001012
    GRAPH_NXT .L00001040
    GRAPH_PRV .L00000B70
'X64_AMOCO.InstructionDEAD'>2951 [None]leaq      .LC000000CC(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2958 [None]movzbl    %al, %eax
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2961 [None]movslq    (%rdx,%rax,4), %rax
	 R['MEM', 'rax', 'rdx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2965 [None]addq      %rax, %rdx
	 R['rax', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>2968 [jmp]jmp       *%rdx
	 R['rdx', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001012' section='.text', address=4114>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001012' section='.text', address=4114>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001012' section='.text', address=4114>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001012' section='.text', address=4114>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00000FBA' section='.text', address=4026>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00000FED' section='.text', address=4077>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00000FD2' section='.text', address=4050>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001040' section='.text', address=4160>, <Symbol '.L00001012' section='.text', address=4114>, <Symbol '.L00001012' section='.text', address=4114>]

<Symbol '.L00000B9A' section='.text', address=2970>
    ENDER False -- NXT .L00000BA9
    CFG checkdups@PLT
    GRAPH_NXT checkdups@PLT
    GRAPH_PRV .L00000892
    GRAPH_PRV .L000008FD
'X64_AMOCO.InstructionDEAD'>2970 [None]movq      16(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2975 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2978 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2980 [sub]call      checkdups@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'checkdups@PLT' >]

<Symbol '.L00000BA9' section='.text', address=2985>
    ENDER False -- NXT .L00000BBB
    CFG compilecast@PLT
    GRAPH_NXT compilecast@PLT
    GRAPH_PRV .L000006F5
    GRAPH_PRV .L00000E02
    GRAPH_PRV .L00000E40
    GRAPH_PRV .L000010C0
    GRAPH_PRV .L0000199A
    GRAPH_PRV checkdups@PLT
'X64_AMOCO.InstructionDEAD'>2985 [None]movl      104(%rsp), %edx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2989 [None]movq      40(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2994 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2996 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>2998 [sub]call      compilecast@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'compilecast@PLT' >]

<Symbol '.L00000BBB' section='.text', address=3003>
    ENDER False -- NXT .L00000BCA
    CFG .L00000BCA
    GRAPH_NXT .L00000BCA
    GRAPH_PRV .L00000D38
    GRAPH_PRV .L00000D58
    GRAPH_PRV .L000011A8
    GRAPH_PRV compilecast@PLT
'X64_AMOCO.InstructionDEAD'>3003 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r12', 'r13', 'r14', 'r15', 'rax', 'rbp', 'rbx', 'rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3010 [None]movq      64(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx', 'rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3015 [None]movq      %rcx, (%rax)
	 R['rax', 'rcx', 'rip'] W['MEM', 'rip']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx', 'rflags']
	 STACK:False:()

<Symbol '.L00000BCA' section='.text', address=3018>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV .L00000BBB
    GRAPH_PRV .L00001CE1
    GRAPH_PRV .L00001D30
'X64_AMOCO.InstructionDEAD'>3018 [None]addq      $456, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3025 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3026 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'r15', 'rbp']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3027 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'r15']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3029 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14', 'r15']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3031 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14', 'r15']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3033 [None]popq      %r15
	 R['MEM', 'rip', 'rsp'] W['r15', 'rip', 'rsp']
	 D['r15']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3035 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[None]

<Symbol '.L00000BDC' section='.text', size=4, address=3036>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>3036 [None].p2align 4,,10
'plasmasm.constants.P2Align'>3036 [None].p2align 3

<Symbol '.L00000BE0' section='.text', address=3040>
    ENDER False -- NXT .L00000BF5
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00000682
    GRAPH_PRV .L0000068B
    GRAPH_PRV .L00000CC0
    GRAPH_PRV .L00000CC9
'X64_AMOCO.InstructionDEAD'>3040 [None]leaq      .LC31(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3047 [None]movl      %eax, %edx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3049 [None]movl      $2, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3054 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3056 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00000BF5' section='.text', address=3061>
    ENDER False -- NXT .L00000BF8
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV pari_err@PLT
'plasmasm.constants.P2Align'>3061 [None].p2align 4,,10
'plasmasm.constants.P2Align'>3061 [None].p2align 3

<Symbol '.L00000BF8' section='.text', address=3064>
    ENDER True -- NXT None
    CFG .L00000620
    GRAPH_NXT .L00000620
    GRAPH_PRV .L0000097E
    GRAPH_PRV .L00000999
    GRAPH_PRV .L00000B30
    GRAPH_PRV .L00000BF5
    GRAPH_PRV .L00000DD6
    GRAPH_PRV .L00000ED5
    GRAPH_PRV .L00000F00
    GRAPH_PRV .L00000F63
    GRAPH_PRV .L00000F8C
    GRAPH_PRV .L00000FB5
    GRAPH_PRV .L00000FCD
    GRAPH_PRV .L00000FE8
    GRAPH_PRV .L00000FED
    GRAPH_PRV .L00001025
    GRAPH_PRV .L0000106E
    GRAPH_PRV .L000011EA
    GRAPH_PRV .L00001317
    GRAPH_PRV .L000013A9
    GRAPH_PRV .L00001404
    GRAPH_PRV .L000014D4
    GRAPH_PRV .L00001510
    GRAPH_PRV .L00001531
    GRAPH_PRV .L00001617
    GRAPH_PRV .L00001633
    GRAPH_PRV .L000016AC
    GRAPH_PRV .L000016CD
    GRAPH_PRV .L00001722
    GRAPH_PRV .L00001C9E
'X64_AMOCO.InstructionDEAD'>3064 [None]movq      232(%rsp), %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3072 [jmp]jmp       .L00000620
	 R['rip'] W['rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000620' section='.text', address=1568>]

<Symbol '.L00000C05' section='.text', address=3077>
    ENDER False -- NXT .L00000C2D
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L00000CC9
'X64_AMOCO.InstructionDEAD'>3077 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3084 [None]movq      16(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3089 [None]leaq      .LC21(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3096 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3099 [None]movq      32(%rax), %rdx
	 R['MEM', 'rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3103 [None]movq      24(%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3107 [None]leaq      -1(%rax,%rdx), %rsi
	 R['MEM', 'rax', 'rdx', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3112 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00000C2D' section='.text', address=3117>
    ENDER False -- NXT .L00000C3E
    CFG .L00000CA0
    CFG .L00000C3E
    GRAPH_NXT .L00000C3E
    GRAPH_NXT .L00000CA0
    GRAPH_PRV .L00000676
    GRAPH_PRV .L0000068B
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>3117 [None]movzbl    219(%rsp), %r14d
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip']
	 D['r14', 'rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3126 [None]leal      -69(%r14), %eax
	 R['MEM', 'r14', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3130 [None]testb     $-5, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3132 [jcc]je        .L00000CA0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000CA0' section='.text', address=3232>]

<Symbol '.L00000C3E' section='.text', address=3134>
    ENDER False -- NXT .L00000C6C
    CFG .L00001835
    CFG .L00000C6C
    GRAPH_NXT .L00000C6C
    GRAPH_NXT .L00001835
    GRAPH_PRV .L00000C2D
'X64_AMOCO.InstructionDEAD'>3134 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3141 [None]movq      (%rax), %rcx
	 R['MEM', 'rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3144 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3149 [None]movq      (%rax,%rbx,8), %rax
	 R['MEM', 'rax', 'rbx', 'rip'] W['rax', 'rip']
	 D['rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3153 [None]leaq      (%rax,%rax,2), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3157 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3161 [None]addq      %rcx, %rax
	 R['rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3164 [None]movl      (%rax), %edx
	 R['MEM', 'rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3166 [None]movq      8(%rax), %rsi
	 R['MEM', 'rax', 'rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3170 [None]cmpq      $10, %rdx
	 R['rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3174 [jcc]je        .L00001835
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001835' section='.text', address=6197>]

<Symbol '.L00000C6C' section='.text', address=3180>
    ENDER False -- NXT .L00000C71
    CFG .L00000CA0
    CFG .L00000C71
    GRAPH_NXT .L00000C71
    GRAPH_NXT .L00000CA0
    GRAPH_PRV .L00000C3E
'X64_AMOCO.InstructionDEAD'>3180 [None]testq     %rdx, %rdx
	 R['rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3183 [jcc]jne       .L00000CA0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000CA0' section='.text', address=3232>]

<Symbol '.L00000C71' section='.text', address=3185>
    ENDER False -- NXT .L00000C8F
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L00000C6C
'X64_AMOCO.InstructionDEAD'>3185 [None]leaq      (%rsi,%rsi,2), %rax
	 R['MEM', 'rip', 'rsi'] W['rax', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3189 [None]leaq      .LC23(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3196 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3200 [None]movq      24(%rcx,%rax), %rsi
	 R['MEM', 'rax', 'rcx', 'rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3205 [None]addq      32(%rcx,%rax), %rsi
	 R['MEM', 'rax', 'rcx', 'rip', 'rsi'] W['rflags', 'rip', 'rsi']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3210 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00000C8F' section='.text', address=3215>
    ENDER False -- NXT .L00000CA0
    CFG .L00000CA0
    GRAPH_NXT .L00000CA0
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>3215 [None]movzbl    219(%rsp), %r14d
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip']
	 D['r14', 'rax', 'rflags']
	 STACK:False:()
'plasmasm.constants.P2Align'>3224 [None].p2align 4

<Symbol '.L00000CA0' section='.text', address=3232>
    ENDER False -- NXT .L00000CAC
    CFG .L0000175E
    CFG .L00000CAC
    GRAPH_NXT .L00000CAC
    GRAPH_NXT .L0000175E
    GRAPH_PRV .L00000C2D
    GRAPH_PRV .L00000C6C
    GRAPH_PRV .L00000C8F
    GRAPH_PRV .L00001845
'X64_AMOCO.InstructionDEAD'>3232 [None]leal      -38(%r14), %eax
	 R['MEM', 'r14', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3236 [None]cmpb      $77, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3238 [jcc]ja        .L0000175E
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L0000175E' section='.text', address=5982>]

<Symbol '.L00000CAC' section='.text', address=3244>
    ENDER True -- NXT None
    CFG .L0000122F
    CFG .L0000131C
    CFG .L000013B7
    CFG .L00001411
    CFG .L000014E1
    CFG .L00001515
    CFG .L00001536
    CFG .L0000161C
    CFG .L00001657
    CFG .L000016B1
    CFG .L000016D2
    CFG .L0000175E
    GRAPH_NXT .L0000122F
    GRAPH_NXT .L0000131C
    GRAPH_NXT .L000013B7
    GRAPH_NXT .L00001411
    GRAPH_NXT .L000014E1
    GRAPH_NXT .L00001515
    GRAPH_NXT .L00001536
    GRAPH_NXT .L0000161C
    GRAPH_NXT .L00001657
    GRAPH_NXT .L000016B1
    GRAPH_NXT .L000016D2
    GRAPH_NXT .L0000175E
    GRAPH_PRV .L00000CA0
'X64_AMOCO.InstructionDEAD'>3244 [None]movzbl    %al, %edx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3247 [None]leaq      .LC00000204(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3254 [None]movslq    (%rax,%rdx,4), %rdx
	 R['MEM', 'rax', 'rdx', 'rip'] W['rdx', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3258 [None]addq      %rdx, %rax
	 R['rax', 'rdx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3261 [jmp]jmp       *%rax
	 R['rax', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L0000131C' section='.text', address=4892>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000131C' section='.text', address=4892>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L000013B7' section='.text', address=5047>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L00001411' section='.text', address=5137>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L000014E1' section='.text', address=5345>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L00001411' section='.text', address=5137>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L00001515' section='.text', address=5397>, <Symbol '.L00001536' section='.text', address=5430>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L00001515' section='.text', address=5397>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000161C' section='.text', address=5660>, <Symbol '.L00001657' section='.text', address=5719>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L000016B1' section='.text', address=5809>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L0000175E' section='.text', address=5982>, <Symbol '.L000016D2' section='.text', address=5842>, <Symbol '.L0000122F' section='.text', address=4655>]

<Symbol '.L00000CBF' section='.text', size=1, address=3263>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>3263 [None].p2align 4,,10
'plasmasm.constants.P2Align'>3263 [None].p2align 3

<Symbol '.L00000CC0' section='.text', address=3264>
    ENDER False -- NXT .L00000CC9
    CFG .L00000BE0
    CFG .L00000CC9
    GRAPH_NXT .L00000BE0
    GRAPH_NXT .L00000CC9
    GRAPH_PRV .L0000064B
'X64_AMOCO.InstructionDEAD'>3264 [None]cmpl      $5, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3267 [jcc]ja        .L00000BE0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000BE0' section='.text', address=3040>]

<Symbol '.L00000CC9' section='.text', address=3273>
    ENDER True -- NXT None
    CFG .L00000960
    CFG .L000009A0
    CFG .L00000B40
    CFG .L00000B70
    CFG .L00000BE0
    CFG .L00000C05
    GRAPH_NXT .L00000960
    GRAPH_NXT .L000009A0
    GRAPH_NXT .L00000B40
    GRAPH_NXT .L00000B70
    GRAPH_NXT .L00000BE0
    GRAPH_NXT .L00000C05
    GRAPH_PRV .L00000CC0
'X64_AMOCO.InstructionDEAD'>3273 [None]leaq      .LC0000033C(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3280 [None]movl      %eax, %edx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3282 [None]movslq    (%rcx,%rdx,4), %rdx
	 R['MEM', 'rcx', 'rdx', 'rip'] W['rdx', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3286 [None]addq      %rcx, %rdx
	 R['rcx', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3289 [jmp]jmp       *%rdx
	 R['rdx', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000BE0' section='.text', address=3040>, <Symbol '.L00000C05' section='.text', address=3077>, <Symbol '.L00000B70' section='.text', address=2928>, <Symbol '.L00000B40' section='.text', address=2880>, <Symbol '.L000009A0' section='.text', address=2464>, <Symbol '.L00000960' section='.text', address=2400>]

<Symbol '.L00000CDB' section='.text', size=5, address=3291>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>3291 [None].p2align 4,,10
'plasmasm.constants.P2Align'>3291 [None].p2align 3

<Symbol '.L00000CE0' section='.text', address=3296>
    ENDER False -- NXT .L00000CF0
    CFG .L00000D79
    CFG .L00000CF0
    GRAPH_NXT .L00000CF0
    GRAPH_NXT .L00000D79
    GRAPH_PRV .L00000643
'X64_AMOCO.InstructionDEAD'>3296 [None]cmpq      8(%rsp), %rbx
	 R['MEM', 'rbx', 'rip', 'rsp'] W['rflags', 'rip']
	 D['r14', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3301 [None]movq      112(%rsp), %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip']
	 D['r14']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3306 [jcc]jle       .L00000D79
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000D79' section='.text', address=3449>]

<Symbol '.L00000CF0' section='.text', address=3312>
    ENDER False -- NXT .L00000D03
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00000CE0
    GRAPH_PRV .L00000D60
    GRAPH_PRV .L00000DA4
'X64_AMOCO.InstructionDEAD'>3312 [None]movq      56(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3317 [None]movl      108(%rsp), %edi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3321 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3323 [None]movq      %r14, %rdx
	 R['r14', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3326 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00000D03' section='.text', address=3331>
    ENDER False -- NXT .L00000D0D
    CFG .L00000D18
    CFG .L00000D0D
    GRAPH_NXT .L00000D0D
    GRAPH_NXT .L00000D18
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>3331 [None]testb     $2, 224(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3339 [jcc]je        .L00000D18
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000D18' section='.text', address=3352>]

<Symbol '.L00000D0D' section='.text', address=3341>
    ENDER False -- NXT .L00000D18
    CFG .L0000102A
    CFG .L00000D18
    GRAPH_NXT .L00000D18
    GRAPH_NXT .L0000102A
    GRAPH_PRV .L00000D03
'X64_AMOCO.InstructionDEAD'>3341 [None]testb     $2, 88(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3346 [jcc]je        .L0000102A
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L0000102A' section='.text', address=4138>]

<Symbol '.L00000D18' section='.text', address=3352>
    ENDER False -- NXT .L00000D28
    CFG .L00001173
    CFG .L00000D28
    GRAPH_NXT .L00000D28
    GRAPH_NXT .L00001173
    GRAPH_PRV .L00000D03
    GRAPH_PRV .L00000D0D
    GRAPH_PRV .L0000103B
'X64_AMOCO.InstructionDEAD'>3352 [None]movl      220(%rsp), %esi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3359 [None]cmpl      $4, %esi
	 R['rip', 'rsi'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3362 [jcc]je        .L00001173
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001173' section='.text', address=4467>]

<Symbol '.L00000D28' section='.text', address=3368>
    ENDER False -- NXT .L00000D38
    CFG compilecast@PLT
    GRAPH_NXT compilecast@PLT
    GRAPH_PRV .L00000D18
'X64_AMOCO.InstructionDEAD'>3368 [None]movl      104(%rsp), %edx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3372 [None]movq      40(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3377 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3379 [sub]call      compilecast@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilecast@PLT' >]

<Symbol '.L00000D38' section='.text', address=3384>
    ENDER False -- NXT .L00000D44
    CFG .L00000BBB
    CFG .L00000D44
    GRAPH_NXT .L00000BBB
    GRAPH_NXT .L00000D44
    GRAPH_PRV compilecast@PLT
'X64_AMOCO.InstructionDEAD'>3384 [None]cmpq      $0, 96(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3390 [jcc]je        .L00000BBB
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000BBB' section='.text', address=3003>]

<Symbol '.L00000D44' section='.text', address=3396>
    ENDER False -- NXT .L00000D58
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00000D38
    GRAPH_PRV .L00001204
'X64_AMOCO.InstructionDEAD'>3396 [None]movq      96(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3401 [None]movq      %r14, %rdx
	 R['r14', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3404 [None]movl      $89, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3409 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3411 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00000D58' section='.text', address=3416>
    ENDER True -- NXT None
    CFG .L00000BBB
    GRAPH_NXT .L00000BBB
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>3416 [jmp]jmp       .L00000BBB
	 R['rip'] W['rip']
	 D['r12', 'r13', 'r14', 'r15', 'rax', 'rbp', 'rbx', 'rcx', 'rflags']
	 STACK:False:()
	 dst=[<Symbol '.L00000BBB' section='.text', address=3003>]

<Symbol '.L00000D5D' section='.text', size=3, address=3421>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>3421 [None].p2align 4,,10
'plasmasm.constants.P2Align'>3421 [None].p2align 3

<Symbol '.L00000D60' section='.text', address=3424>
    ENDER False -- NXT .L00000D79
    CFG .L00000CF0
    CFG .L00000D79
    GRAPH_NXT .L00000CF0
    GRAPH_NXT .L00000D79
    GRAPH_PRV .L0000059F
'X64_AMOCO.InstructionDEAD'>3424 [None]movl      $1, %ebx
	 R['rip'] W['rbx', 'rip']
	 D['rbx', 'rflags']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 104, 108, 136, 232)
'X64_AMOCO.InstructionDEAD'>3429 [None]cmpq      8(%rsp), %rbx
	 R['MEM', 'rbx', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 104, 108, 136, 232)
'X64_AMOCO.InstructionDEAD'>3434 [None]movq      $0, 96(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 96, 104, 108, 136, 232)
'X64_AMOCO.InstructionDEAD'>3443 [jcc]jg        .L00000CF0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rcx': [224], '%rdx': [220]}:(8, 16, 24, 32, 40, 56, 64, 72, 80, 88, 96, 104, 108, 136, 232)
	 dst=[<Symbol '.L00000CF0' section='.text', address=3312>]

<Symbol '.L00000D79' section='.text', address=3449>
    ENDER False -- NXT .L00000DA4
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L00000CE0
    GRAPH_PRV .L00000D60
'X64_AMOCO.InstructionDEAD'>3449 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3454 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3461 [None]leaq      .LC32(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3468 [None]movq      (%rax,%rbx,8), %rax
	 R['MEM', 'rax', 'rbx', 'rip'] W['rax', 'rip']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3472 [None]leaq      (%rax,%rax,2), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3476 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3480 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3483 [None]movq      24(%rax), %rsi
	 R['MEM', 'rax', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3487 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00000DA4' section='.text', address=3492>
    ENDER True -- NXT None
    CFG .L00000CF0
    GRAPH_NXT .L00000CF0
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>3492 [jmp]jmp       .L00000CF0
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000CF0' section='.text', address=3312>]

<Symbol '.L00000DA9' section='.text', address=3497>
    ENDER False -- NXT .L00000DD6
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L000009A0
'X64_AMOCO.InstructionDEAD'>3497 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3504 [None]movq      120(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3509 [None]movsbl    %al, %edx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['r8', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3512 [None]movl      $5, %edi
	 R['rip'] W['rdi', 'rip']
	 D['r8', 'rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3517 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r8', 'rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3519 [None]addq      (%rcx), %rsi
	 R['MEM', 'rcx', 'rip', 'rsi'] W['rflags', 'rip', 'rsi']
	 D['r8', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3522 [None]movq      32(%rsi), %rcx
	 R['MEM', 'rip', 'rsi'] W['rcx', 'rip']
	 D['r8', 'rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3526 [None]movq      24(%rsi), %r8
	 R['MEM', 'rip', 'rsi'] W['r8', 'rip']
	 D['r8']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3530 [None]leaq      .LC30(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3537 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00000DD6' section='.text', address=3542>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>3542 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00000DDB' section='.text', address=3547>
    ENDER False -- NXT .L00000DEC
    CFG is_func_named@PLT
    GRAPH_NXT is_func_named@PLT
    GRAPH_PRV .L00000841
'X64_AMOCO.InstructionDEAD'>3547 [None]leaq      .LC13(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3554 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3556 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3559 [sub]call      is_func_named@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'is_func_named@PLT' >]

<Symbol '.L00000DEC' section='.text', address=3564>
    ENDER False -- NXT .L00000DF4
    CFG .L0000177A
    CFG .L00000DF4
    GRAPH_NXT .L00000DF4
    GRAPH_NXT .L0000177A
    GRAPH_PRV is_func_named@PLT
'X64_AMOCO.InstructionDEAD'>3564 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3566 [jcc]je        .L0000177A
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L0000177A' section='.text', address=6010>]

<Symbol '.L00000DF4' section='.text', address=3572>
    ENDER False -- NXT .L00000E02
    CFG .L00000E4D
    CFG .L00000E02
    GRAPH_NXT .L00000E02
    GRAPH_NXT .L00000E4D
    GRAPH_PRV .L00000DEC
'X64_AMOCO.InstructionDEAD'>3572 [None]cmpq      $0, 8(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3578 [None]movl      $1, %r14d
	 R['rip'] W['r14', 'rip']
	 D['r14']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3584 [jcc]jg        .L00000E4D
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000E4D' section='.text', address=3661>]

<Symbol '.L00000E02' section='.text', address=3586>
    ENDER True -- NXT None
    CFG .L00000BA9
    GRAPH_NXT .L00000BA9
    GRAPH_PRV .L00000DF4
'X64_AMOCO.InstructionDEAD'>3586 [jmp]jmp       .L00000BA9
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000BA9' section='.text', address=2985>]

<Symbol '.L00000E07' section='.text', size=9, address=3591>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>3591 [None].p2align 4

<Symbol '.L00000E10' section='.text', address=3600>
    ENDER False -- NXT .L00000E1A
    CFG getvar@PLT
    GRAPH_NXT getvar@PLT
    GRAPH_PRV .L00000E4D
'X64_AMOCO.InstructionDEAD'>3600 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3603 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3605 [sub]call      getvar@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'getvar@PLT' >]

<Symbol '.L00000E1A' section='.text', address=3610>
    ENDER False -- NXT .L00000E2C
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV getvar@PLT
'X64_AMOCO.InstructionDEAD'>3610 [None]movq      %r12, %rdx
	 R['r12', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3613 [None]movslq    %eax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3616 [None]movl      $102, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3621 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3623 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00000E2C' section='.text', address=3628>
    ENDER False -- NXT .L00000E40
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>3628 [None]movq      %r12, %rdx
	 R['r12', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3631 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3636 [None]movl      $71, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3641 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3643 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00000E40' section='.text', address=3648>
    ENDER False -- NXT .L00000E4D
    CFG .L00000BA9
    CFG .L00000E4D
    GRAPH_NXT .L00000BA9
    GRAPH_NXT .L00000E4D
    GRAPH_PRV .L00000EA6
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>3648 [None]addq      $1, %r14
	 R['r14', 'rip'] W['r14', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3652 [None]cmpq      %rbp, %r14
	 R['r14', 'rbp', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3655 [jcc]je        .L00000BA9
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000BA9' section='.text', address=2985>]

<Symbol '.L00000E4D' section='.text', address=3661>
    ENDER False -- NXT .L00000E6B
    CFG .L00000E10
    CFG .L00000E6B
    GRAPH_NXT .L00000E10
    GRAPH_NXT .L00000E6B
    GRAPH_PRV .L00000DF4
    GRAPH_PRV .L00000E40
'X64_AMOCO.InstructionDEAD'>3661 [None]movq      (%rbx,%r14,8), %r12
	 R['MEM', 'r14', 'rbx', 'rip'] W['r12', 'rip']
	 D['r12', 'r13', 'rax', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3665 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r13', 'rax', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3672 [None]leaq      (%r12,%r12,2), %r13
	 R['MEM', 'r12', 'rip'] W['r13', 'rip']
	 D['r13', 'rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3676 [None]salq      $4, %r13
	 R['r13', 'rflags', 'rip'] W['r13', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3680 [None]movq      %r13, %rax
	 R['r13', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3683 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3686 [None]cmpl      $4, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3689 [jcc]jne       .L00000E10
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000E10' section='.text', address=3600>]

<Symbol '.L00000E6B' section='.text', address=3691>
    ENDER False -- NXT .L00000E7B
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L00000E4D
'X64_AMOCO.InstructionDEAD'>3691 [None]movq      16(%rax), %rdi
	 R['MEM', 'rax', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3695 [None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3697 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3702 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L00000E7B' section='.text', address=3707>
    ENDER False -- NXT .L00000E94
    CFG getvar@PLT
    GRAPH_NXT getvar@PLT
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>3707 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r12', 'rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3714 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['r12', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3717 [None]movq      8(%rax,%r13), %r12
	 R['MEM', 'r13', 'rax', 'rip'] W['r12', 'rip']
	 D['r12', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3722 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3724 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3727 [sub]call      getvar@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'getvar@PLT' >]

<Symbol '.L00000E94' section='.text', address=3732>
    ENDER False -- NXT .L00000EA6
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV getvar@PLT
'X64_AMOCO.InstructionDEAD'>3732 [None]movq      %r12, %rdx
	 R['r12', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3735 [None]movslq    %eax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3738 [None]movl      $103, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3743 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3745 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00000EA6' section='.text', address=3750>
    ENDER True -- NXT None
    CFG .L00000E40
    GRAPH_NXT .L00000E40
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>3750 [jmp]jmp       .L00000E40
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000E40' section='.text', address=3648>]

<Symbol '.L00000EA8' section='.text', address=3752>
    ENDER True -- NXT None
    CFG .L000007B4
    GRAPH_NXT .L000007B4
    GRAPH_PRV .L00000780
'X64_AMOCO.InstructionDEAD'>3752 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r14', 'rax', 'rcx', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3759 [None]movq      8(%rbx), %rdx
	 R['MEM', 'rbx', 'rip'] W['rdx', 'rip']
	 D['r14', 'rcx', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3763 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['r14', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3766 [None]leaq      (%rdx,%rdx,2), %rdx
	 R['MEM', 'rdx', 'rip'] W['rdx', 'rip']
	 D['r14', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3770 [None]salq      $4, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['r14', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3774 [None]movq      24(%rax,%rdx), %rcx
	 R['MEM', 'rax', 'rdx', 'rip'] W['rcx', 'rip']
	 D['r14', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3779 [None]addq      32(%rax,%rdx), %rcx
	 R['MEM', 'rax', 'rcx', 'rdx', 'rip'] W['rcx', 'rflags', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3784 [None]addq      16(%rsp), %rax
	 R['MEM', 'rax', 'rip', 'rsp'] W['rax', 'rflags', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3789 [None]movq      %rcx, %r14
	 R['rcx', 'rip'] W['r14', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3792 [jmp]jmp       .L000007B4
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000007B4' section='.text', address=1972>]

<Symbol '.L00000ED5' section='.text', address=3797>
    ENDER False -- NXT .L00000EDD
    CFG .L00000BF8
    CFG .L00000EDD
    GRAPH_NXT .L00000BF8
    GRAPH_NXT .L00000EDD
    GRAPH_PRV .L00000970
'X64_AMOCO.InstructionDEAD'>3797 [None]cmpb      $67, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3799 [jcc]jne       .L00000BF8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00000EDD' section='.text', address=3805>
    ENDER False -- NXT .L00000EE4
    CFG pack_localvars@PLT
    GRAPH_NXT pack_localvars@PLT
    GRAPH_PRV .L00000ED5
'X64_AMOCO.InstructionDEAD'>3805 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3807 [sub]call      pack_localvars@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'pack_localvars@PLT' >]

<Symbol '.L00000EE4' section='.text', address=3812>
    ENDER False -- NXT .L00000EED
    CFG data_push@PLT
    GRAPH_NXT data_push@PLT
    GRAPH_PRV pack_localvars@PLT
'X64_AMOCO.InstructionDEAD'>3812 [None]movl      %eax, %edi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3814 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3816 [sub]call      data_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'data_push@PLT' >]

<Symbol '.L00000EED' section='.text', address=3821>
    ENDER False -- NXT .L00000F00
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV data_push@PLT
'X64_AMOCO.InstructionDEAD'>3821 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3826 [None]movl      %eax, %esi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3828 [None]movl      $67, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3833 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3835 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00000F00' section='.text', address=3840>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>3840 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00000F05' section='.text', address=3845>
    ENDER False -- NXT .L00000F11
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L000006B9
'X64_AMOCO.InstructionDEAD'>3845 [None]movl      $14, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3850 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3852 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00000F11' section='.text', address=3857>
    ENDER True -- NXT None
    CFG .L000006F5
    GRAPH_NXT .L000006F5
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>3857 [jmp]jmp       .L000006F5
	 R['rip'] W['rip']
	 D['rax', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000006F5' section='.text', address=1781>]

<Symbol '.L00000F16' section='.text', address=3862>
    ENDER False -- NXT .L00000F22
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L000007C3
'X64_AMOCO.InstructionDEAD'>3862 [None]movl      $14, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3867 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>3869 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00000F22' section='.text', address=3874>
    ENDER True -- NXT None
    CFG .L000007ED
    GRAPH_NXT .L000007ED
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>3874 [jmp]jmp       .L000007ED
	 R['rip'] W['rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000007ED' section='.text', address=2029>]

<Symbol '.L00000F27' section='.text', address=3879>
    ENDER False -- NXT .L00000F4D
    CFG str_defproto@PLT
    GRAPH_NXT str_defproto@PLT
    GRAPH_PRV .L00000B57
'X64_AMOCO.InstructionDEAD'>3879 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3886 [None]movq      16(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3891 [None]movq      %rbp, %rsi
	 R['rbp', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3894 [None]movq      232(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3902 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3905 [None]movq      24(%rax,%rcx), %rdx
	 R['MEM', 'rax', 'rcx', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3910 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3912 [sub]call      str_defproto@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'str_defproto@PLT' >]

<Symbol '.L00000F4D' section='.text', address=3917>
    ENDER False -- NXT .L00000F63
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV str_defproto@PLT
'X64_AMOCO.InstructionDEAD'>3917 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3922 [None]movl      $-1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3927 [None]movl      $74, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3932 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3934 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00000F63' section='.text', address=3939>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>3939 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00000F68' section='.text', address=3944>
    ENDER False -- NXT .L00000F78
    CFG strtol@PLT
    GRAPH_NXT strtol@PLT
    GRAPH_PRV .L00000B57
'X64_AMOCO.InstructionDEAD'>3944 [None]leaq      1(%rbp), %rdi
	 R['MEM', 'rbp', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3948 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3950 [None]movl      $10, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3955 [sub]call      strtol@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'strtol@PLT' >]

<Symbol '.L00000F78' section='.text', address=3960>
    ENDER False -- NXT .L00000F8C
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV strtol@PLT
'X64_AMOCO.InstructionDEAD'>3960 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3965 [None]movq      %rax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3968 [None]movl      $65, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3973 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3975 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00000F8C' section='.text', address=3980>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>3980 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00000F91' section='.text', address=3985>
    ENDER False -- NXT .L00000FA1
    CFG strtol@PLT
    GRAPH_NXT strtol@PLT
    GRAPH_PRV .L00000B57
'X64_AMOCO.InstructionDEAD'>3985 [None]leaq      1(%rbp), %rdi
	 R['MEM', 'rbp', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3989 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3991 [None]movl      $10, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>3996 [sub]call      strtol@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'strtol@PLT' >]

<Symbol '.L00000FA1' section='.text', address=4001>
    ENDER False -- NXT .L00000FB5
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV strtol@PLT
'X64_AMOCO.InstructionDEAD'>4001 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4006 [None]movq      %rax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4009 [None]movl      $69, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4014 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4016 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00000FB5' section='.text', address=4021>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>4021 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00000FBA' section='.text', address=4026>
    ENDER False -- NXT .L00000FCD
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L00000960
    GRAPH_PRV .L00000B87
'X64_AMOCO.InstructionDEAD'>4026 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4031 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4033 [None]movl      $79, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4038 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4040 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00000FCD' section='.text', address=4045>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>4045 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00000FD2' section='.text', address=4050>
    ENDER False -- NXT .L00000FE8
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L00000B87
'X64_AMOCO.InstructionDEAD'>4050 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4055 [None]movl      $-1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4060 [None]movl      $65, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4065 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4067 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00000FE8' section='.text', address=4072>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>4072 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00000FED' section='.text', address=4077>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV .L00000B87
'X64_AMOCO.InstructionDEAD'>4077 [None]movq      144(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4085 [None]movq      $-1, 288(%rsp,%rax,8)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4097 [None]addq      $1, %rax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4101 [None]movq      %rax, 144(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4109 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00001012' section='.text', address=4114>
    ENDER False -- NXT .L00001025
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L00000B87
'X64_AMOCO.InstructionDEAD'>4114 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4119 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4121 [None]movl      $65, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4126 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4128 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00001025' section='.text', address=4133>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>4133 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L0000102A' section='.text', address=4138>
    ENDER False -- NXT .L0000103B
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00000D0D
'X64_AMOCO.InstructionDEAD'>4138 [None]movq      %r14, %rdx
	 R['r14', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4141 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4143 [None]movl      $76, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4148 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4150 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L0000103B' section='.text', address=4155>
    ENDER True -- NXT None
    CFG .L00000D18
    GRAPH_NXT .L00000D18
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>4155 [jmp]jmp       .L00000D18
	 R['rip'] W['rip']
	 D['rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000D18' section='.text', address=3352>]

<Symbol '.L00001040' section='.text', address=4160>
    ENDER False -- NXT .L00001057
    CFG .L00001057
    GRAPH_NXT .L00001057
    GRAPH_PRV .L00000B40
    GRAPH_PRV .L00000B57
    GRAPH_PRV .L00000B70
    GRAPH_PRV .L00000B87
'X64_AMOCO.InstructionDEAD'>4160 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4167 [None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r8', 'rax', 'rdi', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4172 [None]movsbl    %sil, %edx
	 R['rip', 'rsi'] W['rdx', 'rip']
	 D['r8', 'rdi', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4176 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['r8', 'rdi', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4179 [None]movq      32(%rax), %rcx
	 R['MEM', 'rax', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rsi']
	 STACK:False:()

<Symbol '.L00001057' section='.text', address=4183>
    ENDER False -- NXT .L0000106E
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00001040
    GRAPH_PRV .L0000175E
'X64_AMOCO.InstructionDEAD'>4183 [None]movq      24(%rax), %r8
	 R['MEM', 'rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4187 [None]leaq      .LC29(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4194 [None]movl      $5, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4199 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4201 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L0000106E' section='.text', address=4206>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>4206 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00001073' section='.text', address=4211>
    ENDER False -- NXT .L00001080
    CFG checkdups@PLT
    GRAPH_NXT checkdups@PLT
    GRAPH_PRV .L0000074F
'X64_AMOCO.InstructionDEAD'>4211 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4214 [None]movq      %r12, %rsi
	 R['r12', 'rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4217 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4219 [sub]call      checkdups@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'checkdups@PLT' >]

<Symbol '.L00001080' section='.text', address=4224>
    ENDER False -- NXT .L0000109A
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV checkdups@PLT
'X64_AMOCO.InstructionDEAD'>4224 [None]movq      8(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['r13', 'rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4229 [None]movq      %r14, %rdx
	 R['r14', 'rip'] W['rdx', 'rip']
	 D['r13', 'rax', 'rdi', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4232 [None]movl      $100, %edi
	 R['rip'] W['rdi', 'rip']
	 D['r13', 'rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4237 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r13', 'rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4239 [None]movl      $1, %r13d
	 R['rip'] W['r13', 'rip']
	 D['r13']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4245 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L0000109A' section='.text', address=4250>
    ENDER False -- NXT .L000010A4
    CFG frame_push@PLT
    GRAPH_NXT frame_push@PLT
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>4250 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4253 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4255 [sub]call      frame_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'frame_push@PLT' >]

<Symbol '.L000010A4' section='.text', address=4260>
    ENDER True -- NXT None
    CFG .L000010E6
    GRAPH_NXT .L000010E6
    GRAPH_PRV frame_push@PLT
'X64_AMOCO.InstructionDEAD'>4260 [None]movq      %rbx, %rcx
	 R['rbx', 'rip'] W['rcx', 'rip']
	 D['r14', 'r15', 'r8', 'rax', 'rcx', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4263 [None]movq      s_lvar@GOTPCREL(%rip), %r15
	 R['MEM', 'rip'] W['r15', 'rip']
	 D['r14', 'r15', 'r8', 'rax', 'rbx', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4270 [None]movq      localvars@GOTPCREL(%rip), %r14
	 R['MEM', 'rip'] W['r14', 'rip']
	 D['r14', 'r8', 'rax', 'rbx', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4277 [None]movq      8(%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['r8', 'rax', 'rbx', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4282 [jmp]jmp       .L000010E6
	 R['rip'] W['rip']
	 D['r8', 'rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000010E6' section='.text', address=4326>]

<Symbol '.L000010BC' section='.text', size=4, address=4284>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>4284 [None].p2align 4,,10
'plasmasm.constants.P2Align'>4284 [None].p2align 3

<Symbol '.L000010C0' section='.text', address=4288>
    ENDER False -- NXT .L000010E6
    CFG .L00000BA9
    CFG .L000010E6
    GRAPH_NXT .L00000BA9
    GRAPH_NXT .L000010E6
    GRAPH_PRV .L000010E6
    GRAPH_PRV .L0000111E
    GRAPH_PRV .L00001169
'X64_AMOCO.InstructionDEAD'>4288 [None]movq      %r13, %rax
	 R['r13', 'rip'] W['rax', 'rip']
	 D['rax', 'rdx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4291 [None]movq      (%r12,%r13,8), %rdx
	 R['MEM', 'r12', 'r13', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4295 [None]addq      $1, %r13
	 R['r13', 'rip'] W['r13', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4299 [None]subq      %rbx, %rax
	 R['rax', 'rbx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4302 [None]addq      8(%r15), %rax
	 R['MEM', 'r15', 'rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4306 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4310 [None]addq      (%r14), %rax
	 R['MEM', 'r14', 'rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4313 [None]cmpq      %rbp, %r13
	 R['r13', 'rbp', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4316 [None]movq      %rdx, -8(%rax)
	 R['rax', 'rdx', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4320 [jcc]je        .L00000BA9
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000BA9' section='.text', address=2985>]

<Symbol '.L000010E6' section='.text', address=4326>
    ENDER False -- NXT .L00001104
    CFG .L000010C0
    CFG .L00001104
    GRAPH_NXT .L000010C0
    GRAPH_NXT .L00001104
    GRAPH_PRV .L000010A4
    GRAPH_PRV .L000010C0
'X64_AMOCO.InstructionDEAD'>4326 [None]movq      (%rcx,%r13,8), %r8
	 R['MEM', 'r13', 'rcx', 'rip'] W['r8', 'rip']
	 D['r8', 'rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4330 [None]movq      pari_tree@GOTPCREL(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4337 [None]leaq      (%r8,%r8,2), %rsi
	 R['MEM', 'r8', 'rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4341 [None]salq      $4, %rsi
	 R['rflags', 'rip', 'rsi'] W['rflags', 'rip', 'rsi']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4345 [None]movq      %rsi, %rax
	 R['rip', 'rsi'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4348 [None]addq      (%rdi), %rax
	 R['MEM', 'rax', 'rdi', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4351 [None]cmpl      $4, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4354 [jcc]jne       .L000010C0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000010C0' section='.text', address=4288>]

<Symbol '.L00001104' section='.text', address=4356>
    ENDER False -- NXT .L0000111E
    CFG is_node_zero@PLT
    GRAPH_NXT is_node_zero@PLT
    GRAPH_PRV .L000010E6
'X64_AMOCO.InstructionDEAD'>4356 [None]movq      16(%rax), %rdi
	 R['MEM', 'rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4360 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4362 [None]movq      %rcx, 24(%rsp)
	 R['rcx', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4367 [None]movq      %rsi, 16(%rsp)
	 R['rip', 'rsi', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4372 [None]movq      %r8, 8(%rsp)
	 R['r8', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4377 [sub]call      is_node_zero@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'is_node_zero@PLT' >]

<Symbol '.L0000111E' section='.text', address=4382>
    ENDER False -- NXT .L0000112C
    CFG .L000010C0
    CFG .L0000112C
    GRAPH_NXT .L000010C0
    GRAPH_NXT .L0000112C
    GRAPH_PRV is_node_zero@PLT
'X64_AMOCO.InstructionDEAD'>4382 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rcx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4384 [None]movq      16(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rcx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4389 [None]movq      24(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4394 [jcc]jne       .L000010C0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000010C0' section='.text', address=4288>]

<Symbol '.L0000112C' section='.text', address=4396>
    ENDER False -- NXT .L0000114F
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L0000111E
'X64_AMOCO.InstructionDEAD'>4396 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4403 [None]movl      $2, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4408 [None]movq      %rcx, 16(%rsp)
	 R['rcx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4413 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4416 [None]movq      16(%rax,%rsi), %rdi
	 R['MEM', 'rax', 'rip', 'rsi'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4421 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4426 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L0000114F' section='.text', address=4431>
    ENDER False -- NXT .L00001169
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>4431 [None]movq      8(%rsp), %r8
	 R['MEM', 'rip', 'rsp'] W['r8', 'rip']
	 D['r8', 'rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4436 [None]movq      %r13, %rsi
	 R['r13', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4439 [None]movl      $107, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4444 [None]subq      %rbp, %rsi
	 R['rbp', 'rip', 'rsi'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rdx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4447 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4449 [None]movq      %r8, %rdx
	 R['r8', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4452 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00001169' section='.text', address=4457>
    ENDER True -- NXT None
    CFG .L000010C0
    GRAPH_NXT .L000010C0
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>4457 [None]movq      16(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4462 [jmp]jmp       .L000010C0
	 R['rip'] W['rip']
	 D['rax', 'rdx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000010C0' section='.text', address=4288>]

<Symbol '.L00001173' section='.text', address=4467>
    ENDER False -- NXT .L0000117B
    CFG .L000011EF
    CFG .L0000117B
    GRAPH_NXT .L0000117B
    GRAPH_NXT .L000011EF
    GRAPH_PRV .L00000D18
'X64_AMOCO.InstructionDEAD'>4467 [None]cmpq      $0, 96(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4473 [jcc]jne       .L000011EF
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L000011EF' section='.text', address=4591>]

<Symbol '.L0000117B' section='.text', address=4475>
    ENDER False -- NXT .L00001198
    CFG .L0000172A
    CFG .L00001198
    GRAPH_NXT .L00001198
    GRAPH_NXT .L0000172A
    GRAPH_PRV .L00001173
'X64_AMOCO.InstructionDEAD'>4475 [None]movq      136(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4483 [None]movq      s_opcode@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4490 [None]subq      $-128, %rax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4494 [None]cmpq      %rax, 8(%rcx)
	 R['MEM', 'rax', 'rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4498 [jcc]jg        .L0000172A
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L0000172A' section='.text', address=5930>]

<Symbol '.L00001198' section='.text', address=4504>
    ENDER False -- NXT .L000011A8
    CFG compilecast@PLT
    GRAPH_NXT compilecast@PLT
    GRAPH_PRV .L0000117B
    GRAPH_PRV .L00001752
'X64_AMOCO.InstructionDEAD'>4504 [None]movl      104(%rsp), %edx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4508 [None]movq      40(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4513 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4515 [sub]call      compilecast@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilecast@PLT' >]

<Symbol '.L000011A8' section='.text', address=4520>
    ENDER True -- NXT None
    CFG .L00000BBB
    GRAPH_NXT .L00000BBB
    GRAPH_PRV compilecast@PLT
'X64_AMOCO.InstructionDEAD'>4520 [jmp]jmp       .L00000BBB
	 R['rip'] W['rip']
	 D['r12', 'r13', 'r14', 'r15', 'rax', 'rbp', 'rbx', 'rcx', 'rflags']
	 STACK:False:()
	 dst=[<Symbol '.L00000BBB' section='.text', address=3003>]

<Symbol '.L000011AD' section='.text', address=4525>
    ENDER True -- NXT None
    CFG .L000007B4
    GRAPH_NXT .L000007B4
    GRAPH_PRV .L0000078C
'X64_AMOCO.InstructionDEAD'>4525 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r14', 'rax', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4532 [None]movq      8(%rbx), %rdx
	 R['MEM', 'rbx', 'rip'] W['rdx', 'rip']
	 D['r14', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4536 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['r14']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4539 [None]leaq      (%rdx,%rdx,2), %rdx
	 R['MEM', 'rdx', 'rip'] W['rdx', 'rip']
	 D['r14']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4543 [None]salq      $4, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['r14']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4547 [None]movq      24(%rax,%rdx), %r14
	 R['MEM', 'rax', 'rdx', 'rip'] W['r14', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4552 [None]addq      16(%rsp), %rax
	 R['MEM', 'rax', 'rip', 'rsp'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4557 [jmp]jmp       .L000007B4
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000007B4' section='.text', address=1972>]

<Symbol '.L000011D2' section='.text', address=4562>
    ENDER False -- NXT .L000011EA
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L00000976
'X64_AMOCO.InstructionDEAD'>4562 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4567 [None]leaq      foo.20737(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4574 [None]movl      $65, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4579 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4581 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L000011EA' section='.text', address=4586>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>4586 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L000011EF' section='.text', address=4591>
    ENDER False -- NXT .L00001204
    CFG compilecast@PLT
    GRAPH_NXT compilecast@PLT
    GRAPH_PRV .L00001173
'X64_AMOCO.InstructionDEAD'>4591 [None]movl      104(%rsp), %edx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4595 [None]movq      40(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4600 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4605 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4607 [sub]call      compilecast@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilecast@PLT' >]

<Symbol '.L00001204' section='.text', address=4612>
    ENDER True -- NXT None
    CFG .L00000D44
    GRAPH_NXT .L00000D44
    GRAPH_PRV compilecast@PLT
'X64_AMOCO.InstructionDEAD'>4612 [jmp]jmp       .L00000D44
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000D44' section='.text', address=3396>]

<Symbol '.L00001209' section='.text', address=4617>
    ENDER False -- NXT .L0000122A
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L0000093B
'X64_AMOCO.InstructionDEAD'>4617 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4624 [None]movl      $2, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4629 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4634 [None]movb      $112, %r14b
	 R['r14', 'rip'] W['r14', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4637 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4640 [None]movq      16(%rax,%r13), %rdi
	 R['MEM', 'r13', 'rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>4645 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L0000122A' section='.text', address=4650>
    ENDER True -- NXT None
    CFG .L00000943
    GRAPH_NXT .L00000943
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>4650 [jmp]jmp       .L00000943
	 R['rip'] W['rip']
	 D['r12', 'rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000943' section='.text', address=2371>]

<Symbol '.L0000122F' section='.text', address=4655>
    ENDER False -- NXT .L00001255
    CFG cattovec@PLT
    GRAPH_NXT cattovec@PLT
    GRAPH_PRV .L00000CAC
'X64_AMOCO.InstructionDEAD'>4655 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r12', 'rax', 'rbp', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4660 [None]leaq      1(%rbx), %r12
	 R['MEM', 'rbx', 'rip'] W['r12', 'rip']
	 D['r12', 'rbp', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4664 [None]movl      $19, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rbp', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4669 [None]movq      $72057594037927935, %rbp
	 R['rip'] W['rbp', 'rip']
	 D['rbp', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4679 [None]movq      (%rax,%rbx,8), %rbx
	 R['MEM', 'rax', 'rbx', 'rip'] W['rbx', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4683 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4685 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4688 [sub]call      cattovec@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'cattovec@PLT' >]

<Symbol '.L00001255' section='.text', address=4693>
    ENDER False -- NXT .L00001269
    CFG .L00001B9B
    CFG .L00001269
    GRAPH_NXT .L00001269
    GRAPH_NXT .L00001B9B
    GRAPH_PRV cattovec@PLT
'X64_AMOCO.InstructionDEAD'>4693 [None]movslq    %eax, %r14
	 R['rax', 'rip'] W['r14', 'rip']
	 D['r14', 'rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4696 [None]andq      (%r14), %rbp
	 R['MEM', 'r14', 'rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4699 [None]leaq      -1(%rbp), %rcx
	 R['MEM', 'rbp', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4703 [None]cmpq      $1, %rcx
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4707 [jcc]je        .L00001B9B
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001B9B' section='.text', address=7067>]

<Symbol '.L00001269' section='.text', address=4713>
    ENDER False -- NXT .L00001289
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L00001255
'X64_AMOCO.InstructionDEAD'>4713 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r13', 'rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4715 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['r13', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4718 [None]movq      %rbp, %rsi
	 R['rbp', 'rip'] W['rip', 'rsi']
	 D['r13', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4721 [None]movl      $80, %edi
	 R['rip'] W['rdi', 'rip']
	 D['r13', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4726 [None]movq      %rcx, 168(%rsp)
	 R['rcx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r13']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4734 [None]movl      $1, %r13d
	 R['rip'] W['r13', 'rip']
	 D['r13']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4740 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00001289' section='.text', address=4745>
    ENDER False -- NXT .L00001296
    CFG .L000012CE
    CFG .L00001296
    GRAPH_NXT .L00001296
    GRAPH_NXT .L000012CE
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>4745 [None]movq      168(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4753 [None]testq     %rcx, %rcx
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4756 [jcc]jle       .L000012CE
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L000012CE' section='.text', address=4814>]

<Symbol '.L00001296' section='.text', address=4758>
    ENDER False -- NXT .L000012A0
    CFG .L000012A0
    GRAPH_NXT .L000012A0
    GRAPH_PRV .L00001289
'plasmasm.constants.P2Align'>4758 [None].p2align 4

<Symbol '.L000012A0' section='.text', address=4768>
    ENDER False -- NXT .L000012B3
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L00001296
    GRAPH_PRV .L000012C9
'X64_AMOCO.InstructionDEAD'>4768 [None]movq      (%r14,%r13,8), %rdi
	 R['MEM', 'r13', 'r14', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4772 [None]movl      $1, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4777 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4782 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L000012B3' section='.text', address=4787>
    ENDER False -- NXT .L000012C9
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>4787 [None]movq      %r13, %rsi
	 R['r13', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4790 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4792 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4795 [None]movl      $83, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4800 [None]addq      $1, %r13
	 R['r13', 'rip'] W['r13', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4804 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L000012C9' section='.text', address=4809>
    ENDER False -- NXT .L000012CE
    CFG .L000012A0
    CFG .L000012CE
    GRAPH_NXT .L000012A0
    GRAPH_NXT .L000012CE
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>4809 [None]cmpq      %rbp, %r13
	 R['r13', 'rbp', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4812 [jcc]jne       .L000012A0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L000012A0' section='.text', address=4768>]

<Symbol '.L000012CE' section='.text', address=4814>
    ENDER False -- NXT .L000012E2
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L00001289
    GRAPH_PRV .L000012C9
'X64_AMOCO.InstructionDEAD'>4814 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4817 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4822 [None]movl      $71, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4827 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4829 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L000012E2' section='.text', address=4834>
    ENDER False -- NXT .L000012EE
    CFG is_entry@PLT
    GRAPH_NXT is_entry@PLT
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>4834 [None]leaq      .LC28(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4841 [sub]call      is_entry@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'is_entry@PLT' >]

<Symbol '.L000012EE' section='.text', address=4846>
    ENDER False -- NXT .L00001300
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV is_entry@PLT
'X64_AMOCO.InstructionDEAD'>4846 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4849 [None]movq      %rax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4852 [None]movl      $95, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4857 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4859 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00001300' section='.text', address=4864>
    ENDER False -- NXT .L00001317
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L00001BAE
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>4864 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4867 [None]movl      $-1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rbx', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4872 [None]movl      $74, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rbx', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4877 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rbx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4879 [None]movq      %r12, %rbx
	 R['r12', 'rip'] W['rbx', 'rip']
	 D['rbx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4882 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00001317' section='.text', address=4887>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>4887 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L0000131C' section='.text', address=4892>
    ENDER False -- NXT .L00001333
    CFG .L00001C11
    CFG .L00001333
    GRAPH_NXT .L00001333
    GRAPH_NXT .L00001C11
    GRAPH_PRV .L00000CAC
'X64_AMOCO.InstructionDEAD'>4892 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rbp', 'rdi', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4897 [None]cmpb      $38, %r14b
	 R['r14', 'rip'] W['rflags', 'rip']
	 D['rbp', 'rdi', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4901 [None]leaq      1(%rbx), %rbp
	 R['MEM', 'rbx', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4905 [None]movq      (%rax,%rbx,8), %rdi
	 R['MEM', 'rax', 'rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4909 [jcc]je        .L00001C11
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001C11' section='.text', address=7185>]

<Symbol '.L00001333' section='.text', address=4915>
    ENDER False -- NXT .L0000133A
    CFG detag@PLT
    GRAPH_NXT detag@PLT
    GRAPH_PRV .L0000131C
    GRAPH_PRV .L00001C48
'X64_AMOCO.InstructionDEAD'>4915 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4917 [sub]call      detag@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'detag@PLT' >]

<Symbol '.L0000133A' section='.text', address=4922>
    ENDER False -- NXT .L00001347
    CFG getlvalue@PLT
    GRAPH_NXT getlvalue@PLT
    GRAPH_PRV detag@PLT
'X64_AMOCO.InstructionDEAD'>4922 [None]movslq    %eax, %rbx
	 R['rax', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4925 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4927 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4930 [sub]call      getlvalue@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'getlvalue@PLT' >]

<Symbol '.L00001347' section='.text', address=4935>
    ENDER False -- NXT .L00001354
    CFG getmvar@PLT
    GRAPH_NXT getmvar@PLT
    GRAPH_PRV getlvalue@PLT
'X64_AMOCO.InstructionDEAD'>4935 [None]movslq    %eax, %r12
	 R['rax', 'rip'] W['r12', 'rip']
	 D['r12', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4938 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4940 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4943 [sub]call      getmvar@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'getmvar@PLT' >]

<Symbol '.L00001354' section='.text', address=4948>
    ENDER False -- NXT .L00001377
    CFG .L00001BF7
    CFG .L00001377
    GRAPH_NXT .L00001377
    GRAPH_NXT .L00001BF7
    GRAPH_PRV getmvar@PLT
'X64_AMOCO.InstructionDEAD'>4948 [None]movslq    %eax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4951 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4958 [None]leaq      (%rbx,%rbx,2), %rdx
	 R['MEM', 'rbx', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4962 [None]salq      $4, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4966 [None]addq      (%rax), %rdx
	 R['MEM', 'rax', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4969 [None]cmpl      $16, (%rdx)
	 R['MEM', 'rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4972 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4977 [jcc]je        .L00001BF7
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001BF7' section='.text', address=7159>]

<Symbol '.L00001377' section='.text', address=4983>
    ENDER False -- NXT .L00001380
    CFG .L0000199F
    CFG .L00001380
    GRAPH_NXT .L00001380
    GRAPH_NXT .L0000199F
    GRAPH_PRV .L00001354
'X64_AMOCO.InstructionDEAD'>4983 [None]testq     %rsi, %rsi
	 R['rip', 'rsi'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4986 [jcc]je        .L0000199F
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L0000199F' section='.text', address=6559>]

<Symbol '.L00001380' section='.text', address=4992>
    ENDER False -- NXT .L0000138C
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L00001377
'X64_AMOCO.InstructionDEAD'>4992 [None]movl      $108, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4997 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>4999 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L0000138C' section='.text', address=5004>
    ENDER False -- NXT .L00001396
    CFG compilelvalue@PLT
    GRAPH_NXT compilelvalue@PLT
    GRAPH_PRV .L000019AE
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>5004 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5007 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5009 [sub]call      compilelvalue@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilelvalue@PLT' >]

<Symbol '.L00001396' section='.text', address=5014>
    ENDER False -- NXT .L000013A9
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV compilelvalue@PLT
'X64_AMOCO.InstructionDEAD'>5014 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5019 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5021 [None]movl      $88, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5026 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5028 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L000013A9' section='.text', address=5033>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV .L00001C0C
    GRAPH_PRV .L00001DCF
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>5033 [None]addq      $1, 96(%rsp)
	 R['MEM', 'rip', 'rsp'] W['MEM', 'rflags', 'rip']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5039 [None]movq      %rbp, %rbx
	 R['rbp', 'rip'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5042 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L000013B7' section='.text', address=5047>
    ENDER False -- NXT .L00001404
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L00000CAC
'X64_AMOCO.InstructionDEAD'>5047 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r12', 'rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5052 [None]leaq      1(%rbx), %r12
	 R['MEM', 'rbx', 'rip'] W['r12', 'rip']
	 D['r12', 'rbp', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5056 [None]movq      144(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rbp', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5064 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rbp', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5069 [None]movq      (%rax,%rbx,8), %rax
	 R['MEM', 'rax', 'rbx', 'rip'] W['rax', 'rip']
	 D['rbp', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5073 [None]movq      pari_tree@GOTPCREL(%rip), %rbx
	 R['MEM', 'rip'] W['rbx', 'rip']
	 D['rbp', 'rbx', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5080 [None]leaq      1(%rcx), %rbp
	 R['MEM', 'rcx', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5084 [None]leaq      (%rax,%rax,2), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5088 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5092 [None]addq      (%rbx), %rax
	 R['MEM', 'rax', 'rbx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5095 [None]movq      %r12, %rbx
	 R['r12', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5098 [None]movq      8(%rax), %rdx
	 R['MEM', 'rax', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5102 [None]movq      16(%rax), %rdi
	 R['MEM', 'rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5106 [None]movq      %rdx, 288(%rsp,%rcx,8)
	 R['rcx', 'rdx', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5114 [None]movl      $2, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5119 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L00001404' section='.text', address=5124>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>5124 [None]movq      %rbp, 144(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5132 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00001411' section='.text', address=5137>
    ENDER False -- NXT .L00001453
    CFG getcodepos@PLT
    GRAPH_NXT getcodepos@PLT
    GRAPH_PRV .L00000CAC
'X64_AMOCO.InstructionDEAD'>5137 [None]leaq      1(%rbx), %rax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5141 [None]movq      160(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5149 [None]movq      %rax, 184(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5157 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5162 [None]movq      (%rax,%rbx,8), %rax
	 R['MEM', 'rax', 'rbx', 'rip'] W['rax', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5166 [None]movq      %rax, 168(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5174 [None]movq      %rax, %rbx
	 R['rax', 'rip'] W['rbx', 'rip']
	 D['rbx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5177 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5179 [None]cmpb      $73, %r14b
	 R['r14', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5183 [None]setne     %al
	 R['rax', 'rflags', 'rip'] W['rax', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5186 [None]sall      $2, %eax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5189 [None]movl      %eax, 200(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5196 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5198 [sub]call      getcodepos@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'getcodepos@PLT' >]

<Symbol '.L00001453' section='.text', address=5203>
    ENDER False -- NXT .L00001462
    CFG .L00001A09
    CFG .L00001462
    GRAPH_NXT .L00001462
    GRAPH_NXT .L00001A09
    GRAPH_PRV getcodepos@PLT
'X64_AMOCO.InstructionDEAD'>5203 [None]cmpq      $0, 144(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5212 [jcc]jne       .L00001A09
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001A09' section='.text', address=6665>]

<Symbol '.L00001462' section='.text', address=5218>
    ENDER False -- NXT .L00001475
    CFG .L00001475
    GRAPH_NXT .L00001475
    GRAPH_PRV .L00001453
'X64_AMOCO.InstructionDEAD'>5218 [None]leaq      (%rbx,%rbx,2), %rax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5222 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5226 [None]movq      %rax, 176(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5234 [None]movq      %rax, %rcx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()

<Symbol '.L00001475' section='.text', address=5237>
    ENDER False -- NXT .L00001489
    CFG .L000019EC
    CFG .L00001489
    GRAPH_NXT .L00001489
    GRAPH_NXT .L000019EC
    GRAPH_PRV .L00001462
    GRAPH_PRV .L00001B8E
'X64_AMOCO.InstructionDEAD'>5237 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5244 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5247 [None]cmpl      $10, (%rax,%rcx)
	 R['MEM', 'rax', 'rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5251 [jcc]je        .L000019EC
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L000019EC' section='.text', address=6636>]

<Symbol '.L00001489' section='.text', address=5257>
    ENDER False -- NXT .L000014A6
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L00001475
'X64_AMOCO.InstructionDEAD'>5257 [None]movl      200(%rsp), %esi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5264 [None]movq      168(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5272 [None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5274 [None]cmpb      $73, %r14b
	 R['r14', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5278 [None]setne     %dl
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5281 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L000014A6' section='.text', address=5286>
    ENDER False -- NXT .L000014B5
    CFG getclosure@PLT
    GRAPH_NXT getclosure@PLT
    GRAPH_PRV .L00001A04
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>5286 [None]movq      160(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5294 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5296 [sub]call      getclosure@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'getclosure@PLT' >]

<Symbol '.L000014B5' section='.text', address=5301>
    ENDER False -- NXT .L000014BE
    CFG data_push@PLT
    GRAPH_NXT data_push@PLT
    GRAPH_PRV getclosure@PLT
'X64_AMOCO.InstructionDEAD'>5301 [None]movl      %eax, %edi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5303 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5305 [sub]call      data_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'data_push@PLT' >]

<Symbol '.L000014BE' section='.text', address=5310>
    ENDER False -- NXT .L000014D4
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV data_push@PLT
'X64_AMOCO.InstructionDEAD'>5310 [None]movq      168(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5318 [None]movl      %eax, %esi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5320 [None]movl      $67, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5325 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5327 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L000014D4' section='.text', address=5332>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>5332 [None]movq      184(%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbp', 'rbx', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5340 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L000014E1' section='.text', address=5345>
    ENDER False -- NXT .L000014EA
    CFG .L000014F9
    CFG .L000014EA
    GRAPH_NXT .L000014EA
    GRAPH_NXT .L000014F9
    GRAPH_PRV .L00000CAC
'X64_AMOCO.InstructionDEAD'>5345 [None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5347 [None]cmpq      80(%rsp), %rbx
	 R['MEM', 'rbx', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5352 [jcc]jl        .L000014F9
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L000014F9' section='.text', address=5369>]

<Symbol '.L000014EA' section='.text', address=5354>
    ENDER False -- NXT .L000014F9
    CFG .L000014F9
    GRAPH_NXT .L000014F9
    GRAPH_PRV .L000014E1
'X64_AMOCO.InstructionDEAD'>5354 [None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5356 [None]cmpq      72(%rsp), %rbx
	 R['MEM', 'rbx', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rax', 'rdi', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5361 [None]setl      %dl
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5364 [None]leaq      2(%rdx,%rdx), %rdx
	 R['MEM', 'rdx', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rflags', 'rsi']
	 STACK:False:()

<Symbol '.L000014F9' section='.text', address=5369>
    ENDER False -- NXT .L00001510
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L000014E1
    GRAPH_PRV .L000014EA
'X64_AMOCO.InstructionDEAD'>5369 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdi', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5374 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5379 [None]movq      (%rax,%rbx,8), %rdi
	 R['MEM', 'rax', 'rbx', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5383 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5387 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L00001510' section='.text', address=5392>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>5392 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00001515' section='.text', address=5397>
    ENDER False -- NXT .L0000151E
    CFG .L0000151E
    GRAPH_NXT .L0000151E
    GRAPH_PRV .L00000CAC
'X64_AMOCO.InstructionDEAD'>5397 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r13', 'rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5402 [None]movq      (%rax,%rbx,8), %r13
	 R['MEM', 'rax', 'rbx', 'rip'] W['r13', 'rip']
	 D['r13', 'rdi', 'rdx', 'rsi']
	 STACK:False:()

<Symbol '.L0000151E' section='.text', address=5406>
    ENDER False -- NXT .L00001531
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L00001515
    GRAPH_PRV .L00001536
'X64_AMOCO.InstructionDEAD'>5406 [None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5408 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5413 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5416 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5420 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L00001531' section='.text', address=5425>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>5425 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00001536' section='.text', address=5430>
    ENDER False -- NXT .L00001562
    CFG .L0000151E
    CFG .L00001562
    GRAPH_NXT .L0000151E
    GRAPH_NXT .L00001562
    GRAPH_PRV .L00000CAC
'X64_AMOCO.InstructionDEAD'>5430 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r12', 'r13', 'rax', 'rbp', 'rcx', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5437 [None]movq      (%rax), %rdx
	 R['MEM', 'rax', 'rip'] W['rdx', 'rip']
	 D['r12', 'r13', 'rbp', 'rcx', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5440 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r12', 'r13', 'rax', 'rbp', 'rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5445 [None]leaq      (%rax,%rbx,8), %rbp
	 R['MEM', 'rax', 'rbx', 'rip'] W['rbp', 'rip']
	 D['r12', 'r13', 'rbp', 'rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5449 [None]movq      (%rbp), %r13
	 R['MEM', 'rbp', 'rip'] W['r13', 'rip']
	 D['r12', 'r13', 'rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5453 [None]leaq      (%r13,%r13,2), %r12
	 R['MEM', 'r13', 'rip'] W['r12', 'rip']
	 D['r12', 'rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5458 [None]salq      $4, %r12
	 R['r12', 'rflags', 'rip'] W['r12', 'rflags', 'rip']
	 D['rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5462 [None]addq      %rdx, %r12
	 R['r12', 'rdx', 'rip'] W['r12', 'rflags', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5465 [None]movl      (%r12), %ecx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5469 [None]cmpl      $14, %ecx
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5472 [jcc]je        .L0000151E
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L0000151E' section='.text', address=5406>]

<Symbol '.L00001562' section='.text', address=5474>
    ENDER False -- NXT .L00001571
    CFG .L00001C51
    CFG .L00001571
    GRAPH_NXT .L00001571
    GRAPH_NXT .L00001C51
    GRAPH_PRV .L00001536
'X64_AMOCO.InstructionDEAD'>5474 [None]cmpq      $0, 152(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5483 [jcc]je        .L00001C51
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001C51' section='.text', address=7249>]

<Symbol '.L00001571' section='.text', address=5489>
    ENDER False -- NXT .L00001592
    CFG strchr@PLT
    GRAPH_NXT strchr@PLT
    GRAPH_PRV .L00001562
    GRAPH_PRV .L00001C51
'X64_AMOCO.InstructionDEAD'>5489 [None]movq      152(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5497 [None]movl      $10, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5502 [None]movl      %ecx, 200(%rsp)
	 R['rcx', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5509 [None]movq      %rdx, 168(%rsp)
	 R['rdx', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5517 [sub]call      strchr@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'strchr@PLT' >]

<Symbol '.L00001592' section='.text', address=5522>
    ENDER False -- NXT .L000015AD
    CFG .L00001DD4
    CFG .L000015AD
    GRAPH_NXT .L000015AD
    GRAPH_NXT .L00001DD4
    GRAPH_PRV strchr@PLT
'X64_AMOCO.InstructionDEAD'>5522 [None]testq     %rax, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['r14', 'rcx', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5525 [None]movq      %rax, %r14
	 R['rax', 'rip'] W['r14', 'rip']
	 D['r14', 'rcx', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5528 [None]movq      168(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rcx', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5536 [None]movl      200(%rsp), %ecx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5543 [jcc]je        .L00001DD4
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001DD4' section='.text', address=7636>]

<Symbol '.L000015AD' section='.text', address=5549>
    ENDER False -- NXT .L000015BE
    CFG .L000015CA
    CFG .L000015BE
    GRAPH_NXT .L000015BE
    GRAPH_NXT .L000015CA
    GRAPH_PRV .L00001592
    GRAPH_PRV .L00001DEA
'X64_AMOCO.InstructionDEAD'>5549 [None]leaq      1(%r14), %rax
	 R['MEM', 'r14', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5553 [None]cmpl      $13, %ecx
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5556 [None]movq      %rax, 152(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5564 [jcc]jne       .L000015CA
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L000015CA' section='.text', address=5578>]

<Symbol '.L000015BE' section='.text', address=5566>
    ENDER False -- NXT .L000015CA
    CFG .L00001C67
    CFG .L000015CA
    GRAPH_NXT .L000015CA
    GRAPH_NXT .L00001C67
    GRAPH_PRV .L000015AD
'X64_AMOCO.InstructionDEAD'>5566 [None]cmpq      $0, 8(%r12)
	 R['MEM', 'r12', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5572 [jcc]je        .L00001C67
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001C67' section='.text', address=7271>]

<Symbol '.L000015CA' section='.text', address=5578>
    ENDER False -- NXT .L000015D9
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L000015AD
    GRAPH_PRV .L000015BE
'X64_AMOCO.InstructionDEAD'>5578 [None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5580 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5583 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5588 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L000015D9' section='.text', address=5593>
    ENDER False -- NXT .L000015F9
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>5593 [None]movq      40(%rsp), %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip']
	 D['r14', 'rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5598 [None]movq      152(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5606 [None]movl      $65, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5611 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5613 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5617 [None]movq      %r14, %rdx
	 R['r14', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5620 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L000015F9' section='.text', address=5625>
    ENDER False -- NXT .L00001605
    CFG is_entry@PLT
    GRAPH_NXT is_entry@PLT
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>5625 [None]leaq      .LC25(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5632 [sub]call      is_entry@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'is_entry@PLT' >]

<Symbol '.L00001605' section='.text', address=5637>
    ENDER False -- NXT .L00001617
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV is_entry@PLT
'X64_AMOCO.InstructionDEAD'>5637 [None]movq      %r14, %rdx
	 R['r14', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5640 [None]movq      %rax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5643 [None]movl      $96, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5648 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5650 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00001617' section='.text', address=5655>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>5655 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L0000161C' section='.text', address=5660>
    ENDER False -- NXT .L00001633
    CFG getvar@PLT
    GRAPH_NXT getvar@PLT
    GRAPH_PRV .L00000CAC
'X64_AMOCO.InstructionDEAD'>5660 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rbp', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5665 [None]leaq      1(%rbx), %rbp
	 R['MEM', 'rbx', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5669 [None]movq      (%rax,%rbx,8), %rbx
	 R['MEM', 'rax', 'rbx', 'rip'] W['rbx', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5673 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5675 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5678 [sub]call      getvar@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'getvar@PLT' >]

<Symbol '.L00001633' section='.text', address=5683>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV getvar@PLT
'X64_AMOCO.InstructionDEAD'>5683 [None]movq      144(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5691 [None]movq      %rbx, 288(%rsp,%rax,8)
	 R['rax', 'rbx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5699 [None]addq      $1, %rax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rbx', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5703 [None]movq      %rbp, %rbx
	 R['rbp', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5706 [None]movq      %rax, 144(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5714 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00001657' section='.text', address=5719>
    ENDER False -- NXT .L0000166B
    CFG getlvalue@PLT
    GRAPH_NXT getlvalue@PLT
    GRAPH_PRV .L00000CAC
'X64_AMOCO.InstructionDEAD'>5719 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rbp', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5724 [None]leaq      (%rax,%rbx,8), %rbp
	 R['MEM', 'rax', 'rbx', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5728 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5730 [None]movq      (%rbp), %rdi
	 R['MEM', 'rbp', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5734 [sub]call      getlvalue@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'getlvalue@PLT' >]

<Symbol '.L0000166B' section='.text', address=5739>
    ENDER False -- NXT .L00001678
    CFG getmvar@PLT
    GRAPH_NXT getmvar@PLT
    GRAPH_PRV getlvalue@PLT
'X64_AMOCO.InstructionDEAD'>5739 [None]movslq    %eax, %r12
	 R['rax', 'rip'] W['r12', 'rip']
	 D['r12', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5742 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5744 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5747 [sub]call      getmvar@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'getmvar@PLT' >]

<Symbol '.L00001678' section='.text', address=5752>
    ENDER False -- NXT .L00001689
    CFG .L0000195B
    CFG .L00001689
    GRAPH_NXT .L00001689
    GRAPH_NXT .L0000195B
    GRAPH_PRV getmvar@PLT
'X64_AMOCO.InstructionDEAD'>5752 [None]movslq    %eax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5755 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5760 [None]testq     %rsi, %rsi
	 R['rip', 'rsi'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5763 [jcc]je        .L0000195B
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L0000195B' section='.text', address=6491>]

<Symbol '.L00001689' section='.text', address=5769>
    ENDER False -- NXT .L00001695
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L00001678
'X64_AMOCO.InstructionDEAD'>5769 [None]movl      $121, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5774 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5776 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00001695' section='.text', address=5781>
    ENDER False -- NXT .L000016AC
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L0000196A
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>5781 [None]movq      (%rbp), %rdi
	 R['MEM', 'rbp', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5785 [None]movl      $2, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5790 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5795 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5799 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L000016AC' section='.text', address=5804>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>5804 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L000016B1' section='.text', address=5809>
    ENDER False -- NXT .L000016CD
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L00000CAC
'X64_AMOCO.InstructionDEAD'>5809 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rbp', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5814 [None]leaq      1(%rbx), %rbp
	 R['MEM', 'rbx', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5818 [None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5820 [None]movl      $3, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5825 [None]movq      (%rax,%rbx,8), %rdi
	 R['MEM', 'rax', 'rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5829 [None]movq      %rbp, %rbx
	 R['rbp', 'rip'] W['rbx', 'rip']
	 D['rbx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5832 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L000016CD' section='.text', address=5837>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>5837 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L000016D2' section='.text', address=5842>
    ENDER False -- NXT .L000016FD
    CFG .L00001BB3
    CFG .L000016FD
    GRAPH_NXT .L000016FD
    GRAPH_NXT .L00001BB3
    GRAPH_PRV .L00000CAC
'X64_AMOCO.InstructionDEAD'>5842 [None]movq      24(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5847 [None]leaq      1(%rbx), %rbp
	 R['MEM', 'rbx', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rcx', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5851 [None]movq      (%rax,%rbx,8), %rdi
	 R['MEM', 'rax', 'rbx', 'rip'] W['rdi', 'rip']
	 D['rcx', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5855 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5862 [None]leaq      (%rdi,%rdi,2), %rdx
	 R['MEM', 'rdi', 'rip'] W['rdx', 'rip']
	 D['rcx', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5866 [None]movq      (%rax), %rcx
	 R['MEM', 'rax', 'rip'] W['rcx', 'rip']
	 D['rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5869 [None]salq      $4, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5873 [None]addq      %rcx, %rdx
	 R['rcx', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5876 [None]cmpl      $16, (%rdx)
	 R['MEM', 'rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5879 [jcc]je        .L00001BB3
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001BB3' section='.text', address=7091>]

<Symbol '.L000016FD' section='.text', address=5885>
    ENDER False -- NXT .L0000170C
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L000016D2
'X64_AMOCO.InstructionDEAD'>5885 [None]movl      $2, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5890 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5895 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L0000170C' section='.text', address=5900>
    ENDER False -- NXT .L00001711
    CFG .L00001711
    GRAPH_NXT .L00001711
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>5900 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()

<Symbol '.L00001711' section='.text', address=5905>
    ENDER False -- NXT .L00001722
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L0000170C
    GRAPH_PRV .L00001BEF
'X64_AMOCO.InstructionDEAD'>5905 [None]movl      $-1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5910 [None]movl      $74, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5915 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5917 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00001722' section='.text', address=5922>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>5922 [None]movq      %rbp, %rbx
	 R['rbp', 'rip'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5925 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L0000172A' section='.text', address=5930>
    ENDER False -- NXT .L00001741
    CFG op_insert_loc@PLT
    GRAPH_NXT op_insert_loc@PLT
    GRAPH_PRV .L0000117B
'X64_AMOCO.InstructionDEAD'>5930 [None]movq      136(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5938 [None]movq      %r14, %rcx
	 R['r14', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5941 [None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5943 [None]movb      $118, %sil
	 R['rip', 'rsi'] W['rip', 'rsi']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5946 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5948 [sub]call      op_insert_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_insert_loc@PLT' >]

<Symbol '.L00001741' section='.text', address=5953>
    ENDER False -- NXT .L00001752
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV op_insert_loc@PLT
'X64_AMOCO.InstructionDEAD'>5953 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5955 [None]movq      %r14, %rdx
	 R['r14', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5958 [None]movl      $119, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5963 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5965 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00001752' section='.text', address=5970>
    ENDER True -- NXT None
    CFG .L00001198
    GRAPH_NXT .L00001198
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>5970 [None]movl      220(%rsp), %esi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5977 [jmp]jmp       .L00001198
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:False:()
	 dst=[<Symbol '.L00001198' section='.text', address=4504>]

<Symbol '.L0000175E' section='.text', address=5982>
    ENDER True -- NXT None
    CFG .L00001057
    GRAPH_NXT .L00001057
    GRAPH_PRV .L00000CA0
    GRAPH_PRV .L00000CAC
'X64_AMOCO.InstructionDEAD'>5982 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5989 [None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r8', 'rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5994 [None]movsbl    %r14b, %edx
	 R['r14', 'rip'] W['rdx', 'rip']
	 D['r8', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>5998 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['r8', 'rdi', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6001 [None]movq      32(%rax), %rcx
	 R['MEM', 'rax', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6005 [jmp]jmp       .L00001057
	 R['rip'] W['rip']
	 D['r8', 'rdi', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00001057' section='.text', address=4183>]

<Symbol '.L0000177A' section='.text', address=6010>
    ENDER False -- NXT .L0000178B
    CFG is_func_named@PLT
    GRAPH_NXT is_func_named@PLT
    GRAPH_PRV .L00000DEC
'X64_AMOCO.InstructionDEAD'>6010 [None]leaq      .LC14(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6017 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6019 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6022 [sub]call      is_func_named@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'is_func_named@PLT' >]

<Symbol '.L0000178B' section='.text', address=6027>
    ENDER False -- NXT .L00001793
    CFG .L0000186C
    CFG .L00001793
    GRAPH_NXT .L00001793
    GRAPH_NXT .L0000186C
    GRAPH_PRV is_func_named@PLT
'X64_AMOCO.InstructionDEAD'>6027 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6029 [jcc]jne       .L0000186C
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L0000186C' section='.text', address=6252>]

<Symbol '.L00001793' section='.text', address=6035>
    ENDER False -- NXT .L000017A4
    CFG .L00001853
    CFG .L000017A4
    GRAPH_NXT .L000017A4
    GRAPH_NXT .L00001853
    GRAPH_PRV .L0000178B
'X64_AMOCO.InstructionDEAD'>6035 [None]movq      compatible@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6042 [None]cmpq      $3, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6046 [jcc]je        .L00001853
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00001853' section='.text', address=6227>]

<Symbol '.L000017A4' section='.text', address=6052>
    ENDER False -- NXT .L000017AE
    CFG .L00001CF0
    CFG .L000017AE
    GRAPH_NXT .L000017AE
    GRAPH_NXT .L00001CF0
    GRAPH_PRV .L00001793
    GRAPH_PRV .L00001864
'X64_AMOCO.InstructionDEAD'>6052 [None]cmpq      $33, %r12
	 R['r12', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6056 [jcc]je        .L00001CF0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00001CF0' section='.text', address=7408>]

<Symbol '.L000017AE' section='.text', address=6062>
    ENDER False -- NXT .L000017B8
    CFG .L00001CA3
    CFG .L000017B8
    GRAPH_NXT .L000017B8
    GRAPH_NXT .L00001CA3
    GRAPH_PRV .L000017A4
'X64_AMOCO.InstructionDEAD'>6062 [None]cmpq      $37, %r12
	 R['r12', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6066 [jcc]je        .L00001CA3
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00001CA3' section='.text', address=7331>]

<Symbol '.L000017B8' section='.text', address=6072>
    ENDER False -- NXT .L000017C4
    CFG .L000019B3
    CFG .L000017C4
    GRAPH_NXT .L000017C4
    GRAPH_NXT .L000019B3
    GRAPH_PRV .L000017AE
'X64_AMOCO.InstructionDEAD'>6072 [None]cmpq      $2, 8(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6078 [jcc]jne       .L000019B3
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000019B3' section='.text', address=6579>]

<Symbol '.L000017C4' section='.text', address=6084>
    ENDER False -- NXT .L000017CE
    CFG .L000019B3
    CFG .L000017CE
    GRAPH_NXT .L000017CE
    GRAPH_NXT .L000019B3
    GRAPH_PRV .L000017B8
'X64_AMOCO.InstructionDEAD'>6084 [None]cmpq      $18, %r12
	 R['r12', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6088 [jcc]jne       .L000019B3
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000019B3' section='.text', address=6579>]

<Symbol '.L000017CE' section='.text', address=6094>
    ENDER False -- NXT .L000017F6
    CFG .L00000540
    CFG .L000017F6
    GRAPH_NXT .L00000540
    GRAPH_NXT .L000017F6
    GRAPH_PRV .L000017C4
'X64_AMOCO.InstructionDEAD'>6094 [None]movq      16(%rbx), %rax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6098 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6105 [None]movq      $2, 8(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6114 [None]leaq      (%rax,%rax,2), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6118 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6122 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6125 [None]cmpl      $14, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6128 [jcc]jne       .L00000540
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000540' section='.text', address=1344>]

<Symbol '.L000017F6' section='.text', address=6134>
    ENDER False -- NXT .L00001802
    CFG is_entry@PLT
    GRAPH_NXT is_entry@PLT
    GRAPH_PRV .L000017CE
'X64_AMOCO.InstructionDEAD'>6134 [None]leaq      .LC18(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6141 [sub]call      is_entry@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'is_entry@PLT' >]

<Symbol '.L00001802' section='.text', address=6146>
    ENDER True -- NXT None
    CFG .L00000540
    GRAPH_NXT .L00000540
    GRAPH_PRV is_entry@PLT
'X64_AMOCO.InstructionDEAD'>6146 [None]movq      %rax, 56(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6151 [jmp]jmp       .L00000540
	 R['rip'] W['rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000540' section='.text', address=1344>]

<Symbol '.L0000180C' section='.text', size=4, address=6156>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>6156 [None].p2align 4,,10
'plasmasm.constants.P2Align'>6156 [None].p2align 3

<Symbol '.L00001810' section='.text', address=6160>
    ENDER False -- NXT .L00001830
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L00000540
'X64_AMOCO.InstructionDEAD'>6160 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 232)
'X64_AMOCO.InstructionDEAD'>6167 [None]movq      16(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 232)
'X64_AMOCO.InstructionDEAD'>6172 [None]leaq      .LC20(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 232)
'X64_AMOCO.InstructionDEAD'>6179 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 232)
'X64_AMOCO.InstructionDEAD'>6182 [None]movq      24(%rax,%rcx), %rsi
	 R['MEM', 'rax', 'rcx', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 232)
'X64_AMOCO.InstructionDEAD'>6187 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 232)
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00001830' section='.text', address=6192>
    ENDER True -- NXT None
    CFG .L0000055C
    GRAPH_NXT .L0000055C
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>6192 [jmp]jmp       .L0000055C
	 R['rip'] W['rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104, 232)
	 dst=[<Symbol '.L0000055C' section='.text', address=1372>]

<Symbol '.L00001835' section='.text', address=6197>
    ENDER False -- NXT .L00001845
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L00000C3E
'X64_AMOCO.InstructionDEAD'>6197 [None]movq      24(%rax), %rsi
	 R['MEM', 'rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6201 [None]leaq      .LC22(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6208 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00001845' section='.text', address=6213>
    ENDER True -- NXT None
    CFG .L00000CA0
    GRAPH_NXT .L00000CA0
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>6213 [None]movzbl    219(%rsp), %r14d
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip']
	 D['r14', 'rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6222 [jmp]jmp       .L00000CA0
	 R['rip'] W['rip']
	 D['rax', 'rflags']
	 STACK:False:()
	 dst=[<Symbol '.L00000CA0' section='.text', address=3232>]

<Symbol '.L00001853' section='.text', address=6227>
    ENDER False -- NXT .L00001864
    CFG is_func_named@PLT
    GRAPH_NXT is_func_named@PLT
    GRAPH_PRV .L00001793
'X64_AMOCO.InstructionDEAD'>6227 [None]leaq      .LC15(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6234 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6236 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6239 [sub]call      is_func_named@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'is_func_named@PLT' >]

<Symbol '.L00001864' section='.text', address=6244>
    ENDER False -- NXT .L0000186C
    CFG .L000017A4
    CFG .L0000186C
    GRAPH_NXT .L000017A4
    GRAPH_NXT .L0000186C
    GRAPH_PRV is_func_named@PLT
'X64_AMOCO.InstructionDEAD'>6244 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6246 [jcc]je        .L000017A4
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L000017A4' section='.text', address=6052>]

<Symbol '.L0000186C' section='.text', address=6252>
    ENDER False -- NXT .L00001874
    CFG .L0000189C
    CFG .L00001874
    GRAPH_NXT .L00001874
    GRAPH_NXT .L0000189C
    GRAPH_PRV .L0000178B
    GRAPH_PRV .L00001864
'X64_AMOCO.InstructionDEAD'>6252 [None]cmpq      $1, 8(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6258 [jcc]je        .L0000189C
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L0000189C' section='.text', address=6300>]

<Symbol '.L00001874' section='.text', address=6260>
    ENDER False -- NXT .L0000189C
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L0000186C
'X64_AMOCO.InstructionDEAD'>6260 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6267 [None]movq      16(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6272 [None]leaq      .LC16(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6279 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6282 [None]movq      32(%rax), %rdx
	 R['MEM', 'rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6286 [None]movq      24(%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6290 [None]leaq      -1(%rax,%rdx), %rsi
	 R['MEM', 'rax', 'rdx', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6295 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L0000189C' section='.text', address=6300>
    ENDER False -- NXT .L000018A8
    CFG is_entry@PLT
    GRAPH_NXT is_entry@PLT
    GRAPH_PRV .L0000186C
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>6300 [None]leaq      .LC17(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6307 [sub]call      is_entry@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'is_entry@PLT' >]

<Symbol '.L000018A8' section='.text', address=6312>
    ENDER False -- NXT .L000018CC
    CFG .L00000540
    CFG .L000018CC
    GRAPH_NXT .L00000540
    GRAPH_NXT .L000018CC
    GRAPH_PRV is_entry@PLT
'X64_AMOCO.InstructionDEAD'>6312 [None]movq      %rax, 56(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6317 [None]movq      8(%rbx), %rax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6321 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6328 [None]leaq      (%rax,%rax,2), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6332 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6336 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6339 [None]cmpl      $18, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6342 [jcc]jne       .L00000540
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000540' section='.text', address=1344>]

<Symbol '.L000018CC' section='.text', address=6348>
    ENDER False -- NXT .L000018D7
    CFG .L00000540
    CFG .L000018D7
    GRAPH_NXT .L00000540
    GRAPH_NXT .L000018D7
    GRAPH_PRV .L000018A8
'X64_AMOCO.InstructionDEAD'>6348 [None]cmpq      $18, 8(%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6353 [jcc]jne       .L00000540
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000540' section='.text', address=1344>]

<Symbol '.L000018D7' section='.text', address=6359>
    ENDER False -- NXT .L000018E7
    CFG listtogen@PLT
    GRAPH_NXT listtogen@PLT
    GRAPH_PRV .L000018CC
'X64_AMOCO.InstructionDEAD'>6359 [None]movq      16(%rax), %rdi
	 R['MEM', 'rax', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6363 [None]movl      $11, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6368 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6370 [sub]call      listtogen@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'listtogen@PLT' >]

<Symbol '.L000018E7' section='.text', address=6375>
    ENDER False -- NXT .L00001916
    CFG first_safe_arg@PLT
    GRAPH_NXT first_safe_arg@PLT
    GRAPH_PRV listtogen@PLT
'X64_AMOCO.InstructionDEAD'>6375 [None]cltq      
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rbx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6377 [None]movl      $3, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rbx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6382 [None]movq      %rax, %rbx
	 R['rax', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6385 [None]movq      %rax, 24(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6390 [None]movq      $72057594037927935, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6400 [None]andq      (%rbx), %rax
	 R['MEM', 'rax', 'rbx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6403 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6406 [None]subq      $1, %rax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6410 [None]movq      %rax, 8(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6415 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6417 [sub]call      first_safe_arg@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'first_safe_arg@PLT' >]

<Symbol '.L00001916' section='.text', address=6422>
    ENDER False -- NXT .L0000192C
    CFG first_safe_arg@PLT
    GRAPH_NXT first_safe_arg@PLT
    GRAPH_PRV first_safe_arg@PLT
'X64_AMOCO.InstructionDEAD'>6422 [None]cltq      
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6424 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6429 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6432 [None]movq      %rax, 72(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6437 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6439 [sub]call      first_safe_arg@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'first_safe_arg@PLT' >]

<Symbol '.L0000192C' section='.text', address=6444>
    ENDER True -- NXT None
    CFG .L00000540
    GRAPH_NXT .L00000540
    GRAPH_PRV first_safe_arg@PLT
'X64_AMOCO.InstructionDEAD'>6444 [None]cltq      
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6446 [None]movq      %rax, 80(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6451 [jmp]jmp       .L00000540
	 R['rip'] W['rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000540' section='.text', address=1344>]

<Symbol '.L00001938' section='.text', size=8, address=6456>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>6456 [None].p2align 4

<Symbol '.L00001940' section='.text', address=6464>
    ENDER False -- NXT .L00001956
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00000A22
'X64_AMOCO.InstructionDEAD'>6464 [None]movq      112(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6469 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6474 [None]movl      $80, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6479 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6481 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00001956' section='.text', address=6486>
    ENDER True -- NXT None
    CFG .L00000B1A
    GRAPH_NXT .L00000B1A
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>6486 [jmp]jmp       .L00000B1A
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000B1A' section='.text', address=2842>]

<Symbol '.L0000195B' section='.text', address=6491>
    ENDER False -- NXT .L0000196A
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L00001678
'X64_AMOCO.InstructionDEAD'>6491 [None]movq      %r12, %rsi
	 R['r12', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6494 [None]movl      $120, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6499 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6501 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L0000196A' section='.text', address=6506>
    ENDER True -- NXT None
    CFG .L00001695
    GRAPH_NXT .L00001695
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>6506 [jmp]jmp       .L00001695
	 R['rip'] W['rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00001695' section='.text', address=5781>]

<Symbol '.L0000196F' section='.text', address=6511>
    ENDER False -- NXT .L0000197C
    CFG checkdups@PLT
    GRAPH_NXT checkdups@PLT
    GRAPH_PRV .L0000071C
'X64_AMOCO.InstructionDEAD'>6511 [None]movq      %r12, %rsi
	 R['r12', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6514 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6517 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6519 [sub]call      checkdups@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'checkdups@PLT' >]

<Symbol '.L0000197C' section='.text', address=6524>
    ENDER False -- NXT .L00001990
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV checkdups@PLT
'X64_AMOCO.InstructionDEAD'>6524 [None]movq      8(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6529 [None]movq      %r14, %rdx
	 R['r14', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6532 [None]movl      $100, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6537 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6539 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00001990' section='.text', address=6544>
    ENDER False -- NXT .L0000199A
    CFG frame_push@PLT
    GRAPH_NXT frame_push@PLT
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>6544 [None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6547 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6549 [sub]call      frame_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'frame_push@PLT' >]

<Symbol '.L0000199A' section='.text', address=6554>
    ENDER True -- NXT None
    CFG .L00000BA9
    GRAPH_NXT .L00000BA9
    GRAPH_PRV frame_push@PLT
'X64_AMOCO.InstructionDEAD'>6554 [jmp]jmp       .L00000BA9
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000BA9' section='.text', address=2985>]

<Symbol '.L0000199F' section='.text', address=6559>
    ENDER False -- NXT .L000019AE
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L00001377
'X64_AMOCO.InstructionDEAD'>6559 [None]movq      %r12, %rsi
	 R['r12', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6562 [None]movl      $104, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6567 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6569 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L000019AE' section='.text', address=6574>
    ENDER True -- NXT None
    CFG .L0000138C
    GRAPH_NXT .L0000138C
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>6574 [jmp]jmp       .L0000138C
	 R['rip'] W['rip']
	 D['rax', 'rdi']
	 STACK:False:()
	 dst=[<Symbol '.L0000138C' section='.text', address=5004>]

<Symbol '.L000019B3' section='.text', address=6579>
    ENDER False -- NXT .L000019BD
    CFG .L00000540
    CFG .L000019BD
    GRAPH_NXT .L00000540
    GRAPH_NXT .L000019BD
    GRAPH_PRV .L000017B8
    GRAPH_PRV .L000017C4
'X64_AMOCO.InstructionDEAD'>6579 [None]cmpq      $19, %r12
	 R['r12', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6583 [jcc]jne       .L00000540
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000540' section='.text', address=1344>]

<Symbol '.L000019BD' section='.text', address=6589>
    ENDER False -- NXT .L000019E7
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L000019B3
'X64_AMOCO.InstructionDEAD'>6589 [None]movq      8(%rbx), %rax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6593 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6600 [None]leaq      .LC19(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6607 [None]leaq      (%rax,%rax,2), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6611 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6615 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6618 [None]movq      32(%rax), %rsi
	 R['MEM', 'rax', 'rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6622 [None]addq      24(%rax), %rsi
	 R['MEM', 'rax', 'rip', 'rsi'] W['rflags', 'rip', 'rsi']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>6626 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L000019E7' section='.text', address=6631>
    ENDER True -- NXT None
    CFG .L00000540
    GRAPH_NXT .L00000540
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>6631 [jmp]jmp       .L00000540
	 R['rip'] W['rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000540' section='.text', address=1344>]

<Symbol '.L000019EC' section='.text', address=6636>
    ENDER False -- NXT .L00001A04
    CFG compilecast@PLT
    GRAPH_NXT compilecast@PLT
    GRAPH_PRV .L00001475
'X64_AMOCO.InstructionDEAD'>6636 [None]movl      200(%rsp), %edx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6643 [None]movq      168(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6651 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6653 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6655 [sub]call      compilecast@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilecast@PLT' >]

<Symbol '.L00001A04' section='.text', address=6660>
    ENDER True -- NXT None
    CFG .L000014A6
    GRAPH_NXT .L000014A6
    GRAPH_PRV compilecast@PLT
'X64_AMOCO.InstructionDEAD'>6660 [jmp]jmp       .L000014A6
	 R['rip'] W['rip']
	 D['rax', 'rdi']
	 STACK:False:()
	 dst=[<Symbol '.L000014A6' section='.text', address=5286>]

<Symbol '.L00001A09' section='.text', address=6665>
    ENDER False -- NXT .L00001A40
    CFG .L00001A5C
    CFG .L00001A40
    GRAPH_NXT .L00001A40
    GRAPH_NXT .L00001A5C
    GRAPH_PRV .L00001453
'X64_AMOCO.InstructionDEAD'>6665 [None]movq      144(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rbp', 'rbx', 'rcx', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6673 [None]movq      bot@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rbp', 'rbx', 'rcx', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6680 [None]leaq      1(%rax), %rdx
	 R['MEM', 'rax', 'rip'] W['rdx', 'rip']
	 D['rbp', 'rbx', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6684 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rbp', 'rbx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6691 [None]leaq      0(,%rdx,8), %rbx
	 R['MEM', 'rdx', 'rip'] W['rbx', 'rip']
	 D['rbp', 'rbx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6699 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rbp', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6702 [None]movq      %rax, %rbp
	 R['rax', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6705 [None]subq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6708 [None]subq      %rbx, %rbp
	 R['rbp', 'rbx', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6711 [None]shrq      $3, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6715 [None]cmpq      %rax, %rdx
	 R['rax', 'rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6718 [jcc]jbe       .L00001A5C
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001A5C' section='.text', address=6748>]

<Symbol '.L00001A40' section='.text', address=6720>
    ENDER False -- NXT .L00001A54
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00001A09
'X64_AMOCO.InstructionDEAD'>6720 [None]movl      $14, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6725 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6727 [None]movq      %rdx, 176(%rsp)
	 R['rdx', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6735 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00001A54' section='.text', address=6740>
    ENDER False -- NXT .L00001A5C
    CFG .L00001A5C
    GRAPH_NXT .L00001A5C
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>6740 [None]movq      176(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rflags']
	 STACK:False:()

<Symbol '.L00001A5C' section='.text', address=6748>
    ENDER False -- NXT .L00001A79
    CFG .L00001D38
    CFG .L00001A79
    GRAPH_NXT .L00001A79
    GRAPH_NXT .L00001D38
    GRAPH_PRV .L00001A09
    GRAPH_PRV .L00001A54
'X64_AMOCO.InstructionDEAD'>6748 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6755 [None]movq      %rbp, (%rax)
	 R['rax', 'rbp', 'rip'] W['MEM', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6758 [None]movq      $-72057594037927936, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6768 [None]testq     %rax, %rdx
	 R['rax', 'rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6771 [jcc]jne       .L00001D38
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001D38' section='.text', address=7480>]

<Symbol '.L00001A79' section='.text', address=6777>
    ENDER False -- NXT .L00001AB0
    CFG .L00001ABC
    CFG .L00001AB0
    GRAPH_NXT .L00001AB0
    GRAPH_NXT .L00001ABC
    GRAPH_PRV .L00001A5C
'X64_AMOCO.InstructionDEAD'>6777 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r12', 'rax', 'rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6784 [None]movq      $3170534137668829184, %r12
	 R['rip'] W['r12', 'rip']
	 D['r12', 'rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6794 [None]orq       %rdx, %r12
	 R['r12', 'rdx', 'rip'] W['r12', 'rflags', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6797 [None]movq      %r12, (%rbp)
	 R['r12', 'rbp', 'rip'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6801 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6804 [None]movq      %rax, %rcx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6807 [None]subq      %rbx, %rcx
	 R['rbx', 'rcx', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6810 [None]movq      %rcx, %rbx
	 R['rcx', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6813 [None]movq      bot@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6820 [None]subq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6823 [None]shrq      $3, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6827 [None]cmpq      %rax, %rdx
	 R['rax', 'rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6830 [jcc]jbe       .L00001ABC
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001ABC' section='.text', address=6844>]

<Symbol '.L00001AB0' section='.text', address=6832>
    ENDER False -- NXT .L00001ABC
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00001A79
'X64_AMOCO.InstructionDEAD'>6832 [None]movl      $14, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6837 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6839 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00001ABC' section='.text', address=6844>
    ENDER False -- NXT .L00001AC6
    CFG .L00001AC6
    GRAPH_NXT .L00001AC6
    GRAPH_PRV .L00001A79
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>6844 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r13', 'r15', 'rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6851 [None]movq      %rbx, (%rax)
	 R['rax', 'rbx', 'rip'] W['MEM', 'rip']
	 D['r13', 'r15']
	 STACK:False:()

<Symbol '.L00001AC6' section='.text', address=6854>
    ENDER True -- NXT None
    CFG .L00001B3C
    GRAPH_NXT .L00001B3C
    GRAPH_PRV .L00001ABC
    GRAPH_PRV .L00001DBB
'X64_AMOCO.InstructionDEAD'>6854 [None]movq      168(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r13', 'r15', 'rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6862 [None]movq      %r12, (%rbx)
	 R['r12', 'rbx', 'rip'] W['MEM', 'rip']
	 D['r13', 'r15']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6865 [None]xorl      %r13d, %r13d
	 R['rflags', 'rip'] W['r13', 'rflags', 'rip']
	 D['r12', 'r13', 'r15']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6868 [None]leaq      288(%rsp), %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip']
	 D['r12', 'r15']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6876 [None]movq      144(%rsp), %r15
	 R['MEM', 'rip', 'rsp'] W['r15', 'rip']
	 D['r15']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6884 [None]movb      %r14b, 207(%rsp)
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6892 [None]leaq      (%rax,%rax,2), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['r14']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6896 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r14']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6900 [None]movq      %rax, 192(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r14', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6908 [None]movq      %rax, 176(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r14', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6916 [jmp]jmp       .L00001B3C
	 R['rip'] W['rip']
	 D['r14', 'rflags']
	 STACK:False:()
	 dst=[<Symbol '.L00001B3C' section='.text', address=6972>]

<Symbol '.L00001B06' section='.text', size=10, address=6918>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>6918 [None].p2align 4

<Symbol '.L00001B10' section='.text', address=6928>
    ENDER False -- NXT .L00001B1A
    CFG getvar@PLT
    GRAPH_NXT getvar@PLT
    GRAPH_PRV .L00001B3C
    GRAPH_PRV .L00001B6C
'X64_AMOCO.InstructionDEAD'>6928 [None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6931 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6933 [sub]call      getvar@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'getvar@PLT' >]

<Symbol '.L00001B1A' section='.text', address=6938>
    ENDER False -- NXT .L00001B37
    CFG var_push@PLT
    GRAPH_NXT var_push@PLT
    GRAPH_PRV getvar@PLT
'X64_AMOCO.InstructionDEAD'>6938 [None]movslq    %eax, %rdi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6941 [None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6946 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6948 [None]movq      %rdi, 8(%rbp,%r13,8)
	 R['r13', 'rbp', 'rdi', 'rip'] W['MEM', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6953 [None]movq      %r14, 8(%rbx,%r13,8)
	 R['r13', 'r14', 'rbx', 'rip'] W['MEM', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6958 [None]addq      $1, %r13
	 R['r13', 'rip'] W['r13', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6962 [sub]call      var_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'var_push@PLT' >]

<Symbol '.L00001B37' section='.text', address=6967>
    ENDER False -- NXT .L00001B3C
    CFG .L00001B6E
    CFG .L00001B3C
    GRAPH_NXT .L00001B3C
    GRAPH_NXT .L00001B6E
    GRAPH_PRV var_push@PLT
'X64_AMOCO.InstructionDEAD'>6967 [None]cmpq      %r13, %r15
	 R['r13', 'r15', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6970 [jcc]jle       .L00001B6E
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001B6E' section='.text', address=7022>]

<Symbol '.L00001B3C' section='.text', address=6972>
    ENDER False -- NXT .L00001B45
    CFG .L00001B10
    CFG .L00001B45
    GRAPH_NXT .L00001B10
    GRAPH_NXT .L00001B45
    GRAPH_PRV .L00001AC6
    GRAPH_PRV .L00001B37
'X64_AMOCO.InstructionDEAD'>6972 [None]movq      (%r12,%r13,8), %r14
	 R['MEM', 'r12', 'r13', 'rip'] W['r14', 'rip']
	 D['r14', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6976 [None]testq     %r14, %r14
	 R['r14', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6979 [jcc]jns       .L00001B10
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001B10' section='.text', address=6928>]

<Symbol '.L00001B45' section='.text', address=6981>
    ENDER False -- NXT .L00001B6C
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L00001B3C
'X64_AMOCO.InstructionDEAD'>6981 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6988 [None]movq      192(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>6996 [None]leaq      .LC27(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7003 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7006 [None]movq      24(%rax,%rcx), %rsi
	 R['MEM', 'rax', 'rcx', 'rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7011 [None]subq      $1, %rsi
	 R['rip', 'rsi'] W['rflags', 'rip', 'rsi']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7015 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00001B6C' section='.text', address=7020>
    ENDER True -- NXT None
    CFG .L00001B10
    GRAPH_NXT .L00001B10
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>7020 [jmp]jmp       .L00001B10
	 R['rip'] W['rip']
	 D['rax', 'rdi']
	 STACK:False:()
	 dst=[<Symbol '.L00001B10' section='.text', address=6928>]

<Symbol '.L00001B6E' section='.text', address=7022>
    ENDER False -- NXT .L00001B84
    CFG checkdups@PLT
    GRAPH_NXT checkdups@PLT
    GRAPH_PRV .L00001B37
'X64_AMOCO.InstructionDEAD'>7022 [None]movq      %rbp, %rsi
	 R['rbp', 'rip'] W['rip', 'rsi']
	 D['r14', 'rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7025 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['r14', 'rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7028 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r14', 'rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7030 [None]movzbl    207(%rsp), %r14d
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip']
	 D['r14']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7039 [sub]call      checkdups@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'checkdups@PLT' >]

<Symbol '.L00001B84' section='.text', address=7044>
    ENDER False -- NXT .L00001B8E
    CFG frame_push@PLT
    GRAPH_NXT frame_push@PLT
    GRAPH_PRV checkdups@PLT
'X64_AMOCO.InstructionDEAD'>7044 [None]movq      %rbp, %rdi
	 R['rbp', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7047 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7049 [sub]call      frame_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'frame_push@PLT' >]

<Symbol '.L00001B8E' section='.text', address=7054>
    ENDER True -- NXT None
    CFG .L00001475
    GRAPH_NXT .L00001475
    GRAPH_PRV frame_push@PLT
'X64_AMOCO.InstructionDEAD'>7054 [None]movq      176(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7062 [jmp]jmp       .L00001475
	 R['rip'] W['rip']
	 D['rax', 'rflags']
	 STACK:False:()
	 dst=[<Symbol '.L00001475' section='.text', address=5237>]

<Symbol '.L00001B9B' section='.text', address=7067>
    ENDER False -- NXT .L00001BAE
    CFG compilenode@PLT
    GRAPH_NXT compilenode@PLT
    GRAPH_PRV .L00001255
'X64_AMOCO.InstructionDEAD'>7067 [None]movq      8(%r14), %rdi
	 R['MEM', 'r14', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7071 [None]movl      $2, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7076 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7081 [sub]call      compilenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compilenode@PLT' >]

<Symbol '.L00001BAE' section='.text', address=7086>
    ENDER True -- NXT None
    CFG .L00001300
    GRAPH_NXT .L00001300
    GRAPH_PRV compilenode@PLT
'X64_AMOCO.InstructionDEAD'>7086 [jmp]jmp       .L00001300
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00001300' section='.text', address=4864>]

<Symbol '.L00001BB3' section='.text', address=7091>
    ENDER False -- NXT .L00001BCF
    CFG strntoGENstr@PLT
    GRAPH_NXT strntoGENstr@PLT
    GRAPH_PRV .L000016D2
'X64_AMOCO.InstructionDEAD'>7091 [None]movq      8(%rdx), %rax
	 R['MEM', 'rdx', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7095 [None]leaq      (%rax,%rax,2), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7099 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7103 [None]addq      %rcx, %rax
	 R['rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7106 [None]movq      32(%rax), %rsi
	 R['MEM', 'rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7110 [None]movq      24(%rax), %rdi
	 R['MEM', 'rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7114 [sub]call      strntoGENstr@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'strntoGENstr@PLT' >]

<Symbol '.L00001BCF' section='.text', address=7119>
    ENDER False -- NXT .L00001BD9
    CFG data_push@PLT
    GRAPH_NXT data_push@PLT
    GRAPH_PRV strntoGENstr@PLT
'X64_AMOCO.InstructionDEAD'>7119 [None]movq      %rax, %rdi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7122 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7124 [sub]call      data_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'data_push@PLT' >]

<Symbol '.L00001BD9' section='.text', address=7129>
    ENDER False -- NXT .L00001BEF
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV data_push@PLT
'X64_AMOCO.InstructionDEAD'>7129 [None]movq      40(%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['rbx', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7134 [None]movl      %eax, %esi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7136 [None]movl      $67, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7141 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7143 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7146 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00001BEF' section='.text', address=7151>
    ENDER True -- NXT None
    CFG .L00001711
    GRAPH_NXT .L00001711
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>7151 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7154 [jmp]jmp       .L00001711
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00001711' section='.text', address=5905>]

<Symbol '.L00001BF7' section='.text', address=7159>
    ENDER False -- NXT .L00001C00
    CFG .L00001DC0
    CFG .L00001C00
    GRAPH_NXT .L00001C00
    GRAPH_NXT .L00001DC0
    GRAPH_PRV .L00001354
'X64_AMOCO.InstructionDEAD'>7159 [None]testq     %rsi, %rsi
	 R['rip', 'rsi'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7162 [jcc]je        .L00001DC0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001DC0' section='.text', address=7616>]

<Symbol '.L00001C00' section='.text', address=7168>
    ENDER False -- NXT .L00001C0C
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L00001BF7
'X64_AMOCO.InstructionDEAD'>7168 [None]movl      $109, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7173 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7175 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00001C0C' section='.text', address=7180>
    ENDER True -- NXT None
    CFG .L000013A9
    GRAPH_NXT .L000013A9
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>7180 [jmp]jmp       .L000013A9
	 R['rip'] W['rip']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L000013A9' section='.text', address=5033>]

<Symbol '.L00001C11' section='.text', address=7185>
    ENDER False -- NXT .L00001C2B
    CFG .L00001C48
    CFG .L00001C2B
    GRAPH_NXT .L00001C2B
    GRAPH_NXT .L00001C48
    GRAPH_PRV .L0000131C
'X64_AMOCO.InstructionDEAD'>7185 [None]leaq      (%rdi,%rdi,2), %rbx
	 R['MEM', 'rdi', 'rip'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7189 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7196 [None]salq      $4, %rbx
	 R['rbx', 'rflags', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7200 [None]movq      %rbx, %rax
	 R['rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7203 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7206 [None]cmpl      $12, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7209 [jcc]je        .L00001C48
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001C48' section='.text', address=7240>]

<Symbol '.L00001C2B' section='.text', address=7211>
    ENDER False -- NXT .L00001C3B
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L00001C11
'X64_AMOCO.InstructionDEAD'>7211 [None]movq      24(%rax), %rsi
	 R['MEM', 'rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7215 [None]leaq      .LC26(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7222 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00001C3B' section='.text', address=7227>
    ENDER False -- NXT .L00001C48
    CFG .L00001C48
    GRAPH_NXT .L00001C48
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>7227 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7234 [None]movq      %rbx, %rax
	 R['rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7237 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rflags']
	 STACK:False:()

<Symbol '.L00001C48' section='.text', address=7240>
    ENDER True -- NXT None
    CFG .L00001333
    GRAPH_NXT .L00001333
    GRAPH_PRV .L00001C11
    GRAPH_PRV .L00001C3B
'X64_AMOCO.InstructionDEAD'>7240 [None]movq      8(%rax), %rdi
	 R['MEM', 'rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7244 [jmp]jmp       .L00001333
	 R['rip'] W['rip']
	 D['rax']
	 STACK:False:()
	 dst=[<Symbol '.L00001333' section='.text', address=4915>]

<Symbol '.L00001C51' section='.text', address=7249>
    ENDER True -- NXT None
    CFG .L00001571
    GRAPH_NXT .L00001571
    GRAPH_PRV .L00001562
'X64_AMOCO.InstructionDEAD'>7249 [None]movq      56(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7254 [None]movq      32(%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7258 [None]movq      %rax, 152(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7266 [jmp]jmp       .L00001571
	 R['rip'] W['rip']
	 D['rdi', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00001571' section='.text', address=5489>]

<Symbol '.L00001C67' section='.text', address=7271>
    ENDER False -- NXT .L00001C7A
    CFG strntoGENexp@PLT
    GRAPH_NXT strntoGENexp@PLT
    GRAPH_PRV .L000015BE
'X64_AMOCO.InstructionDEAD'>7271 [None]movq      32(%r12), %rsi
	 R['MEM', 'r12', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7276 [None]movq      24(%r12), %rdi
	 R['MEM', 'r12', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7281 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rax', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7285 [sub]call      strntoGENexp@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rdx']
	 STACK:False:()
	 dst=[<Symbol 'strntoGENexp@PLT' >]

<Symbol '.L00001C7A' section='.text', address=7290>
    ENDER False -- NXT .L00001C8A
    CFG eval_mnemonic@PLT
    GRAPH_NXT eval_mnemonic@PLT
    GRAPH_PRV strntoGENexp@PLT
'X64_AMOCO.InstructionDEAD'>7290 [None]movq      152(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7298 [None]movq      %rax, %rdi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7301 [sub]call      eval_mnemonic@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'eval_mnemonic@PLT' >]

<Symbol '.L00001C8A' section='.text', address=7306>
    ENDER False -- NXT .L00001C9E
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV eval_mnemonic@PLT
'X64_AMOCO.InstructionDEAD'>7306 [None]movq      40(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7311 [None]movq      %rax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7314 [None]movl      $65, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7319 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7321 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00001C9E' section='.text', address=7326>
    ENDER True -- NXT None
    CFG .L00000BF8
    GRAPH_NXT .L00000BF8
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>7326 [jmp]jmp       .L00000BF8
	 R['rip'] W['rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L00000BF8' section='.text', address=3064>]

<Symbol '.L00001CA3' section='.text', address=7331>
    ENDER False -- NXT .L00001CBF
    CFG .L00000540
    CFG .L00001CBF
    GRAPH_NXT .L00000540
    GRAPH_NXT .L00001CBF
    GRAPH_PRV .L000017AE
'X64_AMOCO.InstructionDEAD'>7331 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7338 [None]leaq      (%r13,%r13,2), %rax
	 R['MEM', 'r13', 'rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7343 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7347 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7350 [None]cmpl      $9, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7353 [jcc]jne       .L00000540
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000540' section='.text', address=1344>]

<Symbol '.L00001CBF' section='.text', address=7359>
    ENDER False -- NXT .L00001CE1
    CFG compilevec@PLT
    GRAPH_NXT compilevec@PLT
    GRAPH_PRV .L00001CA3
'X64_AMOCO.InstructionDEAD'>7359 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7366 [None]movq      64(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7371 [None]movl      $82, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7376 [None]movl      104(%rsp), %esi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7380 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7383 [None]movq      %rcx, (%rax)
	 R['rax', 'rcx', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7386 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7388 [sub]call      compilevec@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'compilevec@PLT' >]

<Symbol '.L00001CE1' section='.text', address=7393>
    ENDER True -- NXT None
    CFG .L00000BCA
    GRAPH_NXT .L00000BCA
    GRAPH_PRV compilevec@PLT
'X64_AMOCO.InstructionDEAD'>7393 [jmp]jmp       .L00000BCA
	 R['rip'] W['rip']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000BCA' section='.text', address=3018>]

<Symbol '.L00001CE6' section='.text', size=10, address=7398>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>7398 [None].p2align 4

<Symbol '.L00001CF0' section='.text', address=7408>
    ENDER False -- NXT .L00001D0C
    CFG .L00000540
    CFG .L00001D0C
    GRAPH_NXT .L00000540
    GRAPH_NXT .L00001D0C
    GRAPH_PRV .L000017A4
'X64_AMOCO.InstructionDEAD'>7408 [None]movq      pari_tree@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7415 [None]leaq      (%r13,%r13,2), %rax
	 R['MEM', 'r13', 'rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7420 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7424 [None]addq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7427 [None]cmpl      $14, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7430 [jcc]jne       .L00000540
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000540' section='.text', address=1344>]

<Symbol '.L00001D0C' section='.text', address=7436>
    ENDER False -- NXT .L00001D30
    CFG compilesmall@PLT
    GRAPH_NXT compilesmall@PLT
    GRAPH_PRV .L00001CF0
'X64_AMOCO.InstructionDEAD'>7436 [None]movq      8(%rax), %rsi
	 R['MEM', 'rax', 'rip'] W['rip', 'rsi']
	 D['rbx', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7440 [None]movq      avma@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7447 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rax', 'rbx', 'rdi', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7450 [None]movq      64(%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7455 [None]movl      104(%rsp), %edx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdx']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7459 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7461 [None]negq      %rsi
	 R['rip', 'rsi'] W['rflags', 'rip', 'rsi']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7464 [None]movq      %rbx, (%rcx)
	 R['rbx', 'rcx', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
'X64_AMOCO.InstructionDEAD'>7467 [sub]call      compilesmall@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol 'compilesmall@PLT' >]

<Symbol '.L00001D30' section='.text', address=7472>
    ENDER True -- NXT None
    CFG .L00000BCA
    GRAPH_NXT .L00000BCA
    GRAPH_PRV compilesmall@PLT
'X64_AMOCO.InstructionDEAD'>7472 [jmp]jmp       .L00000BCA
	 R['rip'] W['rip']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx', 'rflags']
	 STACK:{}:(8, 16, 24, 40, 56, 64, 72, 80, 88, 104)
	 dst=[<Symbol '.L00000BCA' section='.text', address=3018>]

<Symbol '.L00001D35' section='.text', size=3, address=7477>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>7477 [None].p2align 4,,10
'plasmasm.constants.P2Align'>7477 [None].p2align 3

<Symbol '.L00001D38' section='.text', address=7480>
    ENDER False -- NXT .L00001D5D
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00001A5C
'X64_AMOCO.InstructionDEAD'>7480 [None]leaq      .LC0(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['r12', 'rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7487 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r12', 'rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7489 [None]movl      $15, %edi
	 R['rip'] W['rdi', 'rip']
	 D['r12', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7494 [None]movq      %rdx, 176(%rsp)
	 R['rdx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r12']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7502 [None]movq      $3170534137668829184, %r12
	 R['rip'] W['r12', 'rip']
	 D['r12']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7512 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00001D5D' section='.text', address=7517>
    ENDER False -- NXT .L00001D92
    CFG .L00001D9E
    CFG .L00001D92
    GRAPH_NXT .L00001D92
    GRAPH_NXT .L00001D9E
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>7517 [None]movq      176(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7525 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7532 [None]orq       %rdx, %r12
	 R['r12', 'rdx', 'rip'] W['r12', 'rflags', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7535 [None]movq      %r12, (%rbp)
	 R['r12', 'rbp', 'rip'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7539 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7542 [None]movq      %rax, %rcx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7545 [None]subq      %rbx, %rcx
	 R['rbx', 'rcx', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7548 [None]movq      %rcx, %rbx
	 R['rcx', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7551 [None]movq      bot@GOTPCREL(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7558 [None]subq      (%rcx), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7561 [None]shrq      $3, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7565 [None]cmpq      %rax, %rdx
	 R['rax', 'rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7568 [jcc]jbe       .L00001D9E
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:False:()
	 dst=[<Symbol '.L00001D9E' section='.text', address=7582>]

<Symbol '.L00001D92' section='.text', address=7570>
    ENDER False -- NXT .L00001D9E
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00001D5D
'X64_AMOCO.InstructionDEAD'>7570 [None]movl      $14, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7575 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7577 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00001D9E' section='.text', address=7582>
    ENDER False -- NXT .L00001DBB
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00001D5D
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>7582 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7589 [None]leaq      .LC0(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7596 [None]movl      $15, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7601 [None]movq      %rbx, (%rax)
	 R['rax', 'rbx', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7604 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7606 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00001DBB' section='.text', address=7611>
    ENDER True -- NXT None
    CFG .L00001AC6
    GRAPH_NXT .L00001AC6
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>7611 [jmp]jmp       .L00001AC6
	 R['rip'] W['rip']
	 D['r13', 'r15', 'rax']
	 STACK:False:()
	 dst=[<Symbol '.L00001AC6' section='.text', address=6854>]

<Symbol '.L00001DC0' section='.text', address=7616>
    ENDER False -- NXT .L00001DCF
    CFG op_push@PLT
    GRAPH_NXT op_push@PLT
    GRAPH_PRV .L00001BF7
'X64_AMOCO.InstructionDEAD'>7616 [None]movq      %r12, %rsi
	 R['r12', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7619 [None]movl      $105, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7624 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7626 [sub]call      op_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'op_push@PLT' >]

<Symbol '.L00001DCF' section='.text', address=7631>
    ENDER True -- NXT None
    CFG .L000013A9
    GRAPH_NXT .L000013A9
    GRAPH_PRV op_push@PLT
'X64_AMOCO.InstructionDEAD'>7631 [jmp]jmp       .L000013A9
	 R['rip'] W['rip']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:False:()
	 dst=[<Symbol '.L000013A9' section='.text', address=5033>]

<Symbol '.L00001DD4' section='.text', address=7636>
    ENDER False -- NXT .L00001DEA
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L00001592
'X64_AMOCO.InstructionDEAD'>7636 [None]movq      16(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7641 [None]leaq      .LC24(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7648 [None]movq      24(%rdx,%rax), %rsi
	 R['MEM', 'rax', 'rdx', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7653 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:False:()
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00001DEA' section='.text', address=7658>
    ENDER True -- NXT None
    CFG .L000015AD
    GRAPH_NXT .L000015AD
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>7658 [None]movq      (%rbp), %r13
	 R['MEM', 'rbp', 'rip'] W['r13', 'rip']
	 D['r12', 'r13', 'rax', 'rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7662 [None]movq      pari_tree@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r12', 'rax', 'rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7669 [None]leaq      (%r13,%r13,2), %r12
	 R['MEM', 'r13', 'rip'] W['r12', 'rip']
	 D['r12', 'rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7674 [None]salq      $4, %r12
	 R['r12', 'rflags', 'rip'] W['r12', 'rflags', 'rip']
	 D['rcx']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7678 [None]addq      (%rax), %r12
	 R['MEM', 'r12', 'rax', 'rip'] W['r12', 'rflags', 'rip']
	 D['rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7681 [None]movl      (%r12), %ecx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:False:()
'X64_AMOCO.InstructionDEAD'>7685 [jmp]jmp       .L000015AD
	 R['rip'] W['rip']
	 D['rax', 'rflags']
	 STACK:False:()
	 dst=[<Symbol '.L000015AD' section='.text', address=5549>]

<Symbol '.L00001E0A' section='.text', type='padding', address=7690>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>7690 [None].p2align 4,,10
'plasmasm.constants.P2Align'>7690 [None].p2align 3

<Symbol 'genclosure' section='.text', type='function', bind='globl', size=1498, address=7696>
    ENDER False -- NXT .L00001E72
    CFG get_ret_type@PLT
    GRAPH_NXT get_ret_type@PLT
'X64_AMOCO.InstructionDEAD'>7696 [None]pushq     %r15
	 R['r15', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7698 [None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r15', 'rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7700 [None]xorl      %r14d, %r14d
	 R['rflags', 'rip'] W['r14', 'rflags', 'rip']
	 D['r14', 'r15', 'rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7703 [None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r15', 'rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7705 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'r15', 'rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7707 [None]xorl      %r12d, %r12d
	 R['rflags', 'rip'] W['r12', 'rflags', 'rip']
	 D['r12', 'r13', 'r15', 'rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7710 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'r15', 'rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7711 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'r15', 'rax', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7712 [None]xorl      %ebp, %ebp
	 R['rflags', 'rip'] W['rbp', 'rflags', 'rip']
	 D['r13', 'r15', 'rax', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7714 [None]xorl      %ebx, %ebx
	 R['rflags', 'rip'] W['rbx', 'rflags', 'rip']
	 D['r13', 'r15', 'rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7716 [None]subq      $152, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r13', 'r15', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7723 [None]movq      32(%rdi), %rax
	 R['MEM', 'rdi', 'rip'] W['rax', 'rip']
	 D['r13', 'r15', 'rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>7727 [None]movq      %rdi, 16(%rsp)
	 R['rdi', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r13', 'r15']
	 STACK:{}:(16,)
'X64_AMOCO.InstructionDEAD'>7732 [None]movq      %rdx, 8(%rsp)
	 R['rdx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r13', 'r15']
	 STACK:{}:(8, 16)
'X64_AMOCO.InstructionDEAD'>7737 [None]leaq      68(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['r13', 'r15', 'rdx']
	 STACK:{'%rdx': [68]}:(8, 16)
'X64_AMOCO.InstructionDEAD'>7742 [None]movl      %ecx, 24(%rsp)
	 R['rcx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r13', 'r15']
	 STACK:{'%rdx': [68]}:(8, 16, 24)
'X64_AMOCO.InstructionDEAD'>7746 [None]leaq      88(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['r13', 'r15', 'rcx']
	 STACK:{'%rcx': [88], '%rdx': [68]}:(8, 16, 24)
'X64_AMOCO.InstructionDEAD'>7751 [None]movq      %rsi, (%rsp)
	 R['rip', 'rsi', 'rsp'] W['MEM', 'rip']
	 D['r13', 'r15']
	 STACK:{'%rcx': [88], '%rdx': [68]}:(0, 8, 16, 24)
'X64_AMOCO.InstructionDEAD'>7755 [None]movq      %rax, 72(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r13', 'r15', 'rsi']
	 STACK:{'%rcx': [88], '%rdx': [68]}:(0, 8, 16, 24, 72)
'X64_AMOCO.InstructionDEAD'>7760 [None]movq      56(%rdi), %rax
	 R['MEM', 'rdi', 'rip'] W['rax', 'rip']
	 D['r13', 'r15', 'rax', 'rsi']
	 STACK:{'%rcx': [88], '%rdx': [68]}:(0, 8, 16, 24, 72)
'X64_AMOCO.InstructionDEAD'>7764 [None]leaq      72(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['r13', 'r15', 'rdi', 'rsi']
	 STACK:{'%rcx': [88], '%rdi': [72], '%rdx': [68]}:(0, 8, 16, 24, 72)
'X64_AMOCO.InstructionDEAD'>7769 [None]leaq      67(%rsp), %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip']
	 D['r13', 'r15', 'rsi']
	 STACK:{'%r13': [67], '%rcx': [88], '%rdi': [72], '%rdx': [68]}:(0, 8, 16, 24, 72)
'X64_AMOCO.InstructionDEAD'>7774 [None]leaq      80(%rsp), %r15
	 R['MEM', 'rip', 'rsp'] W['r15', 'rip']
	 D['r15', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88], '%rdi': [72], '%rdx': [68]}:(0, 8, 16, 24, 72)
'X64_AMOCO.InstructionDEAD'>7779 [None]movq      %rax, 32(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88], '%rdi': [72], '%rdx': [68]}:(0, 8, 16, 24, 32, 72)
'X64_AMOCO.InstructionDEAD'>7784 [None]movq      %rax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88], '%rdi': [72], '%rdx': [68]}:(0, 8, 16, 24, 32, 72)
'X64_AMOCO.InstructionDEAD'>7787 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88], '%rdi': [72], '%rdx': [68]}:(0, 8, 16, 24, 32, 72)
'X64_AMOCO.InstructionDEAD'>7789 [sub]call      get_ret_type@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88], '%rdi': [72], '%rdx': [68]}:(0, 8, 16, 24, 32, 72)
	 dst=[<Symbol 'get_ret_type@PLT' >]

<Symbol '.L00001E72' section='.text', address=7794>
    ENDER False -- NXT .L00001E80
    CFG .L00001E80
    GRAPH_NXT .L00001E80
    GRAPH_PRV get_ret_type@PLT
'X64_AMOCO.InstructionDEAD'>7794 [None]movl      %eax, 44(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88], '%rdi': [72], '%rdx': [68]}:(0, 8, 16, 24, 32, 44, 72)
'X64_AMOCO.InstructionDEAD'>7798 [None]movq      72(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88], '%rdi': [72], '%rdx': [68]}:(0, 8, 16, 24, 32, 44, 72)
'X64_AMOCO.InstructionDEAD'>7803 [None]movq      %rax, 80(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88], '%rdi': [72], '%rdx': [68]}:(0, 8, 16, 24, 32, 44, 72, 80)

<Symbol '.L00001E80' section='.text', address=7808>
    ENDER False -- NXT .L00001E8D
    CFG parseproto@PLT
    GRAPH_NXT parseproto@PLT
    GRAPH_PRV .L00001E72
    GRAPH_PRV .L00001E9F
    GRAPH_PRV .L00001EB8
    GRAPH_PRV .L00001EBD
    GRAPH_PRV .L00001EC5
    GRAPH_PRV .L00001EF0
    GRAPH_PRV .L00001F00
'X64_AMOCO.InstructionDEAD'>7808 [None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88], '%rdi': [72]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7810 [None]movq      %r13, %rsi
	 R['r13', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88], '%rdi': [72]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7813 [None]movq      %r15, %rdi
	 R['r15', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7816 [sub]call      parseproto@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol 'parseproto@PLT' >]

<Symbol '.L00001E8D' section='.text', address=7821>
    ENDER False -- NXT .L00001E95
    CFG .L00001F28
    CFG .L00001E95
    GRAPH_NXT .L00001E95
    GRAPH_NXT .L00001F28
    GRAPH_PRV parseproto@PLT
'X64_AMOCO.InstructionDEAD'>7821 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7823 [jcc]je        .L00001F28
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001F28' section='.text', address=7976>]

<Symbol '.L00001E95' section='.text', address=7829>
    ENDER False -- NXT .L00001E9A
    CFG .L00001EF0
    CFG .L00001E9A
    GRAPH_NXT .L00001E9A
    GRAPH_NXT .L00001EF0
    GRAPH_PRV .L00001E8D
'X64_AMOCO.InstructionDEAD'>7829 [None]cmpl      $5, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7832 [jcc]je        .L00001EF0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001EF0' section='.text', address=7920>]

<Symbol '.L00001E9A' section='.text', address=7834>
    ENDER False -- NXT .L00001E9F
    CFG .L00001F10
    CFG .L00001E9F
    GRAPH_NXT .L00001E9F
    GRAPH_NXT .L00001F10
    GRAPH_PRV .L00001E95
'X64_AMOCO.InstructionDEAD'>7834 [None]testq     %r12, %r12
	 R['r12', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7837 [jcc]jne       .L00001F10
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001F10' section='.text', address=7952>]

<Symbol '.L00001E9F' section='.text', address=7839>
    ENDER False -- NXT .L00001EA9
    CFG .L00001E80
    CFG .L00001EA9
    GRAPH_NXT .L00001E80
    GRAPH_NXT .L00001EA9
    GRAPH_PRV .L00001E9A
'X64_AMOCO.InstructionDEAD'>7839 [None]movzbl    67(%rsp), %ecx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7844 [None]cmpb      $86, %cl
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7847 [jcc]je        .L00001E80
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001E80' section='.text', address=7808>]

<Symbol '.L00001EA9' section='.text', address=7849>
    ENDER False -- NXT .L00001EB8
    CFG .L00001F00
    CFG .L00001EB8
    GRAPH_NXT .L00001EB8
    GRAPH_NXT .L00001F00
    GRAPH_PRV .L00001E9F
'X64_AMOCO.InstructionDEAD'>7849 [None]addq      %rbx, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7852 [None]addq      %rbp, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7855 [None]addq      $1, %r14
	 R['r14', 'rip'] W['r14', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7859 [None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7862 [jcc]je        .L00001F00
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001F00' section='.text', address=7936>]

<Symbol '.L00001EB8' section='.text', address=7864>
    ENDER False -- NXT .L00001EBD
    CFG .L00001E80
    CFG .L00001EBD
    GRAPH_NXT .L00001E80
    GRAPH_NXT .L00001EBD
    GRAPH_PRV .L00001EA9
'X64_AMOCO.InstructionDEAD'>7864 [None]cmpl      $2, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7867 [jcc]jne       .L00001E80
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001E80' section='.text', address=7808>]

<Symbol '.L00001EBD' section='.text', address=7869>
    ENDER False -- NXT .L00001EC5
    CFG .L00001E80
    CFG .L00001EC5
    GRAPH_NXT .L00001E80
    GRAPH_NXT .L00001EC5
    GRAPH_PRV .L00001EB8
'X64_AMOCO.InstructionDEAD'>7869 [None]subl      $38, %ecx
	 R['rcx', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7872 [None]cmpb      $35, %cl
	 R['rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7875 [jcc]ja        .L00001E80
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001E80' section='.text', address=7808>]

<Symbol '.L00001EC5' section='.text', address=7877>
    ENDER True -- NXT None
    CFG .L00001E80
    GRAPH_NXT .L00001E80
    GRAPH_PRV .L00001EBD
'X64_AMOCO.InstructionDEAD'>7877 [None]movl      $1, %eax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7882 [None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7885 [None]salq      %cl, %rax
	 R['rax', 'rcx', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7888 [None]movq      $36507222017, %rcx
	 R['rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7898 [None]orq       $1, %rdx
	 R['rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rdi', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7902 [None]testq     %rcx, %rax
	 R['rax', 'rcx', 'rip'] W['rflags', 'rip']
	 D['rdi', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7905 [None]cmovne    %rdx, %rbp
	 R['rbp', 'rdx', 'rflags', 'rip'] W['rbp', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7909 [jmp]jmp       .L00001E80
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001E80' section='.text', address=7808>]

<Symbol '.L00001EE7' section='.text', size=9, address=7911>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>7911 [None].p2align 4

<Symbol '.L00001EF0' section='.text', address=7920>
    ENDER True -- NXT None
    CFG .L00001E80
    GRAPH_NXT .L00001E80
    GRAPH_PRV .L00001E95
'X64_AMOCO.InstructionDEAD'>7920 [None]movl      $1, %r12d
	 R['rip'] W['r12', 'rip']
	 D['r12', 'rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7926 [jmp]jmp       .L00001E80
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001E80' section='.text', address=7808>]

<Symbol '.L00001EF8' section='.text', size=8, address=7928>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>7928 [None].p2align 4

<Symbol '.L00001F00' section='.text', address=7936>
    ENDER True -- NXT None
    CFG .L00001E80
    GRAPH_NXT .L00001E80
    GRAPH_PRV .L00001EA9
'X64_AMOCO.InstructionDEAD'>7936 [None]orq       $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7940 [jmp]jmp       .L00001E80
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001E80' section='.text', address=7808>]

<Symbol '.L00001F09' section='.text', size=7, address=7945>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>7945 [None].p2align 4

<Symbol '.L00001F10' section='.text', address=7952>
    ENDER False -- NXT .L00001F12
    CFG .L00001F12
    GRAPH_NXT .L00001F12
    GRAPH_PRV .L00001E9A
    GRAPH_PRV .L000020ED
    GRAPH_PRV .L000020F6
    GRAPH_PRV .L00002108
    GRAPH_PRV .L0000219C
'X64_AMOCO.InstructionDEAD'>7952 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r12', 'r13', 'r14', 'r15', 'rax', 'rbp', 'rbx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)

<Symbol '.L00001F12' section='.text', address=7954>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV .L00001F10
    GRAPH_PRV .L00001F40
    GRAPH_PRV .L000023CF
'X64_AMOCO.InstructionDEAD'>7954 [None]addq      $152, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx', 'rflags']
	 STACK:{'%r13': [-85], '%r15': [-72], '%rcx': [-64]}:(-152, -144, -136, -128, -120, -108, -104, -96, -80, -72)
'X64_AMOCO.InstructionDEAD'>7961 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx']
	 STACK:{'%r13': [-93], '%r15': [-80], '%rcx': [-72]}:(-160, -152, -144, -136, -128, -116, -112, -104, -88, -80)
'X64_AMOCO.InstructionDEAD'>7962 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'r15', 'rbp']
	 STACK:{'%r13': [-101], '%r15': [-88], '%rcx': [-80]}:(-168, -160, -152, -144, -136, -124, -120, -112, -96, -88)
'X64_AMOCO.InstructionDEAD'>7963 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'r15']
	 STACK:{'%r13': [-109], '%r15': [-96], '%rcx': [-88]}:(-176, -168, -160, -152, -144, -132, -128, -120, -104, -96)
'X64_AMOCO.InstructionDEAD'>7965 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14', 'r15']
	 STACK:{'%r13': [-117], '%r15': [-104], '%rcx': [-96]}:(-184, -176, -168, -160, -152, -140, -136, -128, -112, -104)
'X64_AMOCO.InstructionDEAD'>7967 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14', 'r15']
	 STACK:{'%r13': [-125], '%r15': [-112], '%rcx': [-104]}:(-192, -184, -176, -168, -160, -148, -144, -136, -120, -112)
'X64_AMOCO.InstructionDEAD'>7969 [None]popq      %r15
	 R['MEM', 'rip', 'rsp'] W['r15', 'rip', 'rsp']
	 D['r15']
	 STACK:{'%r13': [-133], '%r15': [-120], '%rcx': [-112]}:(-200, -192, -184, -176, -168, -156, -152, -144, -128, -120)
'X64_AMOCO.InstructionDEAD'>7971 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%r13': [-133], '%r15': [-120], '%rcx': [-112]}:(-200, -192, -184, -176, -168, -156, -152, -144, -128, -120)
	 dst=[None]

<Symbol '.L00001F24' section='.text', size=4, address=7972>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>7972 [None].p2align 4,,10
'plasmasm.constants.P2Align'>7972 [None].p2align 3

<Symbol '.L00001F28' section='.text', address=7976>
    ENDER False -- NXT .L00001F30
    CFG .L00001F50
    CFG .L00001F30
    GRAPH_NXT .L00001F30
    GRAPH_NXT .L00001F50
    GRAPH_PRV .L00001E8D
'X64_AMOCO.InstructionDEAD'>7976 [None]movl      24(%rsp), %eax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7980 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7982 [jcc]je        .L00001F50
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001F50' section='.text', address=8016>]

<Symbol '.L00001F30' section='.text', address=7984>
    ENDER False -- NXT .L00001F35
    CFG .L00001F50
    CFG .L00001F35
    GRAPH_NXT .L00001F35
    GRAPH_NXT .L00001F50
    GRAPH_PRV .L00001F28
'X64_AMOCO.InstructionDEAD'>7984 [None]testq     %rbx, %rbx
	 R['rbx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7987 [jcc]jne       .L00001F50
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001F50' section='.text', address=8016>]

<Symbol '.L00001F35' section='.text', address=7989>
    ENDER False -- NXT .L00001F40
    CFG .L00001F50
    CFG .L00001F40
    GRAPH_NXT .L00001F40
    GRAPH_NXT .L00001F50
    GRAPH_PRV .L00001F30
'X64_AMOCO.InstructionDEAD'>7989 [None]movq      16(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7994 [None]testb     $1, 9(%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>7998 [jcc]je        .L00001F50
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001F50' section='.text', address=8016>]

<Symbol '.L00001F40' section='.text', address=8000>
    ENDER True -- NXT None
    CFG .L00001F12
    GRAPH_NXT .L00001F12
    GRAPH_PRV .L00001F35
'X64_AMOCO.InstructionDEAD'>8000 [None]movq      gen_0@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r12', 'r13', 'r14', 'r15', 'rax', 'rbp', 'rbx', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>8007 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>8010 [jmp]jmp       .L00001F12
	 R['rip'] W['rip']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
	 dst=[<Symbol '.L00001F12' section='.text', address=7954>]

<Symbol '.L00001F4C' section='.text', size=4, address=8012>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>8012 [None].p2align 4,,10
'plasmasm.constants.P2Align'>8012 [None].p2align 3

<Symbol '.L00001F50' section='.text', address=8016>
    ENDER False -- NXT .L00001F64
    CFG getcodepos@PLT
    GRAPH_NXT getcodepos@PLT
    GRAPH_PRV .L00001F28
    GRAPH_PRV .L00001F30
    GRAPH_PRV .L00001F35
'X64_AMOCO.InstructionDEAD'>8016 [None]leaq      96(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rax': [96], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 72, 80)
'X64_AMOCO.InstructionDEAD'>8021 [None]movq      %rax, 56(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rax': [96], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8026 [None]movq      %rax, %rdi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rax': [96], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8029 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8031 [sub]call      getcodepos@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
	 dst=[<Symbol 'getcodepos@PLT' >]

<Symbol '.L00001F64' section='.text', address=8036>
    ENDER False -- NXT .L00001F7D
    CFG .L000021B0
    CFG .L00001F7D
    GRAPH_NXT .L00001F7D
    GRAPH_NXT .L000021B0
    GRAPH_PRV getcodepos@PLT
'X64_AMOCO.InstructionDEAD'>8036 [None]cmpq      %r14, 8(%rsp)
	 R['MEM', 'r14', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rax', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8041 [None]movq      dbgstart@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8048 [None]movq      (%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8052 [None]movq      %rsi, (%rax)
	 R['rax', 'rip', 'rsi'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8055 [jcc]jg        .L000021B0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
	 dst=[<Symbol '.L000021B0' section='.text', address=8624>]

<Symbol '.L00001F7D' section='.text', address=8061>
    ENDER False -- NXT .L00001F85
    CFG .L00001FD5
    CFG .L00001F85
    GRAPH_NXT .L00001F85
    GRAPH_NXT .L00001FD5
    GRAPH_PRV .L00001F64
'X64_AMOCO.InstructionDEAD'>8061 [None]cmpq      $0, 8(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8067 [jcc]jle       .L00001FD5
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
	 dst=[<Symbol '.L00001FD5' section='.text', address=8149>]

<Symbol '.L00001F85' section='.text', address=8069>
    ENDER False -- NXT .L00001FA8
    CFG .L00001FA8
    GRAPH_NXT .L00001FA8
    GRAPH_PRV .L00001F7D
    GRAPH_PRV .L000021CB
'X64_AMOCO.InstructionDEAD'>8069 [None]movl      $1, %r12d
	 R['rip'] W['r12', 'rip']
	 D['r12', 'rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8075 [None]movq      %r14, 24(%rsp)
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8080 [None]movq      %rbx, 48(%rsp)
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r14', 'rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8085 [None]movq      (%rsp), %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip']
	 D['r14', 'rax', 'rbx', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8089 [None]movq      %r12, %rbx
	 R['r12', 'rip'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8092 [None]movq      8(%rsp), %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip']
	 D['r12', 'rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'plasmasm.constants.P2Align'>8097 [None].p2align 4,,10
'plasmasm.constants.P2Align'>8097 [None].p2align 3

<Symbol '.L00001FA8' section='.text', address=8104>
    ENDER False -- NXT .L00001FB5
    CFG data_push@PLT
    GRAPH_NXT data_push@PLT
    GRAPH_PRV .L00001F85
    GRAPH_PRV .L00001FC6
'X64_AMOCO.InstructionDEAD'>8104 [None]xorl      %edi, %edi
	 R['rflags', 'rip'] W['rdi', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8106 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8108 [None]addq      $1, %rbx
	 R['rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8112 [sub]call      data_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'data_push@PLT' >]

<Symbol '.L00001FB5' section='.text', address=8117>
    ENDER False -- NXT .L00001FC6
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV data_push@PLT
'X64_AMOCO.InstructionDEAD'>8117 [None]movq      %r14, %rdx
	 R['r14', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8120 [None]movl      %eax, %esi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8122 [None]movl      $67, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8127 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8129 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00001FC6' section='.text', address=8134>
    ENDER False -- NXT .L00001FCB
    CFG .L00001FA8
    CFG .L00001FCB
    GRAPH_NXT .L00001FA8
    GRAPH_NXT .L00001FCB
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8134 [None]cmpq      %rbx, %r12
	 R['r12', 'rbx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8137 [jcc]jge       .L00001FA8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001FA8' section='.text', address=8104>]

<Symbol '.L00001FCB' section='.text', address=8139>
    ENDER False -- NXT .L00001FD5
    CFG .L00001FD5
    GRAPH_NXT .L00001FD5
    GRAPH_PRV .L00001FC6
'X64_AMOCO.InstructionDEAD'>8139 [None]movq      24(%rsp), %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip']
	 D['r14', 'rbx', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8144 [None]movq      48(%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['rbx', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)

<Symbol '.L00001FD5' section='.text', address=8149>
    ENDER False -- NXT .L00001FDE
    CFG .L00002360
    CFG .L00001FDE
    GRAPH_NXT .L00001FDE
    GRAPH_NXT .L00002360
    GRAPH_PRV .L00001F7D
    GRAPH_PRV .L00001FCB
'X64_AMOCO.InstructionDEAD'>8149 [None]testq     %rbx, %rbx
	 R['rbx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8152 [jcc]jne       .L00002360
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002360' section='.text', address=9056>]

<Symbol '.L00001FDE' section='.text', address=8158>
    ENDER False -- NXT .L00001FE7
    CFG .L00002340
    CFG .L00001FE7
    GRAPH_NXT .L00001FE7
    GRAPH_NXT .L00002340
    GRAPH_PRV .L00001FD5
    GRAPH_PRV .L00002373
'X64_AMOCO.InstructionDEAD'>8158 [None]testq     %rbp, %rbp
	 R['rbp', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8161 [jcc]jne       .L00002340
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002340' section='.text', address=9024>]

<Symbol '.L00001FE7' section='.text', address=8167>
    ENDER False -- NXT .L00001FF8
    CFG .L00001FF8
    GRAPH_NXT .L00001FF8
    GRAPH_PRV .L00001FDE
    GRAPH_PRV .L00002353
'X64_AMOCO.InstructionDEAD'>8167 [None]movq      72(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8172 [None]movq      %rax, 80(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'plasmasm.constants.P2Align'>8177 [None].p2align 4,,10
'plasmasm.constants.P2Align'>8177 [None].p2align 3

<Symbol '.L00001FF8' section='.text', address=8184>
    ENDER False -- NXT .L00002005
    CFG parseproto@PLT
    GRAPH_NXT parseproto@PLT
    GRAPH_PRV .L00001FE7
    GRAPH_PRV .L0000200D
    GRAPH_PRV .L00002021
    GRAPH_PRV .L00002037
    GRAPH_PRV .L00002040
    GRAPH_PRV .L00002066
    GRAPH_PRV .L00002087
    GRAPH_PRV .L000020A2
'X64_AMOCO.InstructionDEAD'>8184 [None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8186 [None]movq      %r13, %rsi
	 R['r13', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8189 [None]movq      %r15, %rdi
	 R['r15', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8192 [sub]call      parseproto@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'parseproto@PLT' >]

<Symbol '.L00002005' section='.text', address=8197>
    ENDER False -- NXT .L0000200D
    CFG .L000020B0
    CFG .L0000200D
    GRAPH_NXT .L0000200D
    GRAPH_NXT .L000020B0
    GRAPH_PRV parseproto@PLT
'X64_AMOCO.InstructionDEAD'>8197 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8199 [jcc]je        .L000020B0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L000020B0' section='.text', address=8368>]

<Symbol '.L0000200D' section='.text', address=8205>
    ENDER False -- NXT .L00002012
    CFG .L00001FF8
    CFG .L00002012
    GRAPH_NXT .L00001FF8
    GRAPH_NXT .L00002012
    GRAPH_PRV .L00002005
'X64_AMOCO.InstructionDEAD'>8205 [None]cmpl      $5, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8208 [jcc]jne       .L00001FF8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001FF8' section='.text', address=8184>]

<Symbol '.L00002012' section='.text', address=8210>
    ENDER False -- NXT .L0000201B
    CFG .L00002090
    CFG .L0000201B
    GRAPH_NXT .L0000201B
    GRAPH_NXT .L00002090
    GRAPH_PRV .L0000200D
'X64_AMOCO.InstructionDEAD'>8210 [None]movzbl    67(%rsp), %eax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8215 [None]cmpb      $80, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8217 [jcc]je        .L00002090
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002090' section='.text', address=8336>]

<Symbol '.L0000201B' section='.text', address=8219>
    ENDER False -- NXT .L0000201D
    CFG .L00002040
    CFG .L0000201D
    GRAPH_NXT .L0000201D
    GRAPH_NXT .L00002040
    GRAPH_PRV .L00002012
'X64_AMOCO.InstructionDEAD'>8219 [jcc]jle       .L00002040
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002040' section='.text', address=8256>]

<Symbol '.L0000201D' section='.text', address=8221>
    ENDER False -- NXT .L00002021
    CFG .L00002070
    CFG .L00002021
    GRAPH_NXT .L00002021
    GRAPH_NXT .L00002070
    GRAPH_PRV .L0000201B
'X64_AMOCO.InstructionDEAD'>8221 [None]cmpb      $102, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8223 [jcc]je        .L00002070
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002070' section='.text', address=8304>]

<Symbol '.L00002021' section='.text', address=8225>
    ENDER False -- NXT .L00002025
    CFG .L00001FF8
    CFG .L00002025
    GRAPH_NXT .L00001FF8
    GRAPH_NXT .L00002025
    GRAPH_PRV .L0000201D
'X64_AMOCO.InstructionDEAD'>8225 [None]cmpb      $112, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8227 [jcc]jne       .L00001FF8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001FF8' section='.text', address=8184>]

<Symbol '.L00002025' section='.text', address=8229>
    ENDER False -- NXT .L00002037
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00002021
'X64_AMOCO.InstructionDEAD'>8229 [None]movq      (%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8233 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8235 [None]movl      $78, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8240 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8242 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00002037' section='.text', address=8247>
    ENDER True -- NXT None
    CFG .L00001FF8
    GRAPH_NXT .L00001FF8
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8247 [jmp]jmp       .L00001FF8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001FF8' section='.text', address=8184>]

<Symbol '.L00002039' section='.text', size=7, address=8249>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>8249 [None].p2align 4

<Symbol '.L00002040' section='.text', address=8256>
    ENDER False -- NXT .L00002044
    CFG .L00001FF8
    CFG .L00002044
    GRAPH_NXT .L00001FF8
    GRAPH_NXT .L00002044
    GRAPH_PRV .L0000201B
'X64_AMOCO.InstructionDEAD'>8256 [None]cmpb      $67, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8258 [jcc]jne       .L00001FF8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001FF8' section='.text', address=8184>]

<Symbol '.L00002044' section='.text', address=8260>
    ENDER False -- NXT .L0000204B
    CFG pack_localvars@PLT
    GRAPH_NXT pack_localvars@PLT
    GRAPH_PRV .L00002040
'X64_AMOCO.InstructionDEAD'>8260 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8262 [sub]call      pack_localvars@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'pack_localvars@PLT' >]

<Symbol '.L0000204B' section='.text', address=8267>
    ENDER False -- NXT .L00002054
    CFG data_push@PLT
    GRAPH_NXT data_push@PLT
    GRAPH_PRV pack_localvars@PLT
'X64_AMOCO.InstructionDEAD'>8267 [None]movl      %eax, %edi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8269 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8271 [sub]call      data_push@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'data_push@PLT' >]

<Symbol '.L00002054' section='.text', address=8276>
    ENDER False -- NXT .L00002066
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV data_push@PLT
'X64_AMOCO.InstructionDEAD'>8276 [None]movq      (%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8280 [None]movl      %eax, %esi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8282 [None]movl      $67, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8287 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8289 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00002066' section='.text', address=8294>
    ENDER True -- NXT None
    CFG .L00001FF8
    GRAPH_NXT .L00001FF8
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8294 [jmp]jmp       .L00001FF8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001FF8' section='.text', address=8184>]

<Symbol '.L00002068' section='.text', size=8, address=8296>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>8296 [None].p2align 4

<Symbol '.L00002070' section='.text', address=8304>
    ENDER False -- NXT .L00002087
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L0000201D
'X64_AMOCO.InstructionDEAD'>8304 [None]movq      (%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8308 [None]leaq      foo.20841(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8315 [None]movl      $65, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8320 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8322 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00002087' section='.text', address=8327>
    ENDER True -- NXT None
    CFG .L00001FF8
    GRAPH_NXT .L00001FF8
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8327 [jmp]jmp       .L00001FF8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001FF8' section='.text', address=8184>]

<Symbol '.L0000208C' section='.text', size=4, address=8332>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>8332 [None].p2align 4,,10
'plasmasm.constants.P2Align'>8332 [None].p2align 3

<Symbol '.L00002090' section='.text', address=8336>
    ENDER False -- NXT .L000020A2
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00002012
'X64_AMOCO.InstructionDEAD'>8336 [None]movq      (%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8340 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8342 [None]movl      $79, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8347 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8349 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L000020A2' section='.text', address=8354>
    ENDER True -- NXT None
    CFG .L00001FF8
    GRAPH_NXT .L00001FF8
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8354 [jmp]jmp       .L00001FF8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001FF8' section='.text', address=8184>]

<Symbol '.L000020A7' section='.text', size=9, address=8359>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>8359 [None].p2align 4

<Symbol '.L000020B0' section='.text', address=8368>
    ENDER False -- NXT .L000020D8
    CFG .L000020D8
    GRAPH_NXT .L000020D8
    GRAPH_PRV .L00002005
'X64_AMOCO.InstructionDEAD'>8368 [None]movq      32(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r12', 'rax', 'rbp', 'rbx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8373 [None]movq      72(%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['r12', 'rbp', 'rbx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8378 [None]leaq      .LC00000354(%rip), %rbp
	 R['MEM', 'rip'] W['rbp', 'rip']
	 D['r12', 'rbp', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8385 [None]leaq      .LC00000558(%rip), %r12
	 R['MEM', 'rip'] W['r12', 'rip']
	 D['r12', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8392 [None]movq      %r14, 24(%rsp)
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8397 [None]negq      %rax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['r14', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8400 [None]movq      %rbx, 80(%rsp)
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['r14', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8405 [None]movq      %rax, %r14
	 R['rax', 'rip'] W['r14', 'rip']
	 D['r14', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)

<Symbol '.L000020D8' section='.text', address=8408>
    ENDER False -- NXT .L000020E5
    CFG parseproto@PLT
    GRAPH_NXT parseproto@PLT
    GRAPH_PRV .L000020B0
    GRAPH_PRV .L00002131
    GRAPH_PRV .L000021E7
    GRAPH_PRV .L0000221C
'X64_AMOCO.InstructionDEAD'>8408 [None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8410 [None]movq      %r13, %rsi
	 R['r13', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8413 [None]movq      %r15, %rdi
	 R['r15', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8416 [sub]call      parseproto@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'parseproto@PLT' >]

<Symbol '.L000020E5' section='.text', address=8421>
    ENDER False -- NXT .L000020ED
    CFG .L00002378
    CFG .L000020ED
    GRAPH_NXT .L000020ED
    GRAPH_NXT .L00002378
    GRAPH_PRV parseproto@PLT
'X64_AMOCO.InstructionDEAD'>8421 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8423 [jcc]je        .L00002378
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002378' section='.text', address=9080>]

<Symbol '.L000020ED' section='.text', address=8429>
    ENDER False -- NXT .L000020F6
    CFG .L00001F10
    CFG .L000020F6
    GRAPH_NXT .L00001F10
    GRAPH_NXT .L000020F6
    GRAPH_PRV .L000020E5
'X64_AMOCO.InstructionDEAD'>8429 [None]cmpl      $5, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8432 [jcc]ja        .L00001F10
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001F10' section='.text', address=7952>]

<Symbol '.L000020F6' section='.text', address=8438>
    ENDER True -- NXT None
    CFG .L00001F10
    CFG .L00002108
    CFG .L00002131
    CFG .L00002140
    CFG .L00002168
    CFG .L00002190
    GRAPH_NXT .L00001F10
    GRAPH_NXT .L00002108
    GRAPH_NXT .L00002131
    GRAPH_NXT .L00002140
    GRAPH_NXT .L00002168
    GRAPH_NXT .L00002190
    GRAPH_PRV .L000020ED
'X64_AMOCO.InstructionDEAD'>8438 [None]movl      %eax, %eax
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8440 [None]movslq    (%rbp,%rax,4), %rax
	 R['MEM', 'rax', 'rbp', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8445 [None]addq      %rbp, %rax
	 R['rax', 'rbp', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8448 [jmp]jmp       *%rax
	 R['rax', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001F10' section='.text', address=7952>, <Symbol '.L00002190' section='.text', address=8592>, <Symbol '.L00002168' section='.text', address=8552>, <Symbol '.L00002140' section='.text', address=8512>, <Symbol '.L00002108' section='.text', address=8456>, <Symbol '.L00002131' section='.text', address=8497>]

<Symbol '.L00002102' section='.text', size=6, address=8450>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>8450 [None].p2align 4,,10
'plasmasm.constants.P2Align'>8450 [None].p2align 3

<Symbol '.L00002108' section='.text', address=8456>
    ENDER False -- NXT .L00002116
    CFG .L00001F10
    CFG .L00002116
    GRAPH_NXT .L00001F10
    GRAPH_NXT .L00002116
    GRAPH_PRV .L000020F6
'X64_AMOCO.InstructionDEAD'>8456 [None]movsbl    67(%rsp), %edx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8461 [None]cmpb      $115, %dl
	 R['rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8464 [jcc]je        .L00001F10
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001F10' section='.text', address=7952>]

<Symbol '.L00002116' section='.text', address=8470>
    ENDER False -- NXT .L00002131
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00002108
'X64_AMOCO.InstructionDEAD'>8470 [None]movq      16(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8475 [None]leaq      .LC37(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8482 [None]movl      $5, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rcx', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8487 [None]movq      (%rax), %rcx
	 R['MEM', 'rax', 'rip'] W['rcx', 'rip']
	 D['rcx']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8490 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8492 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00002131' section='.text', address=8497>
    ENDER True -- NXT None
    CFG .L000020D8
    GRAPH_NXT .L000020D8
    GRAPH_PRV .L000020F6
    GRAPH_PRV .L00002178
    GRAPH_PRV .L00002190
    GRAPH_PRV .L0000219C
    GRAPH_PRV .L00002261
    GRAPH_PRV .L000022C9
    GRAPH_PRV .L000022E1
    GRAPH_PRV .L000022F9
    GRAPH_PRV .L00002319
    GRAPH_PRV .L00002339
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>8497 [None]movq      80(%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8502 [None]addq      $1, %r14
	 R['r14', 'rip'] W['r14', 'rflags', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8506 [jmp]jmp       .L000020D8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L000020D8' section='.text', address=8408>]

<Symbol '.L0000213C' section='.text', size=4, address=8508>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>8508 [None].p2align 4,,10
'plasmasm.constants.P2Align'>8508 [None].p2align 3

<Symbol '.L00002140' section='.text', address=8512>
    ENDER False -- NXT .L00002150
    CFG .L000022FE
    CFG .L00002150
    GRAPH_NXT .L00002150
    GRAPH_NXT .L000022FE
    GRAPH_PRV .L000020F6
'X64_AMOCO.InstructionDEAD'>8512 [None]movsbl    67(%rsp), %edx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8517 [None]leal      -71(%rdx), %eax
	 R['MEM', 'rdx', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8520 [None]cmpb      $44, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8522 [jcc]ja        .L000022FE
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L000022FE' section='.text', address=8958>]

<Symbol '.L00002150' section='.text', address=8528>
    ENDER True -- NXT None
    CFG .L00002226
    CFG .L00002266
    CFG .L00002291
    CFG .L000022FE
    GRAPH_NXT .L00002226
    GRAPH_NXT .L00002266
    GRAPH_NXT .L00002291
    GRAPH_NXT .L000022FE
    GRAPH_PRV .L00002140
'X64_AMOCO.InstructionDEAD'>8528 [None]leaq      .LC0000036C(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8535 [None]movzbl    %al, %eax
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8538 [None]movslq    (%rsi,%rax,4), %rax
	 R['MEM', 'rax', 'rip', 'rsi'] W['rax', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8542 [None]addq      %rsi, %rax
	 R['rax', 'rip', 'rsi'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8545 [jmp]jmp       *%rax
	 R['rax', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002291' section='.text', address=8849>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L00002266' section='.text', address=8806>, <Symbol '.L00002266' section='.text', address=8806>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L000022FE' section='.text', address=8958>, <Symbol '.L00002226' section='.text', address=8742>, <Symbol '.L00002226' section='.text', address=8742>]

<Symbol '.L00002163' section='.text', size=5, address=8547>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>8547 [None].p2align 4,,10
'plasmasm.constants.P2Align'>8547 [None].p2align 3

<Symbol '.L00002168' section='.text', address=8552>
    ENDER False -- NXT .L00002178
    CFG .L0000231E
    CFG .L00002178
    GRAPH_NXT .L00002178
    GRAPH_NXT .L0000231E
    GRAPH_PRV .L000020F6
'X64_AMOCO.InstructionDEAD'>8552 [None]movsbl    67(%rsp), %edx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8557 [None]leal      -38(%rdx), %eax
	 R['MEM', 'rdx', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8560 [None]cmpb      $77, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8562 [jcc]ja        .L0000231E
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L0000231E' section='.text', address=8990>]

<Symbol '.L00002178' section='.text', address=8568>
    ENDER True -- NXT None
    CFG .L00002131
    CFG .L000021D0
    CFG .L000021F1
    CFG .L0000231E
    GRAPH_NXT .L00002131
    GRAPH_NXT .L000021D0
    GRAPH_NXT .L000021F1
    GRAPH_NXT .L0000231E
    GRAPH_PRV .L00002168
'X64_AMOCO.InstructionDEAD'>8568 [None]leaq      .LC00000420(%rip), %rbx
	 R['MEM', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8575 [None]movzbl    %al, %eax
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8578 [None]movslq    (%rbx,%rax,4), %rax
	 R['MEM', 'rax', 'rbx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8582 [None]addq      %rbx, %rax
	 R['rax', 'rbx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8585 [jmp]jmp       *%rax
	 R['rax', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L000021F1' section='.text', address=8689>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L000021D0' section='.text', address=8656>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L0000231E' section='.text', address=8990>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>]

<Symbol '.L0000218B' section='.text', size=5, address=8587>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>8587 [None].p2align 4,,10
'plasmasm.constants.P2Align'>8587 [None].p2align 3

<Symbol '.L00002190' section='.text', address=8592>
    ENDER False -- NXT .L0000219C
    CFG .L00002131
    CFG .L0000219C
    GRAPH_NXT .L00002131
    GRAPH_NXT .L0000219C
    GRAPH_PRV .L000020F6
'X64_AMOCO.InstructionDEAD'>8592 [None]movzbl    67(%rsp), %eax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8597 [None]subl      $38, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8600 [None]cmpb      $77, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8602 [jcc]ja        .L00002131
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002131' section='.text', address=8497>]

<Symbol '.L0000219C' section='.text', address=8604>
    ENDER True -- NXT None
    CFG .L00001F10
    CFG .L00002131
    CFG .L000021D0
    CFG .L000022CE
    CFG .L000022E6
    GRAPH_NXT .L00001F10
    GRAPH_NXT .L00002131
    GRAPH_NXT .L000021D0
    GRAPH_NXT .L000022CE
    GRAPH_NXT .L000022E6
    GRAPH_PRV .L00002190
'X64_AMOCO.InstructionDEAD'>8604 [None]movzbl    %al, %eax
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8607 [None]movslq    (%r12,%rax,4), %rax
	 R['MEM', 'r12', 'rax', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8611 [None]addq      %r12, %rax
	 R['r12', 'rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8614 [jmp]jmp       *%rax
	 R['rax', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001F10' section='.text', address=7952>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00001F10' section='.text', address=7952>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00001F10' section='.text', address=7952>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00001F10' section='.text', address=7952>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00001F10' section='.text', address=7952>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L000022E6' section='.text', address=8934>, <Symbol '.L000022E6' section='.text', address=8934>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00001F10' section='.text', address=7952>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L000021D0' section='.text', address=8656>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L00002131' section='.text', address=8497>, <Symbol '.L000022CE' section='.text', address=8910>, <Symbol '.L000022CE' section='.text', address=8910>]

<Symbol '.L000021A8' section='.text', size=8, address=8616>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>8616 [None].p2align 4

<Symbol '.L000021B0' section='.text', address=8624>
    ENDER False -- NXT .L000021CB
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00001F64
'X64_AMOCO.InstructionDEAD'>8624 [None]movq      16(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8629 [None]leaq      .LC34(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8636 [None]movl      $5, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8641 [None]movq      (%rax), %rdx
	 R['MEM', 'rax', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8644 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8646 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L000021CB' section='.text', address=8651>
    ENDER True -- NXT None
    CFG .L00001F85
    GRAPH_NXT .L00001F85
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>8651 [jmp]jmp       .L00001F85
	 R['rip'] W['rip']
	 D['r12', 'rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 56, 72, 80)
	 dst=[<Symbol '.L00001F85' section='.text', address=8069>]

<Symbol '.L000021D0' section='.text', address=8656>
    ENDER False -- NXT .L000021E7
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00002178
    GRAPH_PRV .L0000219C
'X64_AMOCO.InstructionDEAD'>8656 [None]movq      (%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8660 [None]movq      %r14, %rsi
	 R['r14', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8663 [None]movl      $75, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8668 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8670 [None]addq      $1, %r14
	 R['r14', 'rip'] W['r14', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8674 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L000021E7' section='.text', address=8679>
    ENDER True -- NXT None
    CFG .L000020D8
    GRAPH_NXT .L000020D8
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8679 [None]movq      80(%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8684 [jmp]jmp       .L000020D8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L000020D8' section='.text', address=8408>]

<Symbol '.L000021F1' section='.text', address=8689>
    ENDER False -- NXT .L00002206
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00002178
'X64_AMOCO.InstructionDEAD'>8689 [None]movq      (%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8693 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8695 [None]movl      $79, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8700 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8702 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8705 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00002206' section='.text', address=8710>
    ENDER False -- NXT .L0000221C
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L0000228C
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8710 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8713 [None]movq      %r14, %rsi
	 R['r14', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8716 [None]movl      $117, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8721 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8723 [None]addq      $1, %r14
	 R['r14', 'rip'] W['r14', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8727 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L0000221C' section='.text', address=8732>
    ENDER True -- NXT None
    CFG .L000020D8
    GRAPH_NXT .L000020D8
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8732 [None]movq      80(%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8737 [jmp]jmp       .L000020D8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L000020D8' section='.text', address=8408>]

<Symbol '.L00002226' section='.text', address=8742>
    ENDER False -- NXT .L00002239
    CFG str_defproto@PLT
    GRAPH_NXT str_defproto@PLT
    GRAPH_PRV .L00002150
'X64_AMOCO.InstructionDEAD'>8742 [None]movq      (%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8746 [None]movq      80(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8751 [None]movq      %rbx, %rsi
	 R['rbx', 'rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8754 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8756 [sub]call      str_defproto@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'str_defproto@PLT' >]

<Symbol '.L00002239' section='.text', address=8761>
    ENDER False -- NXT .L0000224F
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV str_defproto@PLT
'X64_AMOCO.InstructionDEAD'>8761 [None]movq      (%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8765 [None]movq      %r14, %rsi
	 R['r14', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8768 [None]movl      $116, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8773 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8775 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8778 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L0000224F' section='.text', address=8783>
    ENDER False -- NXT .L00002261
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8783 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8786 [None]movq      %r14, %rsi
	 R['r14', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8789 [None]movl      $74, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8794 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8796 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00002261' section='.text', address=8801>
    ENDER True -- NXT None
    CFG .L00002131
    GRAPH_NXT .L00002131
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8801 [jmp]jmp       .L00002131
	 R['rip'] W['rip']
	 D['rax', 'rbx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002131' section='.text', address=8497>]

<Symbol '.L00002266' section='.text', address=8806>
    ENDER False -- NXT .L00002276
    CFG strtol@PLT
    GRAPH_NXT strtol@PLT
    GRAPH_PRV .L00002150
'X64_AMOCO.InstructionDEAD'>8806 [None]leaq      1(%rbx), %rdi
	 R['MEM', 'rbx', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8810 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8812 [None]movl      $10, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8817 [sub]call      strtol@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'strtol@PLT' >]

<Symbol '.L00002276' section='.text', address=8822>
    ENDER False -- NXT .L0000228C
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV strtol@PLT
'X64_AMOCO.InstructionDEAD'>8822 [None]movq      (%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['rbx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8826 [None]movq      %rax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8829 [None]movl      $65, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8834 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8836 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8839 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L0000228C' section='.text', address=8844>
    ENDER True -- NXT None
    CFG .L00002206
    GRAPH_NXT .L00002206
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8844 [jmp]jmp       .L00002206
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002206' section='.text', address=8710>]

<Symbol '.L00002291' section='.text', address=8849>
    ENDER False -- NXT .L000022A1
    CFG strtol@PLT
    GRAPH_NXT strtol@PLT
    GRAPH_PRV .L00002150
'X64_AMOCO.InstructionDEAD'>8849 [None]leaq      1(%rbx), %rdi
	 R['MEM', 'rbx', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8853 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8855 [None]movl      $10, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8860 [sub]call      strtol@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'strtol@PLT' >]

<Symbol '.L000022A1' section='.text', address=8865>
    ENDER False -- NXT .L000022B7
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV strtol@PLT
'X64_AMOCO.InstructionDEAD'>8865 [None]movq      (%rsp), %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip']
	 D['rbx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8869 [None]movq      %rax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8872 [None]movl      $69, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8877 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8879 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8882 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L000022B7' section='.text', address=8887>
    ENDER False -- NXT .L000022C9
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8887 [None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8890 [None]movq      %r14, %rsi
	 R['r14', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8893 [None]movl      $116, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8898 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8900 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L000022C9' section='.text', address=8905>
    ENDER True -- NXT None
    CFG .L00002131
    GRAPH_NXT .L00002131
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8905 [jmp]jmp       .L00002131
	 R['rip'] W['rip']
	 D['rax', 'rbx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002131' section='.text', address=8497>]

<Symbol '.L000022CE' section='.text', address=8910>
    ENDER False -- NXT .L000022E1
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L0000219C
'X64_AMOCO.InstructionDEAD'>8910 [None]movq      (%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8914 [None]movq      %r14, %rsi
	 R['r14', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8917 [None]movl      $74, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8922 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8924 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L000022E1' section='.text', address=8929>
    ENDER True -- NXT None
    CFG .L00002131
    GRAPH_NXT .L00002131
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8929 [jmp]jmp       .L00002131
	 R['rip'] W['rip']
	 D['rax', 'rbx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002131' section='.text', address=8497>]

<Symbol '.L000022E6' section='.text', address=8934>
    ENDER False -- NXT .L000022F9
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L0000219C
'X64_AMOCO.InstructionDEAD'>8934 [None]movq      (%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8938 [None]movq      %r14, %rsi
	 R['r14', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8941 [None]movl      $73, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8946 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8948 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L000022F9' section='.text', address=8953>
    ENDER True -- NXT None
    CFG .L00002131
    GRAPH_NXT .L00002131
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>8953 [jmp]jmp       .L00002131
	 R['rip'] W['rip']
	 D['rax', 'rbx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002131' section='.text', address=8497>]

<Symbol '.L000022FE' section='.text', address=8958>
    ENDER False -- NXT .L00002319
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00002140
    GRAPH_PRV .L00002150
'X64_AMOCO.InstructionDEAD'>8958 [None]movq      16(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8963 [None]leaq      .LC36(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8970 [None]movl      $5, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rcx', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8975 [None]movq      (%rax), %rcx
	 R['MEM', 'rax', 'rip'] W['rcx', 'rip']
	 D['rcx']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8978 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8980 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00002319' section='.text', address=8985>
    ENDER True -- NXT None
    CFG .L00002131
    GRAPH_NXT .L00002131
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>8985 [jmp]jmp       .L00002131
	 R['rip'] W['rip']
	 D['rax', 'rbx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002131' section='.text', address=8497>]

<Symbol '.L0000231E' section='.text', address=8990>
    ENDER False -- NXT .L00002339
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00002168
    GRAPH_PRV .L00002178
'X64_AMOCO.InstructionDEAD'>8990 [None]movq      16(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>8995 [None]leaq      .LC35(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9002 [None]movl      $5, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rcx', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9007 [None]movq      (%rax), %rcx
	 R['MEM', 'rax', 'rip'] W['rcx', 'rip']
	 D['rcx']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9010 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9012 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00002339' section='.text', address=9017>
    ENDER True -- NXT None
    CFG .L00002131
    GRAPH_NXT .L00002131
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>9017 [jmp]jmp       .L00002131
	 R['rip'] W['rip']
	 D['rax', 'rbx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002131' section='.text', address=8497>]

<Symbol '.L0000233E' section='.text', size=2, address=9022>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>9022 [None].p2align 4,,10
'plasmasm.constants.P2Align'>9022 [None].p2align 3

<Symbol '.L00002340' section='.text', address=9024>
    ENDER False -- NXT .L00002353
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00001FDE
'X64_AMOCO.InstructionDEAD'>9024 [None]movq      (%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9028 [None]movq      %rbp, %rsi
	 R['rbp', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9031 [None]movl      $115, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9036 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9038 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00002353' section='.text', address=9043>
    ENDER True -- NXT None
    CFG .L00001FE7
    GRAPH_NXT .L00001FE7
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>9043 [jmp]jmp       .L00001FE7
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001FE7' section='.text', address=8167>]

<Symbol '.L00002358' section='.text', size=8, address=9048>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>9048 [None].p2align 4

<Symbol '.L00002360' section='.text', address=9056>
    ENDER False -- NXT .L00002373
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L00001FD5
'X64_AMOCO.InstructionDEAD'>9056 [None]movq      (%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9060 [None]movq      %rbx, %rsi
	 R['rbx', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9063 [None]movl      $114, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9068 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9070 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L00002373' section='.text', address=9075>
    ENDER True -- NXT None
    CFG .L00001FDE
    GRAPH_NXT .L00001FDE
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>9075 [jmp]jmp       .L00001FDE
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001FDE' section='.text', address=8158>]

<Symbol '.L00002378' section='.text', address=9080>
    ENDER False -- NXT .L0000238F
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L000020E5
'X64_AMOCO.InstructionDEAD'>9080 [None]movq      (%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['r14', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9084 [None]movq      16(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['r14', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9089 [None]movl      44(%rsp), %edi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['r14', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9093 [None]movq      24(%rsp), %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip']
	 D['r14']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9098 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L0000238F' section='.text', address=9103>
    ENDER False -- NXT .L00002397
    CFG .L000023D6
    CFG .L00002397
    GRAPH_NXT .L00002397
    GRAPH_NXT .L000023D6
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>9103 [None]cmpq      $2, 88(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9109 [jcc]je        .L000023D6
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L000023D6' section='.text', address=9174>]

<Symbol '.L00002397' section='.text', address=9111>
    ENDER False -- NXT .L000023A9
    CFG compilecast_loc@PLT
    GRAPH_NXT compilecast_loc@PLT
    GRAPH_PRV .L0000238F
    GRAPH_PRV .L000023E8
'X64_AMOCO.InstructionDEAD'>9111 [None]movq      (%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9115 [None]movl      68(%rsp), %edi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rdi', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9119 [None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9124 [sub]call      compilecast_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'compilecast_loc@PLT' >]

<Symbol '.L000023A9' section='.text', address=9129>
    ENDER False -- NXT .L000023B6
    CFG strtoGENstr@PLT
    GRAPH_NXT strtoGENstr@PLT
    GRAPH_PRV compilecast_loc@PLT
'X64_AMOCO.InstructionDEAD'>9129 [None]movq      16(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9134 [None]movq      (%rax), %rdi
	 R['MEM', 'rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9137 [sub]call      strtoGENstr@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'strtoGENstr@PLT' >]

<Symbol '.L000023B6' section='.text', address=9142>
    ENDER False -- NXT .L000023CF
    CFG getfunction@PLT
    GRAPH_NXT getfunction@PLT
    GRAPH_PRV strtoGENstr@PLT
'X64_AMOCO.InstructionDEAD'>9142 [None]movq      %r14, %rsi
	 R['r14', 'rip'] W['rip', 'rsi']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9145 [None]subq      8(%rsp), %rsi
	 R['MEM', 'rip', 'rsi', 'rsp'] W['rflags', 'rip', 'rsi']
	 D['rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9150 [None]movq      56(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rcx', 'rdi', 'rdx']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9155 [None]movq      %rax, %rcx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdx']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9158 [None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9160 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9162 [sub]call      getfunction@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'getfunction@PLT' >]

<Symbol '.L000023CF' section='.text', address=9167>
    ENDER True -- NXT None
    CFG .L00001F12
    GRAPH_NXT .L00001F12
    GRAPH_PRV getfunction@PLT
'X64_AMOCO.InstructionDEAD'>9167 [None]cltq      
	 R['rax', 'rip'] W['rax', 'rip']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9169 [jmp]jmp       .L00001F12
	 R['rip'] W['rip']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx', 'rflags']
	 STACK:{'%r13': [67], '%r15': [80]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00001F12' section='.text', address=7954>]

<Symbol '.L000023D6' section='.text', address=9174>
    ENDER False -- NXT .L000023E8
    CFG op_push_loc@PLT
    GRAPH_NXT op_push_loc@PLT
    GRAPH_PRV .L0000238F
'X64_AMOCO.InstructionDEAD'>9174 [None]movq      (%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9178 [None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9180 [None]movl      $76, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9185 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
'X64_AMOCO.InstructionDEAD'>9187 [sub]call      op_push_loc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol 'op_push_loc@PLT' >]

<Symbol '.L000023E8' section='.text', address=9192>
    ENDER True -- NXT None
    CFG .L00002397
    GRAPH_NXT .L00002397
    GRAPH_PRV op_push_loc@PLT
'X64_AMOCO.InstructionDEAD'>9192 [jmp]jmp       .L00002397
	 R['rip'] W['rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%r13': [67], '%r15': [80], '%rcx': [88]}:(0, 8, 16, 24, 32, 44, 48, 56, 72, 80)
	 dst=[<Symbol '.L00002397' section='.text', address=9111>]

<Symbol '.L000023EA' section='.text', type='padding', address=9194>
    ENDER True -- NXT None
    CFG None
'plasmasm.constants.P2Align'>9194 [None].p2align 4,,10
'plasmasm.constants.P2Align'>9194 [None].p2align 3

<Symbol 'optimizenode' section='.text', type='function', bind='globl', size=496, address=9200>
    ENDER False -- NXT .L00002404
    CFG .L000025B8
    CFG .L00002404
    GRAPH_NXT .L00002404
    GRAPH_NXT .L000025B8
'X64_AMOCO.InstructionDEAD'>9200 [None]testq     %rdi, %rdi
	 R['rdi', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9203 [None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9205 [None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9207 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9209 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9210 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9211 [None]movq      %rdi, %rbx
	 R['rdi', 'rip'] W['rbx', 'rip']
	 D['rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9214 [jcc]js        .L000025B8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000025B8' section='.text', address=9656>]

<Symbol '.L00002404' section='.text', address=9220>
    ENDER False -- NXT .L0000242C
    CFG .L00002598
    CFG .L0000242C
    GRAPH_NXT .L0000242C
    GRAPH_NXT .L00002598
    GRAPH_PRV .L000025CB
    GRAPH_PRV optimizenode
'X64_AMOCO.InstructionDEAD'>9220 [None]movq      pari_tree@GOTPCREL(%rip), %r12
	 R['MEM', 'rip'] W['r12', 'rip']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rcx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9227 [None]leaq      (%rbx,%rbx,2), %rbp
	 R['MEM', 'rbx', 'rip'] W['rbp', 'rip']
	 D['r13', 'r14', 'rax', 'rbp', 'rcx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9231 [None]salq      $4, %rbp
	 R['rbp', 'rflags', 'rip'] W['rbp', 'rflags', 'rip']
	 D['r13', 'r14', 'rax', 'rcx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9235 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['r13', 'r14', 'rax', 'rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9239 [None]leaq      (%rcx,%rbp), %rax
	 R['MEM', 'rbp', 'rcx', 'rip'] W['rax', 'rip']
	 D['r13', 'r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9243 [None]cmpl      $19, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['r13', 'r14', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9246 [None]movq      8(%rax), %r13
	 R['MEM', 'rax', 'rip'] W['r13', 'rip']
	 D['r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9250 [None]movq      16(%rax), %r14
	 R['MEM', 'rax', 'rip'] W['r14', 'rip']
	 D['r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9254 [jcc]ja        .L00002598
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L00002598' section='.text', address=9624>]

<Symbol '.L0000242C' section='.text', address=9260>
    ENDER True -- NXT None
    CFG .L00002440
    CFG .L00002460
    CFG .L00002478
    CFG .L000024A0
    CFG .L000024E0
    CFG .L00002500
    CFG .L00002518
    CFG .L00002530
    CFG .L00002548
    CFG .L00002558
    CFG .L00002570
    CFG .L00002598
    GRAPH_NXT .L00002440
    GRAPH_NXT .L00002460
    GRAPH_NXT .L00002478
    GRAPH_NXT .L000024A0
    GRAPH_NXT .L000024E0
    GRAPH_NXT .L00002500
    GRAPH_NXT .L00002518
    GRAPH_NXT .L00002530
    GRAPH_NXT .L00002548
    GRAPH_NXT .L00002558
    GRAPH_NXT .L00002570
    GRAPH_NXT .L00002598
    GRAPH_PRV .L00002404
'X64_AMOCO.InstructionDEAD'>9260 [None]movl      (%rax), %esi
	 R['MEM', 'rax', 'rip'] W['rip', 'rsi']
	 D['rdx', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9262 [None]leaq      .LC00000690(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9269 [None]movslq    (%rdx,%rsi,4), %rsi
	 R['MEM', 'rdx', 'rip', 'rsi'] W['rip', 'rsi']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9273 [None]addq      %rsi, %rdx
	 R['rdx', 'rip', 'rsi'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9276 [jmp]jmp       *%rdx
	 R['rdx', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000024A0' section='.text', address=9376>, <Symbol '.L00002598' section='.text', address=9624>, <Symbol '.L00002598' section='.text', address=9624>, <Symbol '.L00002598' section='.text', address=9624>, <Symbol '.L000024E0' section='.text', address=9440>, <Symbol '.L00002500' section='.text', address=9472>, <Symbol '.L00002598' section='.text', address=9624>, <Symbol '.L00002598' section='.text', address=9624>, <Symbol '.L00002518' section='.text', address=9496>, <Symbol '.L00002530' section='.text', address=9520>, <Symbol '.L00002548' section='.text', address=9544>, <Symbol '.L00002598' section='.text', address=9624>, <Symbol '.L00002558' section='.text', address=9560>, <Symbol '.L00002548' section='.text', address=9544>, <Symbol '.L00002548' section='.text', address=9544>, <Symbol '.L00002570' section='.text', address=9584>, <Symbol '.L00002548' section='.text', address=9544>, <Symbol '.L00002460' section='.text', address=9312>, <Symbol '.L00002440' section='.text', address=9280>, <Symbol '.L00002478' section='.text', address=9336>]

<Symbol '.L0000243E' section='.text', size=2, address=9278>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>9278 [None].p2align 4,,10
'plasmasm.constants.P2Align'>9278 [None].p2align 3

<Symbol '.L00002440' section='.text', address=9280>
    ENDER False -- NXT .L0000244A
    CFG getfunc@PLT
    GRAPH_NXT getfunc@PLT
    GRAPH_PRV .L0000242C
'X64_AMOCO.InstructionDEAD'>9280 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9283 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9285 [sub]call      getfunc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'getfunc@PLT' >]

<Symbol '.L0000244A' section='.text', address=9290>
    ENDER False -- NXT .L00002460
    CFG .L000025D0
    CFG .L00002460
    GRAPH_NXT .L00002460
    GRAPH_NXT .L000025D0
    GRAPH_PRV getfunc@PLT
'X64_AMOCO.InstructionDEAD'>9290 [None]movslq    %eax, %rdi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9293 [None]movq      8(%rdi), %rax
	 R['MEM', 'rdi', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9297 [None]andl      $253, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9302 [None]cmpq      $100, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9306 [jcc]jne       .L000025D0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000025D0' section='.text', address=9680>]

<Symbol '.L00002460' section='.text', address=9312>
    ENDER True -- NXT None
    CFG optimizecall@PLT
    GRAPH_NXT optimizecall@PLT
    GRAPH_PRV .L0000242C
    GRAPH_PRV .L0000244A
'X64_AMOCO.InstructionDEAD'>9312 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rdi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9315 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9317 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9318 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9319 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9321 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9323 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9325 [jmp]jmp       optimizecall@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'optimizecall@PLT' >]

<Symbol '.L00002472' section='.text', size=6, address=9330>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>9330 [None].p2align 4,,10
'plasmasm.constants.P2Align'>9330 [None].p2align 3

<Symbol '.L00002478' section='.text', address=9336>
    ENDER False -- NXT .L00002480
    CFG optimizenode@PLT
    GRAPH_NXT optimizenode@PLT
    GRAPH_PRV .L0000242C
'X64_AMOCO.InstructionDEAD'>9336 [None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9339 [sub]call      optimizenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:()
	 dst=[<Symbol 'optimizenode@PLT' >]

<Symbol '.L00002480' section='.text', address=9344>
    ENDER False -- NXT .L0000248D
    CFG .L0000248D
    GRAPH_NXT .L0000248D
    GRAPH_PRV optimizenode@PLT
'X64_AMOCO.InstructionDEAD'>9344 [None]movq      (%r12), %rax
	 R['MEM', 'r12', 'rip'] W['rax', 'rip']
	 D['r13', 'r14', 'rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9348 [None]movq      $3, 40(%rax,%rbp)
	 R['rax', 'rbp', 'rip'] W['MEM', 'rip']
	 D['r12', 'r13', 'r14', 'rbx']
	 STACK:{}:()

<Symbol '.L0000248D' section='.text', address=9357>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV .L00002480
    GRAPH_PRV .L000024BF
    GRAPH_PRV .L000024F0
    GRAPH_PRV .L00002548
    GRAPH_PRV .L00002578
'X64_AMOCO.InstructionDEAD'>9357 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9358 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9359 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9361 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9363 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9365 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[None]

<Symbol '.L00002496' section='.text', size=10, address=9366>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>9366 [None].p2align 4

<Symbol '.L000024A0' section='.text', address=9376>
    ENDER False -- NXT .L000024AF
    CFG .L000024B7
    CFG .L000024AF
    GRAPH_NXT .L000024AF
    GRAPH_NXT .L000024B7
    GRAPH_PRV .L0000242C
'X64_AMOCO.InstructionDEAD'>9376 [None]leaq      (%r13,%r13,2), %rbx
	 R['MEM', 'r13', 'rip'] W['rbx', 'rip']
	 D['rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9381 [None]salq      $4, %rbx
	 R['rbx', 'rflags', 'rip'] W['rbx', 'rflags', 'rip']
	 D[]
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9385 [None]cmpl      $10, (%rcx,%rbx)
	 R['MEM', 'rbx', 'rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9389 [jcc]je        .L000024B7
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol '.L000024B7' section='.text', address=9399>]

<Symbol '.L000024AF' section='.text', address=9391>
    ENDER False -- NXT .L000024B7
    CFG optimizenode@PLT
    GRAPH_NXT optimizenode@PLT
    GRAPH_PRV .L000024A0
'X64_AMOCO.InstructionDEAD'>9391 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9394 [sub]call      optimizenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:()
	 dst=[<Symbol 'optimizenode@PLT' >]

<Symbol '.L000024B7' section='.text', address=9399>
    ENDER False -- NXT .L000024BF
    CFG optimizenode@PLT
    GRAPH_NXT optimizenode@PLT
    GRAPH_PRV .L000024A0
    GRAPH_PRV optimizenode@PLT
'X64_AMOCO.InstructionDEAD'>9399 [None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9402 [sub]call      optimizenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:()
	 dst=[<Symbol 'optimizenode@PLT' >]

<Symbol '.L000024BF' section='.text', address=9407>
    ENDER True -- NXT None
    CFG .L0000248D
    GRAPH_NXT .L0000248D
    GRAPH_PRV optimizenode@PLT
'X64_AMOCO.InstructionDEAD'>9407 [None]movq      (%r12), %rax
	 R['MEM', 'r12', 'rip'] W['rax', 'rip']
	 D['r13', 'rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9411 [None]leaq      (%r14,%r14,2), %rdx
	 R['MEM', 'r14', 'rip'] W['rdx', 'rip']
	 D['r12', 'r13', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9415 [None]salq      $4, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['r12', 'r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9419 [None]movq      40(%rax,%rdx), %rdx
	 R['MEM', 'rax', 'rdx', 'rip'] W['rdx', 'rip']
	 D['r12', 'r13', 'r14', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9424 [None]andq      40(%rax,%rbx), %rdx
	 R['MEM', 'rax', 'rbx', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['r12', 'r13', 'r14', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9429 [None]movq      %rdx, 40(%rax,%rbp)
	 R['rax', 'rbp', 'rdx', 'rip'] W['MEM', 'rip']
	 D['r12', 'r13', 'r14', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9434 [jmp]jmp       .L0000248D
	 R['rip'] W['rip']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:()
	 dst=[<Symbol '.L0000248D' section='.text', address=9357>]

<Symbol '.L000024DC' section='.text', size=4, address=9436>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>9436 [None].p2align 4,,10
'plasmasm.constants.P2Align'>9436 [None].p2align 3

<Symbol '.L000024E0' section='.text', address=9440>
    ENDER False -- NXT .L000024E8
    CFG optimizenode@PLT
    GRAPH_NXT optimizenode@PLT
    GRAPH_PRV .L0000242C
'X64_AMOCO.InstructionDEAD'>9440 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9443 [sub]call      optimizenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:()
	 dst=[<Symbol 'optimizenode@PLT' >]

<Symbol '.L000024E8' section='.text', address=9448>
    ENDER False -- NXT .L000024F0
    CFG optimizenode@PLT
    GRAPH_NXT optimizenode@PLT
    GRAPH_PRV optimizenode@PLT
'X64_AMOCO.InstructionDEAD'>9448 [None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9451 [sub]call      optimizenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:()
	 dst=[<Symbol 'optimizenode@PLT' >]

<Symbol '.L000024F0' section='.text', address=9456>
    ENDER True -- NXT None
    CFG .L0000248D
    GRAPH_NXT .L0000248D
    GRAPH_PRV optimizenode@PLT
'X64_AMOCO.InstructionDEAD'>9456 [None]movq      (%r12), %rax
	 R['MEM', 'r12', 'rip'] W['rax', 'rip']
	 D['r13', 'r14', 'rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9460 [None]movq      $0, 40(%rax,%rbp)
	 R['rax', 'rbp', 'rip'] W['MEM', 'rip']
	 D['r12', 'r13', 'r14', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9469 [jmp]jmp       .L0000248D
	 R['rip'] W['rip']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:()
	 dst=[<Symbol '.L0000248D' section='.text', address=9357>]

<Symbol '.L000024FF' section='.text', size=1, address=9471>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>9471 [None].p2align 4,,10
'plasmasm.constants.P2Align'>9471 [None].p2align 3

<Symbol '.L00002500' section='.text', address=9472>
    ENDER True -- NXT None
    CFG optimizefacteurmat@PLT
    GRAPH_NXT optimizefacteurmat@PLT
    GRAPH_PRV .L0000242C
'X64_AMOCO.InstructionDEAD'>9472 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rdi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9475 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9477 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9478 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9479 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9481 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9483 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9485 [jmp]jmp       optimizefacteurmat@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'optimizefacteurmat@PLT' >]

<Symbol '.L00002512' section='.text', size=6, address=9490>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>9490 [None].p2align 4,,10
'plasmasm.constants.P2Align'>9490 [None].p2align 3

<Symbol '.L00002518' section='.text', address=9496>
    ENDER True -- NXT None
    CFG optimizemat@PLT
    GRAPH_NXT optimizemat@PLT
    GRAPH_PRV .L0000242C
'X64_AMOCO.InstructionDEAD'>9496 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rdi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9499 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9501 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9502 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9503 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9505 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9507 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9509 [jmp]jmp       optimizemat@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'optimizemat@PLT' >]

<Symbol '.L0000252A' section='.text', size=6, address=9514>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>9514 [None].p2align 4,,10
'plasmasm.constants.P2Align'>9514 [None].p2align 3

<Symbol '.L00002530' section='.text', address=9520>
    ENDER True -- NXT None
    CFG optimizevec@PLT
    GRAPH_NXT optimizevec@PLT
    GRAPH_PRV .L0000242C
'X64_AMOCO.InstructionDEAD'>9520 [None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rdi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9523 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9525 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9526 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9527 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9529 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9531 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9533 [jmp]jmp       optimizevec@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'optimizevec@PLT' >]

<Symbol '.L00002542' section='.text', size=6, address=9538>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>9538 [None].p2align 4,,10
'plasmasm.constants.P2Align'>9538 [None].p2align 3

<Symbol '.L00002548' section='.text', address=9544>
    ENDER True -- NXT None
    CFG .L0000248D
    GRAPH_NXT .L0000248D
    GRAPH_PRV .L0000242C
'X64_AMOCO.InstructionDEAD'>9544 [None]movq      $3, 40(%rax)
	 R['rax', 'rip'] W['MEM', 'rip']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9552 [jmp]jmp       .L0000248D
	 R['rip'] W['rip']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:()
	 dst=[<Symbol '.L0000248D' section='.text', address=9357>]

<Symbol '.L00002555' section='.text', size=3, address=9557>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>9557 [None].p2align 4,,10
'plasmasm.constants.P2Align'>9557 [None].p2align 3

<Symbol '.L00002558' section='.text', address=9560>
    ENDER True -- NXT None
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L0000242C
'X64_AMOCO.InstructionDEAD'>9560 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9561 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9562 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9564 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9566 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9568 [None]movq      24(%rax), %rsi
	 R['MEM', 'rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9572 [None]leaq      .LC40(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9579 [jmp]jmp       compile_err@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00002570' section='.text', address=9584>
    ENDER False -- NXT .L00002578
    CFG optimizenode@PLT
    GRAPH_NXT optimizenode@PLT
    GRAPH_PRV .L0000242C
'X64_AMOCO.InstructionDEAD'>9584 [None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9587 [sub]call      optimizenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:()
	 dst=[<Symbol 'optimizenode@PLT' >]

<Symbol '.L00002578' section='.text', address=9592>
    ENDER True -- NXT None
    CFG .L0000248D
    GRAPH_NXT .L0000248D
    GRAPH_PRV optimizenode@PLT
'X64_AMOCO.InstructionDEAD'>9592 [None]movq      (%r12), %rdx
	 R['MEM', 'r12', 'rip'] W['rdx', 'rip']
	 D['r14', 'rax', 'rbx', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9596 [None]leaq      (%r13,%r13,2), %rax
	 R['MEM', 'r13', 'rip'] W['rax', 'rip']
	 D['r12', 'r14', 'rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9601 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r12', 'r13', 'r14', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9605 [None]movq      40(%rdx,%rax), %rax
	 R['MEM', 'rax', 'rdx', 'rip'] W['rax', 'rip']
	 D['r12', 'r13', 'r14', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9610 [None]movq      %rax, 40(%rdx,%rbp)
	 R['rax', 'rbp', 'rdx', 'rip'] W['MEM', 'rip']
	 D['r12', 'r13', 'r14', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9615 [jmp]jmp       .L0000248D
	 R['rip'] W['rip']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:()
	 dst=[<Symbol '.L0000248D' section='.text', address=9357>]

<Symbol '.L00002594' section='.text', size=4, address=9620>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>9620 [None].p2align 4,,10
'plasmasm.constants.P2Align'>9620 [None].p2align 3

<Symbol '.L00002598' section='.text', address=9624>
    ENDER True -- NXT None
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L00002404
    GRAPH_PRV .L0000242C
'X64_AMOCO.InstructionDEAD'>9624 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rbx', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9625 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9626 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rax', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9628 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14', 'rax', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9630 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14', 'rax', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9632 [None]leaq      .LC39(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9639 [None]movl      $2, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9644 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9646 [jmp]jmp       pari_err@PLT
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L000025B3' section='.text', size=5, address=9651>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>9651 [None].p2align 4,,10
'plasmasm.constants.P2Align'>9651 [None].p2align 3

<Symbol '.L000025B8' section='.text', address=9656>
    ENDER False -- NXT .L000025CB
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV optimizenode
'X64_AMOCO.InstructionDEAD'>9656 [None]leaq      .LC39(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9663 [None]movl      $2, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9668 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9670 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:()
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L000025CB' section='.text', address=9675>
    ENDER True -- NXT None
    CFG .L00002404
    GRAPH_NXT .L00002404
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>9675 [jmp]jmp       .L00002404
	 R['rip'] W['rip']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rcx']
	 STACK:{}:()
	 dst=[<Symbol '.L00002404' section='.text', address=9220>]

<Symbol '.L000025D0' section='.text', address=9680>
    ENDER True -- NXT None
    CFG optimizefunc@PLT
    GRAPH_NXT optimizefunc@PLT
    GRAPH_PRV .L0000244A
'X64_AMOCO.InstructionDEAD'>9680 [None]movq      %rbx, %rsi
	 R['rbx', 'rip'] W['rip', 'rsi']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rdx', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9683 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rbx', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9684 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9685 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9687 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14', 'rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9689 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14', 'rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9691 [jmp]jmp       optimizefunc@PLT
	 R['rip'] W['rip']
	 D['rax', 'rdx']
	 STACK:{}:()
	 dst=[<Symbol 'optimizefunc@PLT' >]

<Symbol 'optimizefunc' section='.text', type='function', bind='globl', size=1293, address=9696>
    ENDER False -- NXT .L00002633
    CFG listtogen@PLT
    GRAPH_NXT listtogen@PLT
'X64_AMOCO.InstructionDEAD'>9696 [None]pushq     %r15
	 R['r15', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9698 [None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9700 [None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9702 [None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9704 [None]leaq      (%rsi,%rsi,2), %r13
	 R['MEM', 'rip', 'rsi'] W['r13', 'rip']
	 D['r12', 'r13', 'rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9708 [None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'rax', 'rdx', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9709 [None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'rax', 'rdx', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9710 [None]movl      $11, %esi
	 R['rip'] W['rip', 'rsi']
	 D['r12', 'rax', 'rbx', 'rdx', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9715 [None]salq      $4, %r13
	 R['r13', 'rflags', 'rip'] W['r13', 'rflags', 'rip']
	 D['r12', 'rax', 'rbx', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9719 [None]subq      $104, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'rax', 'rbx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9723 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r12', 'rax', 'rbx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9730 [None]movq      pari_tree@GOTPCREL(%rip), %r12
	 R['MEM', 'rip'] W['r12', 'rip']
	 D['r12', 'rbx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9737 [None]movq      32(%rdi), %rdx
	 R['MEM', 'rdi', 'rip'] W['rdx', 'rip']
	 D['rbx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9741 [None]movq      (%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rbx', 'rdi', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>9744 [None]movq      %rdx, 80(%rsp)
	 R['rdx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbx', 'rdi', 'rflags']
	 STACK:{}:(80,)
'X64_AMOCO.InstructionDEAD'>9749 [None]movq      %rax, 40(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbx', 'rdi', 'rflags']
	 STACK:{}:(40, 80)
'X64_AMOCO.InstructionDEAD'>9754 [None]movq      %r13, %rax
	 R['r13', 'rip'] W['rax', 'rip']
	 D['rax', 'rbx', 'rdi', 'rflags']
	 STACK:{}:(40, 80)
'X64_AMOCO.InstructionDEAD'>9757 [None]addq      (%r12), %rax
	 R['MEM', 'r12', 'rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rbx', 'rdi', 'rflags']
	 STACK:{}:(40, 80)
'X64_AMOCO.InstructionDEAD'>9761 [None]movq      8(%rax), %rbx
	 R['MEM', 'rax', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rdi']
	 STACK:{}:(40, 80)
'X64_AMOCO.InstructionDEAD'>9765 [None]movq      16(%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdi']
	 STACK:{}:(40, 80)
'X64_AMOCO.InstructionDEAD'>9769 [None]movq      %rax, %rdi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(40, 80)
'X64_AMOCO.InstructionDEAD'>9772 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(40, 80)
'X64_AMOCO.InstructionDEAD'>9774 [sub]call      listtogen@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(40, 80)
	 dst=[<Symbol 'listtogen@PLT' >]

<Symbol '.L00002633' section='.text', address=9779>
    ENDER False -- NXT .L00002649
    CFG .L000028F8
    CFG .L00002649
    GRAPH_NXT .L00002649
    GRAPH_NXT .L000028F8
    GRAPH_PRV listtogen@PLT
'X64_AMOCO.InstructionDEAD'>9779 [None]cmpq      $0, 80(%rsp)
	 R['MEM', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rbp', 'rflags']
	 STACK:{}:(40, 80)
'X64_AMOCO.InstructionDEAD'>9785 [None]cltq      
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rbp']
	 STACK:{}:(40, 80)
'X64_AMOCO.InstructionDEAD'>9787 [None]movq      %rax, 32(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbp']
	 STACK:{}:(32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9792 [None]movq      (%rax), %rbp
	 R['MEM', 'rax', 'rip'] W['rbp', 'rip']
	 D['rbp']
	 STACK:{}:(32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9795 [jcc]je        .L000028F8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(32, 40, 80)
	 dst=[<Symbol '.L000028F8' section='.text', address=10488>]

<Symbol '.L00002649' section='.text', address=9801>
    ENDER False -- NXT .L0000266C
    CFG get_ret_type@PLT
    GRAPH_NXT get_ret_type@PLT
    GRAPH_PRV .L00002633
'X64_AMOCO.InstructionDEAD'>9801 [None]leaq      80(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rax': [80]}:(32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9806 [None]leaq      88(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rax': [80], '%rcx': [88]}:(32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9811 [None]leaq      76(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rax': [80], '%rcx': [88], '%rdx': [76]}:(32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9816 [None]movl      $2, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rax': [80], '%rcx': [88], '%rdx': [76]}:(32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9821 [None]movq      %rax, 16(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi']
	 STACK:{'%rax': [80], '%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9826 [None]movq      %rax, %rdi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rax': [80], '%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9829 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9831 [sub]call      get_ret_type@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)
	 dst=[<Symbol 'get_ret_type@PLT' >]

<Symbol '.L0000266C' section='.text', address=9836>
    ENDER False -- NXT .L0000267A
    CFG .L00002758
    CFG .L0000267A
    GRAPH_NXT .L0000267A
    GRAPH_NXT .L00002758
    GRAPH_PRV get_ret_type@PLT
'X64_AMOCO.InstructionDEAD'>9836 [None]movq      80(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{'%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9841 [None]testq     %rax, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9844 [jcc]je        .L00002758
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)
	 dst=[<Symbol '.L00002758' section='.text', address=10072>]

<Symbol '.L0000267A' section='.text', address=9850>
    ENDER False -- NXT .L00002683
    CFG .L00002758
    CFG .L00002683
    GRAPH_NXT .L00002683
    GRAPH_NXT .L00002758
    GRAPH_PRV .L0000266C
'X64_AMOCO.InstructionDEAD'>9850 [None]cmpb      $0, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9853 [jcc]je        .L00002758
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)
	 dst=[<Symbol '.L00002758' section='.text', address=10072>]

<Symbol '.L00002683' section='.text', address=9859>
    ENDER False -- NXT .L000026C8
    CFG .L000026C8
    GRAPH_NXT .L000026C8
    GRAPH_PRV .L0000267A
'X64_AMOCO.InstructionDEAD'>9859 [None]movq      $72057594037927935, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9869 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rdx': [76]}:(16, 32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9873 [None]andq      %rax, %rbp
	 R['rax', 'rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rdx': [76]}:(16, 32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9876 [None]leaq      -1(%rbp), %rax
	 R['MEM', 'rbp', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rdx': [76]}:(16, 32, 40, 80)
'X64_AMOCO.InstructionDEAD'>9880 [None]movq      %rbp, 48(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rdx': [76]}:(16, 32, 40, 48, 80)
'X64_AMOCO.InstructionDEAD'>9885 [None]movl      $1, %ebp
	 R['rip'] W['rbp', 'rip']
	 D['rbp', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rdx': [76]}:(16, 32, 40, 48, 80)
'X64_AMOCO.InstructionDEAD'>9890 [None]movq      %rax, 8(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rdx': [76]}:(8, 16, 32, 40, 48, 80)
'X64_AMOCO.InstructionDEAD'>9895 [None]leaq      (%rbx,%rbx,2), %rax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rdx': [76]}:(8, 16, 32, 40, 48, 80)
'X64_AMOCO.InstructionDEAD'>9899 [None]movl      $3, %ebx
	 R['rip'] W['rbx', 'rip']
	 D['rbx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rdx': [76]}:(8, 16, 32, 40, 48, 80)
'X64_AMOCO.InstructionDEAD'>9904 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rdx': [76]}:(8, 16, 32, 40, 48, 80)
'X64_AMOCO.InstructionDEAD'>9908 [None]movq      %rax, 56(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rdx': [76]}:(8, 16, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9913 [None]leaq      75(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rax': [75], '%rdx': [76]}:(8, 16, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9918 [None]movq      %rax, 24(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rax': [75], '%rdx': [76]}:(8, 16, 24, 32, 40, 48, 56, 80)
'plasmasm.constants.P2Align'>9923 [None].p2align 4,,10
'plasmasm.constants.P2Align'>9923 [None].p2align 3

<Symbol '.L000026C8' section='.text', address=9928>
    ENDER False -- NXT .L000026DC
    CFG parseproto@PLT
    GRAPH_NXT parseproto@PLT
    GRAPH_PRV .L00002683
    GRAPH_PRV .L00002728
    GRAPH_PRV .L0000274B
    GRAPH_PRV .L00002808
    GRAPH_PRV .L00002840
    GRAPH_PRV .L000028E1
    GRAPH_PRV .L00002924
    GRAPH_PRV .L0000294C
    GRAPH_PRV .L0000296E
    GRAPH_PRV .L00002980
    GRAPH_PRV .L000029B4
    GRAPH_PRV .L000029DC
    GRAPH_PRV .L00002A38
    GRAPH_PRV .L00002A5E
    GRAPH_PRV .L00002AB0
'X64_AMOCO.InstructionDEAD'>9928 [None]movq      24(%rcx,%r13), %rdx
	 R['MEM', 'r13', 'rcx', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9933 [None]movq      24(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rflags', 'rsi']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9938 [None]movq      16(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9943 [sub]call      parseproto@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'parseproto@PLT' >]

<Symbol '.L000026DC' section='.text', address=9948>
    ENDER False -- NXT .L000026E4
    CFG .L00002769
    CFG .L000026E4
    GRAPH_NXT .L000026E4
    GRAPH_NXT .L00002769
    GRAPH_PRV parseproto@PLT
'X64_AMOCO.InstructionDEAD'>9948 [None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9950 [jcc]je        .L00002769
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002769' section='.text', address=10089>]

<Symbol '.L000026E4' section='.text', address=9956>
    ENDER False -- NXT .L000026EF
    CFG .L00002790
    CFG .L000026EF
    GRAPH_NXT .L000026EF
    GRAPH_NXT .L00002790
    GRAPH_PRV .L000026DC
'X64_AMOCO.InstructionDEAD'>9956 [None]cmpq      8(%rsp), %rbp
	 R['MEM', 'rbp', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9961 [jcc]jg        .L00002790
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002790' section='.text', address=10128>]

<Symbol '.L000026EF' section='.text', address=9967>
    ENDER False -- NXT .L00002713
    CFG .L000028D8
    CFG .L00002713
    GRAPH_NXT .L00002713
    GRAPH_NXT .L000028D8
    GRAPH_PRV .L000026E4
'X64_AMOCO.InstructionDEAD'>9967 [None]movq      32(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['r14', 'rcx', 'rdx', 'rsi']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9972 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['r14', 'rcx', 'rdx']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9976 [None]leaq      (%rsi,%rbp,8), %r14
	 R['MEM', 'rbp', 'rip', 'rsi'] W['r14', 'rip']
	 D['r14', 'rdx']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9980 [None]movq      (%r14), %rdx
	 R['MEM', 'r14', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9983 [None]leaq      (%rdx,%rdx,2), %rdx
	 R['MEM', 'rdx', 'rip'] W['rdx', 'rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9987 [None]salq      $4, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9991 [None]addq      %rcx, %rdx
	 R['rcx', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9994 [None]cmpl      $10, (%rdx)
	 R['MEM', 'rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>9997 [jcc]je        .L000028D8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000028D8' section='.text', address=10456>]

<Symbol '.L00002713' section='.text', address=10003>
    ENDER False -- NXT .L0000271F
    CFG .L000028B0
    CFG .L0000271F
    GRAPH_NXT .L0000271F
    GRAPH_NXT .L000028B0
    GRAPH_PRV .L000026EF
'X64_AMOCO.InstructionDEAD'>10003 [None]leal      -2(%rax), %edx
	 R['MEM', 'rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10006 [None]cmpl      $1, %edx
	 R['rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10009 [jcc]jbe       .L000028B0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000028B0' section='.text', address=10416>]

<Symbol '.L0000271F' section='.text', address=10015>
    ENDER False -- NXT .L00002728
    CFG .L000027B0
    CFG .L00002728
    GRAPH_NXT .L00002728
    GRAPH_NXT .L000027B0
    GRAPH_PRV .L00002713
'X64_AMOCO.InstructionDEAD'>10015 [None]cmpl      $4, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10018 [jcc]je        .L000027B0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000027B0' section='.text', address=10160>]

<Symbol '.L00002728' section='.text', address=10024>
    ENDER False -- NXT .L0000272D
    CFG .L000026C8
    CFG .L0000272D
    GRAPH_NXT .L000026C8
    GRAPH_NXT .L0000272D
    GRAPH_PRV .L0000271F
'X64_AMOCO.InstructionDEAD'>10024 [None]cmpl      $5, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10027 [jcc]je        .L000026C8
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.L0000272D' section='.text', address=10029>
    ENDER False -- NXT .L00002736
    CFG .L000028B0
    CFG .L00002736
    GRAPH_NXT .L00002736
    GRAPH_NXT .L000028B0
    GRAPH_PRV .L00002728
'X64_AMOCO.InstructionDEAD'>10029 [None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10032 [jcc]je        .L000028B0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000028B0' section='.text', address=10416>]

<Symbol '.L00002736' section='.text', address=10038>
    ENDER False -- NXT .L0000274B
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L0000272D
    GRAPH_PRV .L00002790
    GRAPH_PRV .L00002795
    GRAPH_PRV .L000028D8
    GRAPH_PRV .L000028E1
'X64_AMOCO.InstructionDEAD'>10038 [None]leaq      .LC31(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10045 [None]movl      %eax, %edx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10047 [None]movl      $2, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10052 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10054 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L0000274B' section='.text', address=10059>
    ENDER True -- NXT None
    CFG .L000026C8
    GRAPH_NXT .L000026C8
    GRAPH_PRV .L00002795
    GRAPH_PRV .L00002820
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>10059 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10063 [jmp]jmp       .L000026C8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.L00002754' section='.text', size=4, address=10068>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10068 [None].p2align 4,,10
'plasmasm.constants.P2Align'>10068 [None].p2align 3

<Symbol '.L00002758' section='.text', address=10072>
    ENDER False -- NXT .L0000275D
    CFG .L0000275D
    GRAPH_NXT .L0000275D
    GRAPH_PRV .L0000266C
    GRAPH_PRV .L0000267A
'X64_AMOCO.InstructionDEAD'>10072 [None]movl      $3, %ebx
	 R['rip'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rdi']
	 STACK:{'%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)

<Symbol '.L0000275D' section='.text', address=10077>
    ENDER False -- NXT .L00002769
    CFG vec_optimize@PLT
    GRAPH_NXT vec_optimize@PLT
    GRAPH_PRV .L00002758
    GRAPH_PRV .L000028F8
'X64_AMOCO.InstructionDEAD'>10077 [None]movq      32(%rsp), %rdi
	 R['MEM', 'rip', 'rsp'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)
'X64_AMOCO.InstructionDEAD'>10082 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)
'X64_AMOCO.InstructionDEAD'>10084 [sub]call      vec_optimize@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rcx': [88], '%rdx': [76]}:(16, 32, 40, 80)
	 dst=[<Symbol 'vec_optimize@PLT' >]

<Symbol '.L00002769' section='.text', address=10089>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV .L000026DC
    GRAPH_PRV vec_optimize@PLT
'X64_AMOCO.InstructionDEAD'>10089 [None]movq      avma@GOTPCREL(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['r14', 'r15', 'rax', 'rbp', 'rcx', 'rflags']
	 STACK:{'%rcx': [88], '%rdx': [76]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10096 [None]movq      40(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['r14', 'r15', 'rbp', 'rcx', 'rflags']
	 STACK:{'%rdx': [76]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10101 [None]movq      %rcx, (%rax)
	 R['rax', 'rcx', 'rip'] W['MEM', 'rip']
	 D['r14', 'r15', 'rbp', 'rflags']
	 STACK:{'%rdx': [76]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10104 [None]movq      (%r12), %rax
	 R['MEM', 'r12', 'rip'] W['rax', 'rip']
	 D['r14', 'r15', 'rax', 'rbp', 'rflags']
	 STACK:{'%rdx': [76]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10108 [None]movq      %rbx, 40(%rax,%r13)
	 R['r13', 'rax', 'rbx', 'rip'] W['MEM', 'rip']
	 D['r12', 'r14', 'r15', 'rbp', 'rflags']
	 STACK:{'%rdx': [76]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10113 [None]addq      $104, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rdx': [-28]}:(-96, -88, -80, -72, -64, -56, -48, -24)
'X64_AMOCO.InstructionDEAD'>10117 [None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'r15', 'rbp', 'rbx']
	 STACK:{'%rdx': [-36]}:(-104, -96, -88, -80, -72, -64, -56, -32)
'X64_AMOCO.InstructionDEAD'>10118 [None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'r15', 'rbp']
	 STACK:{'%rdx': [-44]}:(-112, -104, -96, -88, -80, -72, -64, -40)
'X64_AMOCO.InstructionDEAD'>10119 [None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'r15']
	 STACK:{'%rdx': [-52]}:(-120, -112, -104, -96, -88, -80, -72, -48)
'X64_AMOCO.InstructionDEAD'>10121 [None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14', 'r15']
	 STACK:{'%rdx': [-60]}:(-128, -120, -112, -104, -96, -88, -80, -56)
'X64_AMOCO.InstructionDEAD'>10123 [None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14', 'r15']
	 STACK:{'%rdx': [-68]}:(-136, -128, -120, -112, -104, -96, -88, -64)
'X64_AMOCO.InstructionDEAD'>10125 [None]popq      %r15
	 R['MEM', 'rip', 'rsp'] W['r15', 'rip', 'rsp']
	 D['r15']
	 STACK:{'%rdx': [-76]}:(-144, -136, -128, -120, -112, -104, -96, -72)
'X64_AMOCO.InstructionDEAD'>10127 [ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rdx': [-76]}:(-144, -136, -128, -120, -112, -104, -96, -72)
	 dst=[None]

<Symbol '.L00002790' section='.text', address=10128>
    ENDER False -- NXT .L00002795
    CFG .L00002736
    CFG .L00002795
    GRAPH_NXT .L00002736
    GRAPH_NXT .L00002795
    GRAPH_PRV .L000026E4
'X64_AMOCO.InstructionDEAD'>10128 [None]cmpl      $5, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10131 [jcc]ja        .L00002736
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002736' section='.text', address=10038>]

<Symbol '.L00002795' section='.text', address=10133>
    ENDER True -- NXT None
    CFG .L00002736
    CFG .L0000274B
    CFG .L000027B0
    CFG .L00002820
    CFG .L00002850
    GRAPH_NXT .L00002736
    GRAPH_NXT .L0000274B
    GRAPH_NXT .L000027B0
    GRAPH_NXT .L00002820
    GRAPH_NXT .L00002850
    GRAPH_PRV .L00002790
'X64_AMOCO.InstructionDEAD'>10133 [None]leaq      .LC000006E0(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdx', 'rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10140 [None]movl      %eax, %edx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10142 [None]movslq    (%rcx,%rdx,4), %rdx
	 R['MEM', 'rcx', 'rdx', 'rip'] W['rdx', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10146 [None]addq      %rcx, %rdx
	 R['rcx', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10149 [jmp]jmp       *%rdx
	 R['rdx', 'rip'] W['rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002736' section='.text', address=10038>, <Symbol '.L00002850' section='.text', address=10320>, <Symbol '.L00002820' section='.text', address=10272>, <Symbol '.L00002820' section='.text', address=10272>, <Symbol '.L000027B0' section='.text', address=10160>, <Symbol '.L0000274B' section='.text', address=10059>]

<Symbol '.L000027A7' section='.text', size=9, address=10151>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10151 [None].p2align 4

<Symbol '.L000027B0' section='.text', address=10160>
    ENDER False -- NXT .L000027BE
    CFG .L00002900
    CFG .L000027BE
    GRAPH_NXT .L000027BE
    GRAPH_NXT .L00002900
    GRAPH_PRV .L0000271F
    GRAPH_PRV .L00002795
    GRAPH_PRV .L000028E1
'X64_AMOCO.InstructionDEAD'>10160 [None]movsbl    75(%rsp), %edx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10165 [None]cmpb      $115, %dl
	 R['rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10168 [jcc]jne       .L00002900
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002900' section='.text', address=10496>]

<Symbol '.L000027BE' section='.text', address=10174>
    ENDER False -- NXT .L000027D9
    CFG .L00002808
    CFG .L000027D9
    GRAPH_NXT .L000027D9
    GRAPH_NXT .L00002808
    GRAPH_PRV .L000027B0
'X64_AMOCO.InstructionDEAD'>10174 [None]movq      48(%rsp), %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip']
	 D['r14', 'r15', 'rax', 'rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10179 [None]movq      32(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r15', 'rax', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10184 [None]subq      %rbp, %r14
	 R['r14', 'rbp', 'rip'] W['r14', 'rflags', 'rip']
	 D['r15', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10187 [None]leaq      (%rax,%rbp,8), %r15
	 R['MEM', 'rax', 'rbp', 'rip'] W['r15', 'rip']
	 D['r15', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10191 [None]movl      $1, %ebp
	 R['rip'] W['rbp', 'rip']
	 D['rbp', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10196 [None]testq     %r14, %r14
	 R['r14', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10199 [jcc]jle       .L00002808
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002808' section='.text', address=10248>]

<Symbol '.L000027D9' section='.text', address=10201>
    ENDER False -- NXT .L000027E0
    CFG .L000027E0
    GRAPH_NXT .L000027E0
    GRAPH_PRV .L000027BE
'plasmasm.constants.P2Align'>10201 [None].p2align 4

<Symbol '.L000027E0' section='.text', address=10208>
    ENDER False -- NXT .L000027F5
    CFG cattovec@PLT
    GRAPH_NXT cattovec@PLT
    GRAPH_PRV .L000027D9
    GRAPH_PRV .L000027FE
'X64_AMOCO.InstructionDEAD'>10208 [None]movq      -8(%r15,%rbp,8), %rdi
	 R['MEM', 'r15', 'rbp', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10213 [None]movl      $19, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10218 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10220 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10224 [sub]call      cattovec@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'cattovec@PLT' >]

<Symbol '.L000027F5' section='.text', address=10229>
    ENDER False -- NXT .L000027FE
    CFG vec_optimize@PLT
    GRAPH_NXT vec_optimize@PLT
    GRAPH_PRV cattovec@PLT
'X64_AMOCO.InstructionDEAD'>10229 [None]movl      %eax, %edi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10231 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10233 [sub]call      vec_optimize@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'vec_optimize@PLT' >]

<Symbol '.L000027FE' section='.text', address=10238>
    ENDER False -- NXT .L00002808
    CFG .L000027E0
    CFG .L00002808
    GRAPH_NXT .L000027E0
    GRAPH_NXT .L00002808
    GRAPH_PRV vec_optimize@PLT
'X64_AMOCO.InstructionDEAD'>10238 [None]cltq      
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10240 [None]andq      %rax, %rbx
	 R['rax', 'rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10243 [None]cmpq      %rbp, %r14
	 R['r14', 'rbp', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10246 [jcc]jge       .L000027E0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000027E0' section='.text', address=10208>]

<Symbol '.L00002808' section='.text', address=10248>
    ENDER True -- NXT None
    CFG .L000026C8
    GRAPH_NXT .L000026C8
    GRAPH_PRV .L000027BE
    GRAPH_PRV .L000027FE
'X64_AMOCO.InstructionDEAD'>10248 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rax', 'rbp', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10252 [None]movq      48(%rsp), %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip']
	 D['rax', 'rbp', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10257 [jmp]jmp       .L000026C8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.L00002816' section='.text', size=10, address=10262>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10262 [None].p2align 4

<Symbol '.L00002820' section='.text', address=10272>
    ENDER False -- NXT .L0000282B
    CFG .L0000274B
    CFG .L0000282B
    GRAPH_NXT .L0000274B
    GRAPH_NXT .L0000282B
    GRAPH_PRV .L00002795
    GRAPH_PRV .L000028E1
'X64_AMOCO.InstructionDEAD'>10272 [None]cmpq      8(%rsp), %rbp
	 R['MEM', 'rbp', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10277 [jcc]jg        .L0000274B
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L0000274B' section='.text', address=10059>]

<Symbol '.L0000282B' section='.text', address=10283>
    ENDER False -- NXT .L00002840
    CFG optimizenode@PLT
    GRAPH_NXT optimizenode@PLT
    GRAPH_PRV .L00002820
'X64_AMOCO.InstructionDEAD'>10283 [None]movq      32(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r14', 'rax', 'rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10288 [None]leaq      1(%rbp), %r14
	 R['MEM', 'rbp', 'rip'] W['r14', 'rip']
	 D['r14', 'rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10292 [None]movq      (%rax,%rbp,8), %rdi
	 R['MEM', 'rax', 'rbp', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10296 [None]movq      %r14, %rbp
	 R['r14', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10299 [sub]call      optimizenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'optimizenode@PLT' >]

<Symbol '.L00002840' section='.text', address=10304>
    ENDER True -- NXT None
    CFG .L000026C8
    GRAPH_NXT .L000026C8
    GRAPH_PRV optimizenode@PLT
'X64_AMOCO.InstructionDEAD'>10304 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10308 [jmp]jmp       .L000026C8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.L00002849' section='.text', size=7, address=10313>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10313 [None].p2align 4

<Symbol '.L00002850' section='.text', address=10320>
    ENDER False -- NXT .L00002870
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L00002795
'X64_AMOCO.InstructionDEAD'>10320 [None]movq      %r13, %rax
	 R['r13', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10323 [None]addq      (%r12), %rax
	 R['MEM', 'r12', 'rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10327 [None]leaq      .LC21(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10334 [None]movq      32(%rax), %rdx
	 R['MEM', 'rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10338 [None]movq      24(%rax), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10342 [None]leaq      -1(%rax,%rdx), %rsi
	 R['MEM', 'rax', 'rdx', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10347 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00002870' section='.text', address=10352>
    ENDER False -- NXT .L0000288D
    CFG .L000028B0
    CFG .L0000288D
    GRAPH_NXT .L0000288D
    GRAPH_NXT .L000028B0
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>10352 [None]movq      32(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r14', 'rax', 'rdx']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10357 [None]leaq      (%rax,%rbp,8), %r14
	 R['MEM', 'rax', 'rbp', 'rip'] W['r14', 'rip']
	 D['r14', 'rdx']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10361 [None]movq      (%r14), %rax
	 R['MEM', 'r14', 'rip'] W['rax', 'rip']
	 D['rax', 'rdx']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10364 [None]leaq      (%rax,%rax,2), %rdx
	 R['MEM', 'rax', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10368 [None]salq      $4, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10372 [None]addq      (%r12), %rdx
	 R['MEM', 'r12', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10376 [None]cmpl      $10, (%rdx)
	 R['MEM', 'rdx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10379 [jcc]jne       .L000028B0
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000028B0' section='.text', address=10416>]

<Symbol '.L0000288D' section='.text', address=10381>
    ENDER False -- NXT .L00002899
    CFG .L000028B5
    CFG .L00002899
    GRAPH_NXT .L00002899
    GRAPH_NXT .L000028B5
    GRAPH_PRV .L00002870
    GRAPH_PRV .L000028E1
'X64_AMOCO.InstructionDEAD'>10381 [None]movzbl    75(%rsp), %esi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rflags', 'rsi']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10386 [None]leal      -69(%rsi), %eax
	 R['MEM', 'rip', 'rsi'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10389 [None]testb     $-5, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10391 [jcc]je        .L000028B5
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000028B5' section='.text', address=10421>]

<Symbol '.L00002899' section='.text', address=10393>
    ENDER False -- NXT .L000028A9
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L0000288D
'X64_AMOCO.InstructionDEAD'>10393 [None]movq      24(%rdx), %rsi
	 R['MEM', 'rdx', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10397 [None]leaq      .LC22(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10404 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L000028A9' section='.text', address=10409>
    ENDER False -- NXT .L000028B0
    CFG .L000028B0
    GRAPH_NXT .L000028B0
    GRAPH_PRV compile_err@PLT
'plasmasm.constants.P2Align'>10409 [None].p2align 4

<Symbol '.L000028B0' section='.text', address=10416>
    ENDER False -- NXT .L000028B5
    CFG .L000028B5
    GRAPH_NXT .L000028B5
    GRAPH_PRV .L00002713
    GRAPH_PRV .L0000272D
    GRAPH_PRV .L00002870
    GRAPH_PRV .L000028A9
'X64_AMOCO.InstructionDEAD'>10416 [None]movzbl    75(%rsp), %esi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rflags', 'rsi']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)

<Symbol '.L000028B5' section='.text', address=10421>
    ENDER False -- NXT .L000028C0
    CFG .L00002A88
    CFG .L000028C0
    GRAPH_NXT .L000028C0
    GRAPH_NXT .L00002A88
    GRAPH_PRV .L0000288D
    GRAPH_PRV .L000028B0
'X64_AMOCO.InstructionDEAD'>10421 [None]leal      -38(%rsi), %eax
	 R['MEM', 'rip', 'rsi'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10424 [None]cmpb      $77, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10426 [jcc]ja        .L00002A88
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002A88' section='.text', address=10888>]

<Symbol '.L000028C0' section='.text', address=10432>
    ENDER True -- NXT None
    CFG .L00002930
    CFG .L00002960
    CFG .L00002980
    CFG .L000029A8
    CFG .L000029D0
    CFG .L00002A00
    CFG .L00002A50
    CFG .L00002A88
    GRAPH_NXT .L00002930
    GRAPH_NXT .L00002960
    GRAPH_NXT .L00002980
    GRAPH_NXT .L000029A8
    GRAPH_NXT .L000029D0
    GRAPH_NXT .L00002A00
    GRAPH_NXT .L00002A50
    GRAPH_NXT .L00002A88
    GRAPH_PRV .L000028B5
'X64_AMOCO.InstructionDEAD'>10432 [None]leaq      .LC000006F8(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10439 [None]movzbl    %al, %eax
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10442 [None]movslq    (%rcx,%rax,4), %rax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10446 [None]addq      %rcx, %rax
	 R['rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10449 [jmp]jmp       *%rax
	 R['rax', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002A50' section='.text', address=10832>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A50' section='.text', address=10832>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A00' section='.text', address=10752>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L000029D0' section='.text', address=10704>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L000029A8' section='.text', address=10664>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L000029D0' section='.text', address=10704>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L000029A8' section='.text', address=10664>, <Symbol '.L000029A8' section='.text', address=10664>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L000029A8' section='.text', address=10664>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002980' section='.text', address=10624>, <Symbol '.L00002960' section='.text', address=10592>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L000029A8' section='.text', address=10664>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002A88' section='.text', address=10888>, <Symbol '.L00002980' section='.text', address=10624>, <Symbol '.L00002930' section='.text', address=10544>]

<Symbol '.L000028D3' section='.text', size=5, address=10451>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10451 [None].p2align 4,,10
'plasmasm.constants.P2Align'>10451 [None].p2align 3

<Symbol '.L000028D8' section='.text', address=10456>
    ENDER False -- NXT .L000028E1
    CFG .L00002736
    CFG .L000028E1
    GRAPH_NXT .L00002736
    GRAPH_NXT .L000028E1
    GRAPH_PRV .L000026EF
'X64_AMOCO.InstructionDEAD'>10456 [None]cmpl      $5, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10459 [jcc]ja        .L00002736
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002736' section='.text', address=10038>]

<Symbol '.L000028E1' section='.text', address=10465>
    ENDER True -- NXT None
    CFG .L000026C8
    CFG .L00002736
    CFG .L000027B0
    CFG .L00002820
    CFG .L0000288D
    GRAPH_NXT .L000026C8
    GRAPH_NXT .L00002736
    GRAPH_NXT .L000027B0
    GRAPH_NXT .L00002820
    GRAPH_NXT .L0000288D
    GRAPH_PRV .L000028D8
'X64_AMOCO.InstructionDEAD'>10465 [None]leaq      .LC00000830(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags', 'rsi']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10472 [None]movl      %eax, %esi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10474 [None]movslq    (%rdi,%rsi,4), %rsi
	 R['MEM', 'rdi', 'rip', 'rsi'] W['rip', 'rsi']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10478 [None]addq      %rdi, %rsi
	 R['rdi', 'rip', 'rsi'] W['rflags', 'rip', 'rsi']
	 D['rflags']
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10481 [jmp]jmp       *%rsi
	 R['rip', 'rsi'] W['rip']
	 D[]
	 STACK:{'%rax': [75]}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002736' section='.text', address=10038>, <Symbol '.L0000288D' section='.text', address=10381>, <Symbol '.L00002820' section='.text', address=10272>, <Symbol '.L00002820' section='.text', address=10272>, <Symbol '.L000027B0' section='.text', address=10160>, <Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.L000028F3' section='.text', size=5, address=10483>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10483 [None].p2align 4,,10
'plasmasm.constants.P2Align'>10483 [None].p2align 3

<Symbol '.L000028F8' section='.text', address=10488>
    ENDER True -- NXT None
    CFG .L0000275D
    GRAPH_NXT .L0000275D
    GRAPH_PRV .L00002633
'X64_AMOCO.InstructionDEAD'>10488 [None]xorl      %ebx, %ebx
	 R['rflags', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rax', 'rbx', 'rdi']
	 STACK:{}:(32, 40, 80)
'X64_AMOCO.InstructionDEAD'>10490 [jmp]jmp       .L0000275D
	 R['rip'] W['rip']
	 D['rax', 'rdi']
	 STACK:{}:(32, 40, 80)
	 dst=[<Symbol '.L0000275D' section='.text', address=10077>]

<Symbol '.L000028FF' section='.text', size=1, address=10495>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10495 [None].p2align 4,,10
'plasmasm.constants.P2Align'>10495 [None].p2align 3

<Symbol '.L00002900' section='.text', address=10496>
    ENDER False -- NXT .L00002924
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L000027B0
'X64_AMOCO.InstructionDEAD'>10496 [None]movq      56(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r8', 'rax', 'rcx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10501 [None]addq      (%r12), %rax
	 R['MEM', 'r12', 'rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['r8', 'rcx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10505 [None]leaq      .LC30(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['r8', 'rcx', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10512 [None]movl      $5, %edi
	 R['rip'] W['rdi', 'rip']
	 D['r8', 'rcx', 'rdi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10517 [None]movq      32(%rax), %rcx
	 R['MEM', 'rax', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10521 [None]movq      24(%rax), %r8
	 R['MEM', 'rax', 'rip'] W['r8', 'rip']
	 D['r8']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10525 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10527 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00002924' section='.text', address=10532>
    ENDER True -- NXT None
    CFG .L000026C8
    GRAPH_NXT .L000026C8
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>10532 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10536 [jmp]jmp       .L000026C8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.L0000292D' section='.text', size=3, address=10541>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10541 [None].p2align 4,,10
'plasmasm.constants.P2Align'>10541 [None].p2align 3

<Symbol '.L00002930' section='.text', address=10544>
    ENDER False -- NXT .L00002943
    CFG cattovec@PLT
    GRAPH_NXT cattovec@PLT
    GRAPH_PRV .L000028C0
'X64_AMOCO.InstructionDEAD'>10544 [None]movq      (%r14), %rdi
	 R['MEM', 'r14', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10547 [None]movl      $19, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10552 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10554 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10558 [sub]call      cattovec@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'cattovec@PLT' >]

<Symbol '.L00002943' section='.text', address=10563>
    ENDER False -- NXT .L0000294C
    CFG vec_optimize@PLT
    GRAPH_NXT vec_optimize@PLT
    GRAPH_PRV cattovec@PLT
'X64_AMOCO.InstructionDEAD'>10563 [None]movl      %eax, %edi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10565 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10567 [sub]call      vec_optimize@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'vec_optimize@PLT' >]

<Symbol '.L0000294C' section='.text', address=10572>
    ENDER True -- NXT None
    CFG .L000026C8
    GRAPH_NXT .L000026C8
    GRAPH_PRV vec_optimize@PLT
'X64_AMOCO.InstructionDEAD'>10572 [None]cltq      
	 R['rax', 'rip'] W['rax', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10574 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10578 [None]andq      %rax, %rbx
	 R['rax', 'rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10581 [jmp]jmp       .L000026C8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.L0000295A' section='.text', size=6, address=10586>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10586 [None].p2align 4,,10
'plasmasm.constants.P2Align'>10586 [None].p2align 3

<Symbol '.L00002960' section='.text', address=10592>
    ENDER False -- NXT .L0000296E
    CFG optimizenode@PLT
    GRAPH_NXT optimizenode@PLT
    GRAPH_PRV .L000028C0
'X64_AMOCO.InstructionDEAD'>10592 [None]movq      (%r14), %rdi
	 R['MEM', 'r14', 'rip'] W['rdi', 'rip']
	 D['rbx', 'rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10595 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rbx', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10599 [None]xorl      %ebx, %ebx
	 R['rflags', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rbx']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10601 [sub]call      optimizenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'optimizenode@PLT' >]

<Symbol '.L0000296E' section='.text', address=10606>
    ENDER True -- NXT None
    CFG .L000026C8
    GRAPH_NXT .L000026C8
    GRAPH_PRV optimizenode@PLT
'X64_AMOCO.InstructionDEAD'>10606 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10610 [jmp]jmp       .L000026C8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.L00002977' section='.text', size=9, address=10615>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10615 [None].p2align 4

<Symbol '.L00002980' section='.text', address=10624>
    ENDER True -- NXT None
    CFG .L000026C8
    GRAPH_NXT .L000026C8
    GRAPH_PRV .L000028C0
'X64_AMOCO.InstructionDEAD'>10624 [None]movq      (%r14), %rax
	 R['MEM', 'r14', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10627 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10631 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10635 [None]leaq      (%rax,%rax,2), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10639 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10643 [None]movq      $3, 40(%rcx,%rax)
	 R['rax', 'rcx', 'rip'] W['MEM', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10652 [jmp]jmp       .L000026C8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.L000029A1' section='.text', size=7, address=10657>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10657 [None].p2align 4,,10
'plasmasm.constants.P2Align'>10657 [None].p2align 3

<Symbol '.L000029A8' section='.text', address=10664>
    ENDER False -- NXT .L000029B4
    CFG optimizenode@PLT
    GRAPH_NXT optimizenode@PLT
    GRAPH_PRV .L000028C0
'X64_AMOCO.InstructionDEAD'>10664 [None]movq      (%r14), %rdi
	 R['MEM', 'r14', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10667 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10671 [sub]call      optimizenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'optimizenode@PLT' >]

<Symbol '.L000029B4' section='.text', address=10676>
    ENDER True -- NXT None
    CFG .L000026C8
    GRAPH_NXT .L000026C8
    GRAPH_PRV optimizenode@PLT
'X64_AMOCO.InstructionDEAD'>10676 [None]movq      (%r14), %rax
	 R['MEM', 'r14', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10679 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10683 [None]leaq      (%rax,%rax,2), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10687 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10691 [None]andq      40(%rcx,%rax), %rbx
	 R['MEM', 'rax', 'rbx', 'rcx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10696 [jmp]jmp       .L000026C8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.L000029CD' section='.text', size=3, address=10701>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10701 [None].p2align 4,,10
'plasmasm.constants.P2Align'>10701 [None].p2align 3

<Symbol '.L000029D0' section='.text', address=10704>
    ENDER False -- NXT .L000029DC
    CFG optimizenode@PLT
    GRAPH_NXT optimizenode@PLT
    GRAPH_PRV .L000028C0
'X64_AMOCO.InstructionDEAD'>10704 [None]movq      (%r14), %rdi
	 R['MEM', 'r14', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10707 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10711 [sub]call      optimizenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'optimizenode@PLT' >]

<Symbol '.L000029DC' section='.text', address=10716>
    ENDER True -- NXT None
    CFG .L000026C8
    GRAPH_NXT .L000026C8
    GRAPH_PRV optimizenode@PLT
'X64_AMOCO.InstructionDEAD'>10716 [None]movq      (%r14), %rax
	 R['MEM', 'r14', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10719 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10723 [None]leaq      (%rax,%rax,2), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10727 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10731 [None]addq      %rcx, %rax
	 R['rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10734 [None]andq      40(%rax), %rbx
	 R['MEM', 'rax', 'rbx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10738 [None]movq      $3, 40(%rax)
	 R['rax', 'rip'] W['MEM', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10746 [jmp]jmp       .L000026C8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.L000029FF' section='.text', size=1, address=10751>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10751 [None].p2align 4,,10
'plasmasm.constants.P2Align'>10751 [None].p2align 3

<Symbol '.L00002A00' section='.text', address=10752>
    ENDER False -- NXT .L00002A1C
    CFG .L00002A30
    CFG .L00002A1C
    GRAPH_NXT .L00002A1C
    GRAPH_NXT .L00002A30
    GRAPH_PRV .L000028C0
'X64_AMOCO.InstructionDEAD'>10752 [None]movq      (%r14), %rax
	 R['MEM', 'r14', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10755 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10759 [None]leaq      (%rax,%rax,2), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['r14']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10763 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['r14']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10767 [None]addq      (%r12), %rax
	 R['MEM', 'r12', 'rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10771 [None]cmpl      $4, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10774 [None]movq      16(%rax), %r14
	 R['MEM', 'rax', 'rip'] W['r14', 'rip']
	 D['r14']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10778 [jcc]je        .L00002A30
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002A30' section='.text', address=10800>]

<Symbol '.L00002A1C' section='.text', address=10780>
    ENDER False -- NXT .L00002A30
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L00002A00
'X64_AMOCO.InstructionDEAD'>10780 [None]movq      32(%rax), %rsi
	 R['MEM', 'rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10784 [None]addq      24(%rax), %rsi
	 R['MEM', 'rax', 'rip', 'rsi'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10788 [None]leaq      .LC42(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10795 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00002A30' section='.text', address=10800>
    ENDER False -- NXT .L00002A38
    CFG optimizenode@PLT
    GRAPH_NXT optimizenode@PLT
    GRAPH_PRV .L00002A00
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>10800 [None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10803 [sub]call      optimizenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'optimizenode@PLT' >]

<Symbol '.L00002A38' section='.text', address=10808>
    ENDER True -- NXT None
    CFG .L000026C8
    GRAPH_NXT .L000026C8
    GRAPH_PRV optimizenode@PLT
'X64_AMOCO.InstructionDEAD'>10808 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10812 [None]leaq      (%r14,%r14,2), %rax
	 R['MEM', 'r14', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10816 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10820 [None]andq      40(%rcx,%rax), %rbx
	 R['MEM', 'rax', 'rbx', 'rcx', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10825 [jmp]jmp       .L000026C8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.L00002A4E' section='.text', size=2, address=10830>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10830 [None].p2align 4,,10
'plasmasm.constants.P2Align'>10830 [None].p2align 3

<Symbol '.L00002A50' section='.text', address=10832>
    ENDER False -- NXT .L00002A59
    CFG .L00002AB9
    CFG .L00002A59
    GRAPH_NXT .L00002A59
    GRAPH_NXT .L00002AB9
    GRAPH_PRV .L000028C0
'X64_AMOCO.InstructionDEAD'>10832 [None]cmpb      $38, %sil
	 R['rip', 'rsi'] W['rflags', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10836 [None]movq      (%r14), %rdi
	 R['MEM', 'r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10839 [jcc]je        .L00002AB9
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002AB9' section='.text', address=10937>]

<Symbol '.L00002A59' section='.text', address=10841>
    ENDER False -- NXT .L00002A5E
    CFG optimizenode@PLT
    GRAPH_NXT optimizenode@PLT
    GRAPH_PRV .L00002A50
    GRAPH_PRV .L00002AE4
'X64_AMOCO.InstructionDEAD'>10841 [sub]call      optimizenode@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'optimizenode@PLT' >]

<Symbol '.L00002A5E' section='.text', address=10846>
    ENDER True -- NXT None
    CFG .L000026C8
    GRAPH_NXT .L000026C8
    GRAPH_PRV optimizenode@PLT
'X64_AMOCO.InstructionDEAD'>10846 [None]movq      (%r14), %rax
	 R['MEM', 'r14', 'rip'] W['rax', 'rip']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10849 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rbx', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10853 [None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rbx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10857 [None]xorl      %ebx, %ebx
	 R['rflags', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rbx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10859 [None]leaq      (%rax,%rax,2), %rax
	 R['MEM', 'rax', 'rip'] W['rax', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10863 [None]salq      $4, %rax
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10867 [None]movq      $3, 40(%rcx,%rax)
	 R['rax', 'rcx', 'rip'] W['MEM', 'rip']
	 D['rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10876 [jmp]jmp       .L000026C8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.L00002A81' section='.text', size=7, address=10881>
    ENDER True -- NXT None
'plasmasm.constants.P2Align'>10881 [None].p2align 4,,10
'plasmasm.constants.P2Align'>10881 [None].p2align 3

<Symbol '.L00002A88' section='.text', address=10888>
    ENDER False -- NXT .L00002AB0
    CFG pari_err@PLT
    GRAPH_NXT pari_err@PLT
    GRAPH_PRV .L000028B5
    GRAPH_PRV .L000028C0
'X64_AMOCO.InstructionDEAD'>10888 [None]movq      56(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['r8', 'rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10893 [None]addq      (%r12), %rax
	 R['MEM', 'r12', 'rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10897 [None]movsbl    %sil, %edx
	 R['rip', 'rsi'] W['rdx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10901 [None]leaq      .LC29(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['r8', 'rcx', 'rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10908 [None]movl      $5, %edi
	 R['rip'] W['rdi', 'rip']
	 D['r8', 'rcx', 'rdi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10913 [None]movq      32(%rax), %rcx
	 R['MEM', 'rax', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10917 [None]movq      24(%rax), %r8
	 R['MEM', 'rax', 'rip'] W['r8', 'rip']
	 D['r8']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10921 [None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10923 [sub]call      pari_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'pari_err@PLT' >]

<Symbol '.L00002AB0' section='.text', address=10928>
    ENDER True -- NXT None
    CFG .L000026C8
    GRAPH_NXT .L000026C8
    GRAPH_PRV pari_err@PLT
'X64_AMOCO.InstructionDEAD'>10928 [None]movq      (%r12), %rcx
	 R['MEM', 'r12', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10932 [jmp]jmp       .L000026C8
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L000026C8' section='.text', address=9928>]

<Symbol '.LC00000000' section='.rodata', align=4, size=24, address=0, switch_table=(<Symbol '.LC00000000' section='.rodata', align=4, size=24, address=0, switch_table=(...)>, 4, 6)>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>0 .long	.L00000BE0-.LC00000000
'plasmasm.constants.Constant4Byte'>4 .long	.L00000C2D-.LC00000000
'plasmasm.constants.Constant4Byte'>8 .long	.L00000B70-.LC00000000
'plasmasm.constants.Constant4Byte'>12 .long	.L00000B40-.LC00000000
'plasmasm.constants.Constant4Byte'>16 .long	.L000009A0-.LC00000000
'plasmasm.constants.Constant4Byte'>20 .long	.L00000960-.LC00000000

<Symbol '.LC00000018' section='.rodata', size=180, address=24, switch_table=(<Symbol '.LC00000018' section='.rodata', size=180, address=24, switch_table=(...)>, 4, 45)>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>24 .long	.L00000F91-.LC00000018
'plasmasm.constants.Constant4Byte'>28 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>32 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>36 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>40 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>44 .long	.L00000F68-.LC00000018
'plasmasm.constants.Constant4Byte'>48 .long	.L00000F68-.LC00000018
'plasmasm.constants.Constant4Byte'>52 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>56 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>60 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>64 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>68 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>72 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>76 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>80 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>84 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>88 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>92 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>96 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>100 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>104 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>108 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>112 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>116 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>120 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>124 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>128 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>132 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>136 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>140 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>144 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>148 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>152 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>156 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>160 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>164 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>168 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>172 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>176 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>180 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>184 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>188 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>192 .long	.L00001040-.LC00000018
'plasmasm.constants.Constant4Byte'>196 .long	.L00000F27-.LC00000018
'plasmasm.constants.Constant4Byte'>200 .long	.L00000F27-.LC00000018

<Symbol '.LC000000CC' section='.rodata', size=312, address=204, switch_table=(<Symbol '.LC000000CC' section='.rodata', size=312, address=204, switch_table=(...)>, 4, 78)>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>204 .long	.L00001012-.LC000000CC
'plasmasm.constants.Constant4Byte'>208 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>212 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>216 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>220 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>224 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>228 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>232 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>236 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>240 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>244 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>248 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>252 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>256 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>260 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>264 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>268 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>272 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>276 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>280 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>284 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>288 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>292 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>296 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>300 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>304 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>308 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>312 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>316 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>320 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>324 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>328 .long	.L00001012-.LC000000CC
'plasmasm.constants.Constant4Byte'>332 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>336 .long	.L00001012-.LC000000CC
'plasmasm.constants.Constant4Byte'>340 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>344 .long	.L00001012-.LC000000CC
'plasmasm.constants.Constant4Byte'>348 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>352 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>356 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>360 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>364 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>368 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>372 .long	.L00000FBA-.LC000000CC
'plasmasm.constants.Constant4Byte'>376 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>380 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>384 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>388 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>392 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>396 .long	.L00000FED-.LC000000CC
'plasmasm.constants.Constant4Byte'>400 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>404 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>408 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>412 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>416 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>420 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>424 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>428 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>432 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>436 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>440 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>444 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>448 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>452 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>456 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>460 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>464 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>468 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>472 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>476 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>480 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>484 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>488 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>492 .long	.L00000FD2-.LC000000CC
'plasmasm.constants.Constant4Byte'>496 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>500 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>504 .long	.L00001040-.LC000000CC
'plasmasm.constants.Constant4Byte'>508 .long	.L00001012-.LC000000CC
'plasmasm.constants.Constant4Byte'>512 .long	.L00001012-.LC000000CC

<Symbol '.LC00000204' section='.rodata', size=312, address=516, switch_table=(<Symbol '.LC00000204' section='.rodata', size=312, address=516, switch_table=(...)>, 4, 78)>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>516 .long	.L0000131C-.LC00000204
'plasmasm.constants.Constant4Byte'>520 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>524 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>528 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>532 .long	.L0000131C-.LC00000204
'plasmasm.constants.Constant4Byte'>536 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>540 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>544 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>548 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>552 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>556 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>560 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>564 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>568 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>572 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>576 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>580 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>584 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>588 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>592 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>596 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>600 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>604 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>608 .long	.L000013B7-.LC00000204
'plasmasm.constants.Constant4Byte'>612 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>616 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>620 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>624 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>628 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>632 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>636 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>640 .long	.L00001411-.LC00000204
'plasmasm.constants.Constant4Byte'>644 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>648 .long	.L000014E1-.LC00000204
'plasmasm.constants.Constant4Byte'>652 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>656 .long	.L00001411-.LC00000204
'plasmasm.constants.Constant4Byte'>660 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>664 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>668 .long	.L00001515-.LC00000204
'plasmasm.constants.Constant4Byte'>672 .long	.L00001536-.LC00000204
'plasmasm.constants.Constant4Byte'>676 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>680 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>684 .long	.L00001515-.LC00000204
'plasmasm.constants.Constant4Byte'>688 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>692 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>696 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>700 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>704 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>708 .long	.L0000161C-.LC00000204
'plasmasm.constants.Constant4Byte'>712 .long	.L00001657-.LC00000204
'plasmasm.constants.Constant4Byte'>716 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>720 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>724 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>728 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>732 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>736 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>740 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>744 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>748 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>752 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>756 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>760 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>764 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>768 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>772 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>776 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>780 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>784 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>788 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>792 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>796 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>800 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>804 .long	.L000016B1-.LC00000204
'plasmasm.constants.Constant4Byte'>808 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>812 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>816 .long	.L0000175E-.LC00000204
'plasmasm.constants.Constant4Byte'>820 .long	.L000016D2-.LC00000204
'plasmasm.constants.Constant4Byte'>824 .long	.L0000122F-.LC00000204

<Symbol '.LC0000033C' section='.rodata', size=24, address=828, switch_table=(<Symbol '.LC0000033C' section='.rodata', size=24, address=828, switch_table=(...)>, 4, 6)>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>828 .long	.L00000BE0-.LC0000033C
'plasmasm.constants.Constant4Byte'>832 .long	.L00000C05-.LC0000033C
'plasmasm.constants.Constant4Byte'>836 .long	.L00000B70-.LC0000033C
'plasmasm.constants.Constant4Byte'>840 .long	.L00000B40-.LC0000033C
'plasmasm.constants.Constant4Byte'>844 .long	.L000009A0-.LC0000033C
'plasmasm.constants.Constant4Byte'>848 .long	.L00000960-.LC0000033C

<Symbol '.LC00000354' section='.rodata', size=24, address=852, switch_table=(<Symbol '.LC00000354' section='.rodata', size=24, address=852, switch_table=(...)>, 4, 6)>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>852 .long	.L00001F10-.LC00000354
'plasmasm.constants.Constant4Byte'>856 .long	.L00002190-.LC00000354
'plasmasm.constants.Constant4Byte'>860 .long	.L00002168-.LC00000354
'plasmasm.constants.Constant4Byte'>864 .long	.L00002140-.LC00000354
'plasmasm.constants.Constant4Byte'>868 .long	.L00002108-.LC00000354
'plasmasm.constants.Constant4Byte'>872 .long	.L00002131-.LC00000354

<Symbol '.LC0000036C' section='.rodata', size=180, address=876, switch_table=(<Symbol '.LC0000036C' section='.rodata', size=180, address=876, switch_table=(...)>, 4, 45)>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>876 .long	.L00002291-.LC0000036C
'plasmasm.constants.Constant4Byte'>880 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>884 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>888 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>892 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>896 .long	.L00002266-.LC0000036C
'plasmasm.constants.Constant4Byte'>900 .long	.L00002266-.LC0000036C
'plasmasm.constants.Constant4Byte'>904 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>908 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>912 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>916 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>920 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>924 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>928 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>932 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>936 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>940 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>944 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>948 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>952 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>956 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>960 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>964 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>968 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>972 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>976 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>980 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>984 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>988 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>992 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>996 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>1000 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>1004 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>1008 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>1012 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>1016 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>1020 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>1024 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>1028 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>1032 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>1036 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>1040 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>1044 .long	.L000022FE-.LC0000036C
'plasmasm.constants.Constant4Byte'>1048 .long	.L00002226-.LC0000036C
'plasmasm.constants.Constant4Byte'>1052 .long	.L00002226-.LC0000036C

<Symbol '.LC00000420' section='.rodata', size=312, address=1056, switch_table=(<Symbol '.LC00000420' section='.rodata', size=312, address=1056, switch_table=(...)>, 4, 78)>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>1056 .long	.L00002131-.LC00000420
'plasmasm.constants.Constant4Byte'>1060 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1064 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1068 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1072 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1076 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1080 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1084 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1088 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1092 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1096 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1100 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1104 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1108 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1112 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1116 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1120 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1124 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1128 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1132 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1136 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1140 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1144 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1148 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1152 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1156 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1160 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1164 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1168 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1172 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1176 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1180 .long	.L00002131-.LC00000420
'plasmasm.constants.Constant4Byte'>1184 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1188 .long	.L00002131-.LC00000420
'plasmasm.constants.Constant4Byte'>1192 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1196 .long	.L00002131-.LC00000420
'plasmasm.constants.Constant4Byte'>1200 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1204 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1208 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1212 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1216 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1220 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1224 .long	.L000021F1-.LC00000420
'plasmasm.constants.Constant4Byte'>1228 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1232 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1236 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1240 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1244 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1248 .long	.L00002131-.LC00000420
'plasmasm.constants.Constant4Byte'>1252 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1256 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1260 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1264 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1268 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1272 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1276 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1280 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1284 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1288 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1292 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1296 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1300 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1304 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1308 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1312 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1316 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1320 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1324 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1328 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1332 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1336 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1340 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1344 .long	.L000021D0-.LC00000420
'plasmasm.constants.Constant4Byte'>1348 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1352 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1356 .long	.L0000231E-.LC00000420
'plasmasm.constants.Constant4Byte'>1360 .long	.L00002131-.LC00000420
'plasmasm.constants.Constant4Byte'>1364 .long	.L00002131-.LC00000420

<Symbol '.LC00000558' section='.rodata', size=312, address=1368, switch_table=(<Symbol '.LC00000558' section='.rodata', size=312, address=1368, switch_table=(...)>, 4, 78)>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>1368 .long	.L00001F10-.LC00000558
'plasmasm.constants.Constant4Byte'>1372 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1376 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1380 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1384 .long	.L00001F10-.LC00000558
'plasmasm.constants.Constant4Byte'>1388 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1392 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1396 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1400 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1404 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1408 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1412 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1416 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1420 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1424 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1428 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1432 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1436 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1440 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1444 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1448 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1452 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1456 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1460 .long	.L00001F10-.LC00000558
'plasmasm.constants.Constant4Byte'>1464 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1468 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1472 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1476 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1480 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1484 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1488 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1492 .long	.L00001F10-.LC00000558
'plasmasm.constants.Constant4Byte'>1496 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1500 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1504 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1508 .long	.L00001F10-.LC00000558
'plasmasm.constants.Constant4Byte'>1512 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1516 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1520 .long	.L000022E6-.LC00000558
'plasmasm.constants.Constant4Byte'>1524 .long	.L000022E6-.LC00000558
'plasmasm.constants.Constant4Byte'>1528 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1532 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1536 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1540 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1544 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1548 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1552 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1556 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1560 .long	.L00001F10-.LC00000558
'plasmasm.constants.Constant4Byte'>1564 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1568 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1572 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1576 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1580 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1584 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1588 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1592 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1596 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1600 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1604 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1608 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1612 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1616 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1620 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1624 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1628 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1632 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1636 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1640 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1644 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1648 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1652 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1656 .long	.L000021D0-.LC00000558
'plasmasm.constants.Constant4Byte'>1660 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1664 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1668 .long	.L00002131-.LC00000558
'plasmasm.constants.Constant4Byte'>1672 .long	.L000022CE-.LC00000558
'plasmasm.constants.Constant4Byte'>1676 .long	.L000022CE-.LC00000558

<Symbol '.LC00000690' section='.rodata', size=80, address=1680, switch_table=(<Symbol '.LC00000690' section='.rodata', size=80, address=1680, switch_table=(...)>, 4, None)>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>1680 .long	.L000024A0-.LC00000690
'plasmasm.constants.Constant4Byte'>1684 .long	.L00002598-.LC00000690
'plasmasm.constants.Constant4Byte'>1688 .long	.L00002598-.LC00000690
'plasmasm.constants.Constant4Byte'>1692 .long	.L00002598-.LC00000690
'plasmasm.constants.Constant4Byte'>1696 .long	.L000024E0-.LC00000690
'plasmasm.constants.Constant4Byte'>1700 .long	.L00002500-.LC00000690
'plasmasm.constants.Constant4Byte'>1704 .long	.L00002598-.LC00000690
'plasmasm.constants.Constant4Byte'>1708 .long	.L00002598-.LC00000690
'plasmasm.constants.Constant4Byte'>1712 .long	.L00002518-.LC00000690
'plasmasm.constants.Constant4Byte'>1716 .long	.L00002530-.LC00000690
'plasmasm.constants.Constant4Byte'>1720 .long	.L00002548-.LC00000690
'plasmasm.constants.Constant4Byte'>1724 .long	.L00002598-.LC00000690
'plasmasm.constants.Constant4Byte'>1728 .long	.L00002558-.LC00000690
'plasmasm.constants.Constant4Byte'>1732 .long	.L00002548-.LC00000690
'plasmasm.constants.Constant4Byte'>1736 .long	.L00002548-.LC00000690
'plasmasm.constants.Constant4Byte'>1740 .long	.L00002570-.LC00000690
'plasmasm.constants.Constant4Byte'>1744 .long	.L00002548-.LC00000690
'plasmasm.constants.Constant4Byte'>1748 .long	.L00002460-.LC00000690
'plasmasm.constants.Constant4Byte'>1752 .long	.L00002440-.LC00000690
'plasmasm.constants.Constant4Byte'>1756 .long	.L00002478-.LC00000690

<Symbol '.LC000006E0' section='.rodata', size=24, address=1760, switch_table=(<Symbol '.LC000006E0' section='.rodata', size=24, address=1760, switch_table=(...)>, 4, 6)>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>1760 .long	.L00002736-.LC000006E0
'plasmasm.constants.Constant4Byte'>1764 .long	.L00002850-.LC000006E0
'plasmasm.constants.Constant4Byte'>1768 .long	.L00002820-.LC000006E0
'plasmasm.constants.Constant4Byte'>1772 .long	.L00002820-.LC000006E0
'plasmasm.constants.Constant4Byte'>1776 .long	.L000027B0-.LC000006E0
'plasmasm.constants.Constant4Byte'>1780 .long	.L0000274B-.LC000006E0

<Symbol '.LC000006F8' section='.rodata', size=312, address=1784, switch_table=(<Symbol '.LC000006F8' section='.rodata', size=312, address=1784, switch_table=(...)>, 4, 78)>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>1784 .long	.L00002A50-.LC000006F8
'plasmasm.constants.Constant4Byte'>1788 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1792 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1796 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1800 .long	.L00002A50-.LC000006F8
'plasmasm.constants.Constant4Byte'>1804 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1808 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1812 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1816 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1820 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1824 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1828 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1832 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1836 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1840 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1844 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1848 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1852 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1856 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1860 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1864 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1868 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1872 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1876 .long	.L00002A00-.LC000006F8
'plasmasm.constants.Constant4Byte'>1880 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1884 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1888 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1892 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1896 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1900 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1904 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1908 .long	.L000029D0-.LC000006F8
'plasmasm.constants.Constant4Byte'>1912 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1916 .long	.L000029A8-.LC000006F8
'plasmasm.constants.Constant4Byte'>1920 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1924 .long	.L000029D0-.LC000006F8
'plasmasm.constants.Constant4Byte'>1928 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1932 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1936 .long	.L000029A8-.LC000006F8
'plasmasm.constants.Constant4Byte'>1940 .long	.L000029A8-.LC000006F8
'plasmasm.constants.Constant4Byte'>1944 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1948 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1952 .long	.L000029A8-.LC000006F8
'plasmasm.constants.Constant4Byte'>1956 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1960 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1964 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1968 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1972 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1976 .long	.L00002980-.LC000006F8
'plasmasm.constants.Constant4Byte'>1980 .long	.L00002960-.LC000006F8
'plasmasm.constants.Constant4Byte'>1984 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1988 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1992 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>1996 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2000 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2004 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2008 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2012 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2016 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2020 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2024 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2028 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2032 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2036 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2040 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2044 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2048 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2052 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2056 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2060 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2064 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2068 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2072 .long	.L000029A8-.LC000006F8
'plasmasm.constants.Constant4Byte'>2076 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2080 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2084 .long	.L00002A88-.LC000006F8
'plasmasm.constants.Constant4Byte'>2088 .long	.L00002980-.LC000006F8
'plasmasm.constants.Constant4Byte'>2092 .long	.L00002930-.LC000006F8

<Symbol '.LC00000830' section='.rodata', size=24, address=2096, switch_table=(<Symbol '.LC00000830' section='.rodata', size=24, address=2096, switch_table=(...)>, 4, 6)>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>2096 .long	.L00002736-.LC00000830
'plasmasm.constants.Constant4Byte'>2100 .long	.L0000288D-.LC00000830
'plasmasm.constants.Constant4Byte'>2104 .long	.L00002820-.LC00000830
'plasmasm.constants.Constant4Byte'>2108 .long	.L00002820-.LC00000830
'plasmasm.constants.Constant4Byte'>2112 .long	.L000027B0-.LC00000830
'plasmasm.constants.Constant4Byte'>2116 .long	.L000026C8-.LC00000830

<Symbol '.L00002AB9' section='.text', address=10937>
    ENDER False -- NXT .L00002ACD
    CFG .L00002AE4
    CFG .L00002ACD
    GRAPH_NXT .L00002ACD
    GRAPH_NXT .L00002AE4
    GRAPH_PRV .L00002A50
'X64_AMOCO.InstructionDEAD'>10937 [None]leaq      (%rdi,%rdi,2), %rbx
	 R['MEM', 'rdi', 'rip'] W['rbx', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10941 [None]salq      $4, %rbx
	 R['rbx', 'rflags', 'rip'] W['rbx', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10945 [None]movq      %rbx, %rax
	 R['rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10948 [None]addq      (%r12), %rax
	 R['MEM', 'r12', 'rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10952 [None]cmpl      $12, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10955 [jcc]je        .L00002AE4
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002AE4' section='.text', address=10980>]

<Symbol '.L00002ACD' section='.text', address=10957>
    ENDER False -- NXT .L00002ADD
    CFG compile_err@PLT
    GRAPH_NXT compile_err@PLT
    GRAPH_PRV .L00002AB9
'X64_AMOCO.InstructionDEAD'>10957 [None]movq      24(%rax), %rsi
	 R['MEM', 'rax', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10961 [None]leaq      .LC26(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10968 [sub]call      compile_err@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol 'compile_err@PLT' >]

<Symbol '.L00002ADD' section='.text', address=10973>
    ENDER False -- NXT .L00002AE4
    CFG .L00002AE4
    GRAPH_NXT .L00002AE4
    GRAPH_PRV compile_err@PLT
'X64_AMOCO.InstructionDEAD'>10973 [None]movq      %rbx, %rax
	 R['rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10976 [None]addq      (%r12), %rax
	 R['MEM', 'r12', 'rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)

<Symbol '.L00002AE4' section='.text', address=10980>
    ENDER True -- NXT None
    CFG .L00002A59
    GRAPH_NXT .L00002A59
    GRAPH_PRV .L00002AB9
    GRAPH_PRV .L00002ADD
'X64_AMOCO.InstructionDEAD'>10980 [None]movq      8(%rax), %rdi
	 R['MEM', 'rax', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
'X64_AMOCO.InstructionDEAD'>10984 [jmp]jmp       .L00002A59
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{}:(8, 16, 24, 32, 40, 48, 56, 80)
	 dst=[<Symbol '.L00002A59' section='.text', address=10841>]

<Symbol 'foo.20841' section='.bss', type='object', bind='local', align=8, size=8, address=0>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>0 .zero	8

<Symbol 'foo.20737' section='.bss', type='object', bind='local', align=8, size=8, address=8>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>8 .zero	8

<Symbol '.LC0' section='.rodata.str1.1', bind='local', size=0, address=0>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>0 .string	"lg()"

<Symbol '.LC1' section='.rodata.str1.1', bind='local', size=0, address=5>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>5 .string	"unfinished string"

<Symbol '.LC3' section='.rodata.str1.8', bind='local', size=0, address=0>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>0 .string	"function has incomplete prototype"

<Symbol '.LC00000022.str1.8' section='.rodata.str1.8', type='padding', address=34>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>34 .zero	6

<Symbol '.LC4' section='.rodata.str1.8', bind='local', align=8, size=0, address=40>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>40 .string	"function prototype is not supported"

<Symbol '.LC7' section='.rodata.str1.1', bind='local', size=0, address=23>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>23 .string	"compilecast, type unknown %ld"

<Symbol '.LC0000004C.str1.8' section='.rodata.str1.8', type='padding', address=76>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant4Byte'>76 .long	0

<Symbol '.LC6' section='.rodata.str1.8', bind='local', align=8, size=0, address=80>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>80 .string	"this should be a small integer"

<Symbol '.LC9' section='.rodata.str1.1', bind='local', size=0, address=53>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>53 .string	"if"

<Symbol '.LC10' section='.rodata.str1.1', bind='local', size=0, address=56>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>56 .string	"_void_if"

<Symbol '.LC11' section='.rodata.str1.1', bind='local', size=0, address=65>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>65 .string	"my"

<Symbol '.LC12' section='.rodata.str1.1', bind='local', size=0, address=68>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>68 .string	"local"

<Symbol '.LC13' section='.rodata.str1.1', bind='local', size=0, address=74>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>74 .string	"global"

<Symbol '.LC14' section='.rodata.str1.1', bind='local', size=0, address=81>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>81 .string	"O"

<Symbol '.LC15' section='.rodata.str1.1', bind='local', size=0, address=83>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>83 .string	"o"

<Symbol '.LC16' section='.rodata.str1.1', bind='local', size=0, address=85>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>85 .string	"wrong number of arguments"

<Symbol '.LC17' section='.rodata.str1.1', bind='local', size=0, address=111>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>111 .string	"O(_^_)"

<Symbol '.LC18' section='.rodata.str1.1', bind='local', size=0, address=118>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>118 .string	"_^s"

<Symbol '.LC20' section='.rodata.str1.1', bind='local', size=0, address=122>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>122 .string	"unknown function"

<Symbol '.LC21' section='.rodata.str1.1', bind='local', size=0, address=139>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>139 .string	"too few arguments"

<Symbol '.LC22' section='.rodata.str1.1', bind='local', size=0, address=157>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>157 .string	"missing mandatory argument"

<Symbol '.LC23' section='.rodata.str1.1', bind='local', size=0, address=184>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>184 .string	"unexpected ';'"

<Symbol '.LC25' section='.rodata.str1.1', bind='local', size=0, address=199>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>199 .string	"_eval_mnemonic"

<Symbol '.LC26' section='.rodata.str1.1', bind='local', size=0, address=214>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>214 .string	"expected character: '&'"

<Symbol '.LC27' section='.rodata.str1.1', bind='local', size=0, address=238>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>238 .string	"missing variable name"

<Symbol '.LC28' section='.rodata.str1.1', bind='local', size=0, address=260>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>260 .string	"Str"

<Symbol '.LC31' section='.rodata.str1.1', bind='local', size=0, address=264>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>264 .string	"PPproto %d in compilefunc"

<Symbol '.LC32' section='.rodata.str1.1', bind='local', size=0, address=290>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>290 .string	"too many arguments"

<Symbol '.LC0000006F.str1.8' section='.rodata.str1.8', type='padding', address=111>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant1Byte'>111 .byte	0

<Symbol '.LC19' section='.rodata.str1.8', bind='local', align=2, size=0, address=112>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>112 .string	"expected character: ',' or ')' instead of"

<Symbol '.LC0000009A.str1.8' section='.rodata.str1.8', type='padding', address=154>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>154 .zero	6

<Symbol '.LC24' section='.rodata.str1.8', bind='local', align=8, size=0, address=160>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>160 .string	"missing flag in string function signature"

<Symbol '.LC000000CA.str1.8' section='.rodata.str1.8', type='padding', address=202>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>202 .zero	6

<Symbol '.LC29' section='.rodata.str1.8', bind='local', align=8, size=0, address=208>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>208 .string	"Unknown prototype code `%c' for `%.*s'"

<Symbol '.LC000000F7.str1.8' section='.rodata.str1.8', type='padding', address=247>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant1Byte'>247 .byte	0

<Symbol '.LC30' section='.rodata.str1.8', bind='local', align=2, size=0, address=248>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>248 .string	"Unknown prototype code `%c*' for `%.*s'"

<Symbol '.LC34' section='.rodata.str1.8', bind='local', size=0, address=288>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>288 .string	"too many parameters for closure `%s'"

<Symbol '.LC00000145.str1.8' section='.rodata.str1.8', type='padding', address=325>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>325 .zero	3

<Symbol '.LC35' section='.rodata.str1.8', bind='local', align=4, size=0, address=328>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>328 .string	"Unknown prototype code `D%c' for `%s'"

<Symbol '.LC0000016E.str1.8' section='.rodata.str1.8', type='padding', address=366>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant2Byte'>366 .value	0

<Symbol '.LC36' section='.rodata.str1.8', bind='local', align=4, size=0, address=368>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>368 .string	"Unknown prototype code `D...,%c,' for `%s'"

<Symbol '.LC0000019B.str1.8' section='.rodata.str1.8', type='padding', address=411>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>411 .zero	5

<Symbol '.LC37' section='.rodata.str1.8', bind='local', align=8, size=0, address=416>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>416 .string	"Unknown prototype code `%c*' for `%s'"

<Symbol '.LC39' section='.rodata.str1.1', bind='local', size=0, address=309>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>309 .string	"optimizenode"

<Symbol '.LC40' section='.rodata.str1.1', bind='local', size=0, address=322>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>322 .string	"unexpected character '&'"

<Symbol '.LC000001C6.str1.8' section='.rodata.str1.8', type='padding', address=454>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.Constant2Byte'>454 .value	0

<Symbol '.LC42' section='.rodata.str1.8', bind='local', align=4, size=0, address=456>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantStr'>456 .string	"expected character: '=' instead of"

<Symbol 's_opcode' section='COM', type='object', bind='globl', align=32, size=32, address=682>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>682 .zero	32

<Symbol 's_lvar' section='COM', type='object', bind='globl', align=32, size=32, address=683>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>683 .zero	32

<Symbol 'localvars' section='COM', type='object', bind='globl', align=8, size=8, address=684>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>684 .zero	8

<Symbol 'dbgstart' section='COM', type='object', bind='globl', align=8, size=8, address=685>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>685 .zero	8

<Symbol 'frames' section='COM', type='object', bind='globl', align=8, size=8, address=686>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>686 .zero	8

<Symbol 'dbginfo' section='COM', type='object', bind='globl', align=8, size=8, address=687>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>687 .zero	8

<Symbol 'offset' section='COM', type='object', bind='globl', align=8, size=8, address=688>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>688 .zero	8

<Symbol 'data' section='COM', type='object', bind='globl', align=8, size=8, address=689>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>689 .zero	8

<Symbol 'operand' section='COM', type='object', bind='globl', align=8, size=8, address=690>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>690 .zero	8

<Symbol 'opcode' section='COM', type='object', bind='globl', align=8, size=8, address=691>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>691 .zero	8

<Symbol 's_frame' section='COM', type='object', bind='globl', align=32, size=32, address=692>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>692 .zero	32

<Symbol 's_dbginfo' section='COM', type='object', bind='globl', align=32, size=32, address=693>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>693 .zero	32

<Symbol 's_data' section='COM', type='object', bind='globl', align=32, size=32, address=694>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>694 .zero	32

<Symbol 's_operand' section='COM', type='object', bind='globl', align=32, size=32, address=695>
    ENDER False -- NXT None
    CFG None
'plasmasm.constants.ConstantZero'>695 .zero	32

<Symbol '.L00000960-.LC00000000' >

<Symbol '.L00000960-.LC0000033C' >

<Symbol '.L000009A0-.LC00000000' >

<Symbol '.L000009A0-.LC0000033C' >

<Symbol '.L00000B40-.LC00000000' >

<Symbol '.L00000B40-.LC0000033C' >

<Symbol '.L00000B70-.LC00000000' >

<Symbol '.L00000B70-.LC0000033C' >

<Symbol '.L00000BE0-.LC00000000' >

<Symbol '.L00000BE0-.LC0000033C' >

<Symbol '.L00000C05-.LC0000033C' >

<Symbol '.L00000C2D-.LC00000000' >

<Symbol '.L00000F27-.LC00000018' >

<Symbol '.L00000F68-.LC00000018' >

<Symbol '.L00000F91-.LC00000018' >

<Symbol '.L00000FBA-.LC000000CC' >

<Symbol '.L00000FD2-.LC000000CC' >

<Symbol '.L00000FED-.LC000000CC' >

<Symbol '.L00001012-.LC000000CC' >

<Symbol '.L00001040-.LC00000018' >

<Symbol '.L00001040-.LC000000CC' >

<Symbol '.L0000122F-.LC00000204' >

<Symbol '.L0000131C-.LC00000204' >

<Symbol '.L000013B7-.LC00000204' >

<Symbol '.L00001411-.LC00000204' >

<Symbol '.L000014E1-.LC00000204' >

<Symbol '.L00001515-.LC00000204' >

<Symbol '.L00001536-.LC00000204' >

<Symbol '.L0000161C-.LC00000204' >

<Symbol '.L00001657-.LC00000204' >

<Symbol '.L000016B1-.LC00000204' >

<Symbol '.L000016D2-.LC00000204' >

<Symbol '.L0000175E-.LC00000204' >

<Symbol '.L00001F10-.LC00000354' >

<Symbol '.L00001F10-.LC00000558' >

<Symbol '.L00002108-.LC00000354' >

<Symbol '.L00002131-.LC00000354' >

<Symbol '.L00002131-.LC00000420' >

<Symbol '.L00002131-.LC00000558' >

<Symbol '.L00002140-.LC00000354' >

<Symbol '.L00002168-.LC00000354' >

<Symbol '.L00002190-.LC00000354' >

<Symbol '.L000021D0-.LC00000420' >

<Symbol '.L000021D0-.LC00000558' >

<Symbol '.L000021F1-.LC00000420' >

<Symbol '.L00002226-.LC0000036C' >

<Symbol '.L00002266-.LC0000036C' >

<Symbol '.L00002291-.LC0000036C' >

<Symbol '.L000022CE-.LC00000558' >

<Symbol '.L000022E6-.LC00000558' >

<Symbol '.L000022FE-.LC0000036C' >

<Symbol '.L0000231E-.LC00000420' >

<Symbol '.L00002440-.LC00000690' >

<Symbol '.L00002460-.LC00000690' >

<Symbol '.L00002478-.LC00000690' >

<Symbol '.L000024A0-.LC00000690' >

<Symbol '.L000024E0-.LC00000690' >

<Symbol '.L00002500-.LC00000690' >

<Symbol '.L00002518-.LC00000690' >

<Symbol '.L00002530-.LC00000690' >

<Symbol '.L00002548-.LC00000690' >

<Symbol '.L00002558-.LC00000690' >

<Symbol '.L00002570-.LC00000690' >

<Symbol '.L00002598-.LC00000690' >

<Symbol '.L000026C8-.LC00000830' >

<Symbol '.L00002736-.LC000006E0' >

<Symbol '.L00002736-.LC00000830' >

<Symbol '.L0000274B-.LC000006E0' >

<Symbol '.L000027B0-.LC000006E0' >

<Symbol '.L000027B0-.LC00000830' >

<Symbol '.L00002820-.LC000006E0' >

<Symbol '.L00002820-.LC00000830' >

<Symbol '.L00002850-.LC000006E0' >

<Symbol '.L0000288D-.LC00000830' >

<Symbol '.L00002930-.LC000006F8' >

<Symbol '.L00002960-.LC000006F8' >

<Symbol '.L00002980-.LC000006F8' >

<Symbol '.L000029A8-.LC000006F8' >

<Symbol '.L000029D0-.LC000006F8' >

<Symbol '.L00002A00-.LC000006F8' >

<Symbol '.L00002A50-.LC000006F8' >

<Symbol '.L00002A88-.LC000006F8' >

<Symbol '_GLOBAL_OFFSET_TABLE_' bind='globl'>

<Symbol 'avma' bind='globl'>

<Symbol 'avma@GOTPCREL' >

<Symbol 'bot' bind='globl'>

<Symbol 'bot@GOTPCREL' >

<Symbol 'cattovec' bind='globl'>

<Symbol 'cattovec@PLT' >
    GRAPH_NXT .L00000A71
    GRAPH_NXT .L00001255
    GRAPH_NXT .L000027F5
    GRAPH_NXT .L00002943
    GRAPH_PRV .L00000A60
    GRAPH_PRV .L0000122F
    GRAPH_PRV .L000027E0
    GRAPH_PRV .L00002930
-- STACK00 ['.L00000A71']
-- STACK01 ['.L00001255']
-- STACK02 ['.L000027F5']
-- STACK03 ['.L00002943']

<Symbol 'checkdups' bind='globl'>

<Symbol 'checkdups@PLT' >
    GRAPH_NXT .L00000BA9
    GRAPH_NXT .L00001080
    GRAPH_NXT .L0000197C
    GRAPH_NXT .L00001B84
    GRAPH_PRV .L00000B9A
    GRAPH_PRV .L00001073
    GRAPH_PRV .L0000196F
    GRAPH_PRV .L00001B6E
-- STACK00 ['.L00000BA9']
-- STACK01 ['.L00001080']
-- STACK02 ['.L0000197C']
-- STACK03 ['.L00001B84']

<Symbol 'compatible' bind='globl'>

<Symbol 'compatible@GOTPCREL' >

<Symbol 'compileX.c' bind='file'>

<Symbol 'compile_err' bind='globl'>

<Symbol 'compile_err@PLT' >
    GRAPH_NXT .L00000127
    GRAPH_NXT .L0000023D
    GRAPH_NXT .L000002C9
    GRAPH_NXT .L00000315
    GRAPH_NXT .L00000C2D
    GRAPH_NXT .L00000C8F
    GRAPH_NXT .L00000DA4
    GRAPH_NXT .L00001830
    GRAPH_NXT .L00001845
    GRAPH_NXT .L0000189C
    GRAPH_NXT .L000019E7
    GRAPH_NXT .L00001B6C
    GRAPH_NXT .L00001C3B
    GRAPH_NXT .L00001DEA
    GRAPH_NXT .L00002870
    GRAPH_NXT .L000028A9
    GRAPH_NXT .L00002A30
    GRAPH_NXT .L00002ADD
    GRAPH_PRV .L00000118
    GRAPH_PRV .L0000022E
    GRAPH_PRV .L000002BA
    GRAPH_PRV .L00000306
    GRAPH_PRV .L000003E0
    GRAPH_PRV .L00000C05
    GRAPH_PRV .L00000C71
    GRAPH_PRV .L00000D79
    GRAPH_PRV .L00001810
    GRAPH_PRV .L00001835
    GRAPH_PRV .L00001874
    GRAPH_PRV .L000019BD
    GRAPH_PRV .L00001B45
    GRAPH_PRV .L00001C2B
    GRAPH_PRV .L00001DD4
    GRAPH_PRV .L00002558
    GRAPH_PRV .L00002850
    GRAPH_PRV .L00002899
    GRAPH_PRV .L00002A1C
    GRAPH_PRV .L00002ACD
-- STACK00 ['.L00000127']
-- STACK01 ['.L0000023D']
-- STACK02 ['.L000002C9']
-- STACK03 ['.L00000315']
-- STACK04 ['.L00000C2D']
-- STACK05 ['.L00000C8F']
-- STACK06 ['.L00000DA4']
-- STACK07 ['.L00001830']
-- STACK08 ['.L00001845']
-- STACK09 ['.L0000189C']
-- STACK10 ['.L000019E7']
-- STACK11 ['.L00001B6C']
-- STACK12 ['.L00001C3B']
-- STACK13 ['.L00001DEA']
-- STACK14 ['.L00002870']
-- STACK15 ['.L000028A9']
-- STACK16 ['.L00002A30']
-- STACK17 ['.L00002ADD']

<Symbol 'compile_varerr' bind='globl'>

<Symbol 'compile_varerr@PLT' >
    GRAPH_PRV .L000003BD

<Symbol 'compilecast' bind='globl'>

<Symbol 'compilecast@PLT' >
    GRAPH_NXT .L00000BBB
    GRAPH_NXT .L00000D38
    GRAPH_NXT .L000011A8
    GRAPH_NXT .L00001204
    GRAPH_NXT .L00001A04
    GRAPH_PRV .L00000BA9
    GRAPH_PRV .L00000D28
    GRAPH_PRV .L00001198
    GRAPH_PRV .L000011EF
    GRAPH_PRV .L000019EC
-- STACK00 ['.L00000BBB']
-- STACK01 ['.L00000D38']
-- STACK02 ['.L000011A8']
-- STACK03 ['.L00001204']
-- STACK04 ['.L00001A04']

<Symbol 'compilecast_loc@PLT' >
    GRAPH_NXT .L000023A9
    GRAPH_PRV .L00002397
-- STACK00 ['.L000023A9']

<Symbol 'compilelvalue' bind='globl'>

<Symbol 'compilelvalue@PLT' >
    GRAPH_NXT .L00001396
    GRAPH_PRV .L0000138C
-- STACK00 ['.L00001396']

<Symbol 'compilenode' bind='globl'>

<Symbol 'compilenode@PLT' >
    GRAPH_NXT .L00000AE3
    GRAPH_NXT .L00000E7B
    GRAPH_NXT .L0000114F
    GRAPH_NXT .L0000122A
    GRAPH_NXT .L000012B3
    GRAPH_NXT .L00001404
    GRAPH_NXT .L000014A6
    GRAPH_NXT .L00001510
    GRAPH_NXT .L00001531
    GRAPH_NXT .L000015D9
    GRAPH_NXT .L000016AC
    GRAPH_NXT .L000016CD
    GRAPH_NXT .L0000170C
    GRAPH_NXT .L00001BAE
    GRAPH_PRV .L00000AD0
    GRAPH_PRV .L00000E6B
    GRAPH_PRV .L0000112C
    GRAPH_PRV .L00001209
    GRAPH_PRV .L000012A0
    GRAPH_PRV .L000013B7
    GRAPH_PRV .L00001489
    GRAPH_PRV .L000014F9
    GRAPH_PRV .L0000151E
    GRAPH_PRV .L000015CA
    GRAPH_PRV .L00001695
    GRAPH_PRV .L000016B1
    GRAPH_PRV .L000016FD
    GRAPH_PRV .L00001B9B
-- STACK00 ['.L00000AE3']
-- STACK01 ['.L00000E7B']
-- STACK02 ['.L0000114F']
-- STACK03 ['.L0000122A']
-- STACK04 ['.L000012B3']
-- STACK05 ['.L00001404']
-- STACK06 ['.L000014A6']
-- STACK07 ['.L00001510']
-- STACK08 ['.L00001531']
-- STACK09 ['.L000015D9']
-- STACK10 ['.L000016AC']
-- STACK11 ['.L000016CD']
-- STACK12 ['.L0000170C']
-- STACK13 ['.L00001BAE']

<Symbol 'compilesmall' bind='globl'>

<Symbol 'compilesmall@PLT' >
    GRAPH_NXT .L00001D30
    GRAPH_PRV .L00001D0C
-- STACK00 ['.L00001D30']

<Symbol 'compilevec' bind='globl'>

<Symbol 'compilevec@PLT' >
    GRAPH_NXT .L00001CE1
    GRAPH_PRV .L00001CBF
-- STACK00 ['.L00001CE1']

<Symbol 'data_push' bind='globl'>

<Symbol 'data_push@PLT' >
    GRAPH_NXT .L00000EED
    GRAPH_NXT .L000014BE
    GRAPH_NXT .L00001BD9
    GRAPH_NXT .L00001FB5
    GRAPH_NXT .L00002054
    GRAPH_PRV .L00000EE4
    GRAPH_PRV .L000014B5
    GRAPH_PRV .L00001BCF
    GRAPH_PRV .L00001FA8
    GRAPH_PRV .L0000204B
-- STACK00 ['.L00000EED']
-- STACK01 ['.L000014BE']
-- STACK02 ['.L00001BD9']
-- STACK03 ['.L00001FB5']
-- STACK04 ['.L00002054']

<Symbol 'dbgstart@GOTPCREL' >

<Symbol 'detag' bind='globl'>

<Symbol 'detag@PLT' >
    GRAPH_NXT .L0000133A
    GRAPH_PRV .L00001333
-- STACK00 ['.L0000133A']

<Symbol 'eval_mnemonic' bind='globl'>

<Symbol 'eval_mnemonic@PLT' >
    GRAPH_NXT .L00001C8A
    GRAPH_PRV .L00001C7A
-- STACK00 ['.L00001C8A']

<Symbol 'first_safe_arg' bind='globl'>

<Symbol 'first_safe_arg@PLT' >
    GRAPH_NXT .L000004B2
    GRAPH_NXT .L000004C8
    GRAPH_NXT .L00001916
    GRAPH_NXT .L0000192C
    GRAPH_PRV .L0000049B
    GRAPH_PRV .L000004B2
    GRAPH_PRV .L000018E7
    GRAPH_PRV .L00001916
-- STACK00 ['.L000004B2']
-- STACK01 ['.L000004C8']
-- STACK02 ['.L00001916']
-- STACK03 ['.L0000192C']

<Symbol 'frame_push' bind='globl'>

<Symbol 'frame_push@PLT' >
    GRAPH_NXT .L000010A4
    GRAPH_NXT .L0000199A
    GRAPH_NXT .L00001B8E
    GRAPH_PRV .L0000109A
    GRAPH_PRV .L00001990
    GRAPH_PRV .L00001B84
-- STACK00 ['.L000010A4']
-- STACK01 ['.L0000199A']
-- STACK02 ['.L00001B8E']

<Symbol 'gen_0' bind='globl'>

<Symbol 'gen_0@GOTPCREL' >

<Symbol 'get_ret_type' bind='globl'>

<Symbol 'get_ret_type@PLT' >
    GRAPH_NXT .L0000059F
    GRAPH_NXT .L00001E72
    GRAPH_NXT .L0000266C
    GRAPH_PRV .L0000055C
    GRAPH_PRV .L00002649
    GRAPH_PRV genclosure
-- STACK00 ['.L0000059F']
-- STACK01 ['.L00001E72']
-- STACK02 ['.L0000266C']

<Symbol 'getclosure' bind='globl'>

<Symbol 'getclosure@PLT' >
    GRAPH_NXT .L000014B5
    GRAPH_PRV .L000014A6
-- STACK00 ['.L000014B5']

<Symbol 'getcodepos' bind='globl'>

<Symbol 'getcodepos@PLT' >
    GRAPH_NXT .L00001453
    GRAPH_NXT .L00001F64
    GRAPH_PRV .L00001411
    GRAPH_PRV .L00001F50
-- STACK00 ['.L00001453']
-- STACK01 ['.L00001F64']

<Symbol 'getfunc' bind='globl'>

<Symbol 'getfunc@PLT' >
    GRAPH_NXT .L0000244A
    GRAPH_PRV .L00002440
-- STACK00 ['.L0000244A']

<Symbol 'getfunction' bind='globl'>

<Symbol 'getfunction@PLT' >
    GRAPH_NXT .L000023CF
    GRAPH_PRV .L000023B6
-- STACK00 ['.L000023CF']

<Symbol 'getlvalue' bind='globl'>

<Symbol 'getlvalue@PLT' >
    GRAPH_NXT .L00001347
    GRAPH_NXT .L0000166B
    GRAPH_PRV .L0000133A
    GRAPH_PRV .L00001657
-- STACK00 ['.L00001347']
-- STACK01 ['.L0000166B']

<Symbol 'getmvar' bind='globl'>

<Symbol 'getmvar@PLT' >
    GRAPH_NXT .L00001354
    GRAPH_NXT .L00001678
    GRAPH_PRV .L00001347
    GRAPH_PRV .L0000166B
-- STACK00 ['.L00001354']
-- STACK01 ['.L00001678']

<Symbol 'getvar' bind='globl'>

<Symbol 'getvar@PLT' >
    GRAPH_NXT .L00000737
    GRAPH_NXT .L000008DA
    GRAPH_NXT .L00000E1A
    GRAPH_NXT .L00000E94
    GRAPH_NXT .L00001633
    GRAPH_NXT .L00001B1A
    GRAPH_PRV .L00000730
    GRAPH_PRV .L000008D0
    GRAPH_PRV .L00000E10
    GRAPH_PRV .L00000E7B
    GRAPH_PRV .L0000161C
    GRAPH_PRV .L00001B10
-- STACK00 ['.L00000737']
-- STACK01 ['.L000008DA']
-- STACK02 ['.L00000E1A']
-- STACK03 ['.L00000E94']
-- STACK04 ['.L00001633']
-- STACK05 ['.L00001B1A']

<Symbol 'is_entry' bind='globl'>

<Symbol 'is_entry@PLT' >
    GRAPH_NXT .L0000053B
    GRAPH_NXT .L000012EE
    GRAPH_NXT .L00001605
    GRAPH_NXT .L00001802
    GRAPH_NXT .L000018A8
    GRAPH_PRV .L0000052F
    GRAPH_PRV .L000012E2
    GRAPH_PRV .L000015F9
    GRAPH_PRV .L000017F6
    GRAPH_PRV .L0000189C
-- STACK00 ['.L0000053B']
-- STACK01 ['.L000012EE']
-- STACK02 ['.L00001605']
-- STACK03 ['.L00001802']
-- STACK04 ['.L000018A8']

<Symbol 'is_func_named' bind='globl'>

<Symbol 'is_func_named@PLT' >
    GRAPH_NXT .L0000051B
    GRAPH_NXT .L000006B1
    GRAPH_NXT .L00000841
    GRAPH_NXT .L00000DEC
    GRAPH_NXT .L0000178B
    GRAPH_NXT .L00001864
    GRAPH_PRV .L0000050A
    GRAPH_PRV .L000006A0
    GRAPH_PRV .L00000830
    GRAPH_PRV .L00000DDB
    GRAPH_PRV .L0000177A
    GRAPH_PRV .L00001853
-- STACK00 ['.L0000051B']
-- STACK01 ['.L000006B1']
-- STACK02 ['.L00000841']
-- STACK03 ['.L00000DEC']
-- STACK04 ['.L0000178B']
-- STACK05 ['.L00001864']

<Symbol 'is_node_zero' bind='globl'>

<Symbol 'is_node_zero@PLT' >
    GRAPH_NXT .L0000093B
    GRAPH_NXT .L0000111E
    GRAPH_PRV .L00000930
    GRAPH_PRV .L00001104
-- STACK00 ['.L0000093B']
-- STACK01 ['.L0000111E']

<Symbol 'listtogen' bind='globl'>

<Symbol 'listtogen@PLT' >
    GRAPH_NXT .L0000049B
    GRAPH_NXT .L000018E7
    GRAPH_NXT .L00002633
    GRAPH_PRV .L000018D7
    GRAPH_PRV compilefunc
    GRAPH_PRV optimizefunc
-- STACK00 ['.L0000049B']
-- STACK01 ['.L000018E7']
-- STACK02 ['.L00002633']

<Symbol 'localvars@GOTPCREL' >

<Symbol 'op_insert_loc' bind='globl'>

<Symbol 'op_insert_loc@PLT' >
    GRAPH_NXT .L00001741
    GRAPH_PRV .L0000172A
-- STACK00 ['.L00001741']

<Symbol 'op_push' bind='globl'>

<Symbol 'op_push@PLT' >
    GRAPH_NXT .L000008F1
    GRAPH_NXT .L00000999
    GRAPH_NXT .L00000B02
    GRAPH_NXT .L00000E2C
    GRAPH_NXT .L00000E40
    GRAPH_NXT .L00000EA6
    GRAPH_NXT .L00000F00
    GRAPH_NXT .L00000F63
    GRAPH_NXT .L00000F8C
    GRAPH_NXT .L00000FB5
    GRAPH_NXT .L00000FCD
    GRAPH_NXT .L00000FE8
    GRAPH_NXT .L00001025
    GRAPH_NXT .L00001169
    GRAPH_NXT .L000011EA
    GRAPH_NXT .L00001289
    GRAPH_NXT .L000012C9
    GRAPH_NXT .L000012E2
    GRAPH_NXT .L00001300
    GRAPH_NXT .L00001317
    GRAPH_NXT .L0000138C
    GRAPH_NXT .L000013A9
    GRAPH_NXT .L000014D4
    GRAPH_NXT .L000015F9
    GRAPH_NXT .L00001617
    GRAPH_NXT .L00001695
    GRAPH_NXT .L00001722
    GRAPH_NXT .L0000196A
    GRAPH_NXT .L000019AE
    GRAPH_NXT .L00001BEF
    GRAPH_NXT .L00001C0C
    GRAPH_NXT .L00001C9E
    GRAPH_NXT .L00001DCF
    GRAPH_PRV .L000008DA
    GRAPH_PRV .L00000986
    GRAPH_PRV .L00000AE3
    GRAPH_PRV .L00000E1A
    GRAPH_PRV .L00000E2C
    GRAPH_PRV .L00000E94
    GRAPH_PRV .L00000EED
    GRAPH_PRV .L00000F4D
    GRAPH_PRV .L00000F78
    GRAPH_PRV .L00000FA1
    GRAPH_PRV .L00000FBA
    GRAPH_PRV .L00000FD2
    GRAPH_PRV .L00001012
    GRAPH_PRV .L0000114F
    GRAPH_PRV .L000011D2
    GRAPH_PRV .L00001269
    GRAPH_PRV .L000012B3
    GRAPH_PRV .L000012CE
    GRAPH_PRV .L000012EE
    GRAPH_PRV .L00001300
    GRAPH_PRV .L00001380
    GRAPH_PRV .L00001396
    GRAPH_PRV .L000014BE
    GRAPH_PRV .L000015D9
    GRAPH_PRV .L00001605
    GRAPH_PRV .L00001689
    GRAPH_PRV .L00001711
    GRAPH_PRV .L0000195B
    GRAPH_PRV .L0000199F
    GRAPH_PRV .L00001BD9
    GRAPH_PRV .L00001C00
    GRAPH_PRV .L00001C8A
    GRAPH_PRV .L00001DC0
-- STACK00 ['.L000008F1']
-- STACK01 ['.L00000999']
-- STACK02 ['.L00000B02']
-- STACK03 ['.L00000E2C']
-- STACK04 ['.L00000E40']
-- STACK05 ['.L00000EA6']
-- STACK06 ['.L00000F00']
-- STACK07 ['.L00000F63']
-- STACK08 ['.L00000F8C']
-- STACK09 ['.L00000FB5']
-- STACK10 ['.L00000FCD']
-- STACK11 ['.L00000FE8']
-- STACK12 ['.L00001025']
-- STACK13 ['.L00001169']
-- STACK14 ['.L000011EA']
-- STACK15 ['.L00001289']
-- STACK16 ['.L000012C9']
-- STACK17 ['.L000012E2']
-- STACK18 ['.L00001300']
-- STACK19 ['.L00001317']
-- STACK20 ['.L0000138C']
-- STACK21 ['.L000013A9']
-- STACK22 ['.L000014D4']
-- STACK23 ['.L000015F9']
-- STACK24 ['.L00001617']
-- STACK25 ['.L00001695']
-- STACK26 ['.L00001722']
-- STACK27 ['.L0000196A']
-- STACK28 ['.L000019AE']
-- STACK29 ['.L00001BEF']
-- STACK30 ['.L00001C0C']
-- STACK31 ['.L00001C9E']
-- STACK32 ['.L00001DCF']

<Symbol 'op_push_loc' bind='globl'>

<Symbol 'op_push_loc@PLT' >
    GRAPH_NXT .L00000AB4
    GRAPH_NXT .L00000B30
    GRAPH_NXT .L00000D03
    GRAPH_NXT .L00000D58
    GRAPH_NXT .L0000103B
    GRAPH_NXT .L0000109A
    GRAPH_NXT .L00001752
    GRAPH_NXT .L00001956
    GRAPH_NXT .L00001990
    GRAPH_NXT .L00001FC6
    GRAPH_NXT .L00002037
    GRAPH_NXT .L00002066
    GRAPH_NXT .L00002087
    GRAPH_NXT .L000020A2
    GRAPH_NXT .L000021E7
    GRAPH_NXT .L00002206
    GRAPH_NXT .L0000221C
    GRAPH_NXT .L0000224F
    GRAPH_NXT .L00002261
    GRAPH_NXT .L0000228C
    GRAPH_NXT .L000022B7
    GRAPH_NXT .L000022C9
    GRAPH_NXT .L000022E1
    GRAPH_NXT .L000022F9
    GRAPH_NXT .L00002353
    GRAPH_NXT .L00002373
    GRAPH_NXT .L0000238F
    GRAPH_NXT .L000023E8
    GRAPH_PRV .L0000038C
    GRAPH_PRV .L000003D1
    GRAPH_PRV .L000003F0
    GRAPH_PRV .L00000400
    GRAPH_PRV .L00000410
    GRAPH_PRV .L00000420
    GRAPH_PRV .L00000A8B
    GRAPH_PRV .L00000B1A
    GRAPH_PRV .L00000CF0
    GRAPH_PRV .L00000D44
    GRAPH_PRV .L0000102A
    GRAPH_PRV .L00001080
    GRAPH_PRV .L00001741
    GRAPH_PRV .L00001940
    GRAPH_PRV .L0000197C
    GRAPH_PRV .L00001FB5
    GRAPH_PRV .L00002025
    GRAPH_PRV .L00002054
    GRAPH_PRV .L00002070
    GRAPH_PRV .L00002090
    GRAPH_PRV .L000021D0
    GRAPH_PRV .L000021F1
    GRAPH_PRV .L00002206
    GRAPH_PRV .L00002239
    GRAPH_PRV .L0000224F
    GRAPH_PRV .L00002276
    GRAPH_PRV .L000022A1
    GRAPH_PRV .L000022B7
    GRAPH_PRV .L000022CE
    GRAPH_PRV .L000022E6
    GRAPH_PRV .L00002340
    GRAPH_PRV .L00002360
    GRAPH_PRV .L00002378
    GRAPH_PRV .L000023D6
-- STACK00 ['.L00000AB4']
-- STACK01 ['.L00000B30']
-- STACK02 ['.L00000D03']
-- STACK03 ['.L00000D58']
-- STACK04 ['.L0000103B']
-- STACK05 ['.L0000109A']
-- STACK06 ['.L00001752']
-- STACK07 ['.L00001956']
-- STACK08 ['.L00001990']
-- STACK09 ['.L00001FC6']
-- STACK10 ['.L00002037']
-- STACK11 ['.L00002066']
-- STACK12 ['.L00002087']
-- STACK13 ['.L000020A2']
-- STACK14 ['.L000021E7']
-- STACK15 ['.L00002206']
-- STACK16 ['.L0000221C']
-- STACK17 ['.L0000224F']
-- STACK18 ['.L00002261']
-- STACK19 ['.L0000228C']
-- STACK20 ['.L000022B7']
-- STACK21 ['.L000022C9']
-- STACK22 ['.L000022E1']
-- STACK23 ['.L000022F9']
-- STACK24 ['.L00002353']
-- STACK25 ['.L00002373']
-- STACK26 ['.L0000238F']
-- STACK27 ['.L000023E8']

<Symbol 'optimizecall' bind='globl'>

<Symbol 'optimizecall@PLT' >
    GRAPH_PRV .L00002460

<Symbol 'optimizefacteurmat' bind='globl'>

<Symbol 'optimizefacteurmat@PLT' >
    GRAPH_PRV .L00002500

<Symbol 'optimizefunc@PLT' >
    GRAPH_PRV .L000025D0

<Symbol 'optimizemat' bind='globl'>

<Symbol 'optimizemat@PLT' >
    GRAPH_PRV .L00002518

<Symbol 'optimizenode@PLT' >
    GRAPH_NXT .L00002480
    GRAPH_NXT .L000024B7
    GRAPH_NXT .L000024BF
    GRAPH_NXT .L000024E8
    GRAPH_NXT .L000024F0
    GRAPH_NXT .L00002578
    GRAPH_NXT .L00002840
    GRAPH_NXT .L0000296E
    GRAPH_NXT .L000029B4
    GRAPH_NXT .L000029DC
    GRAPH_NXT .L00002A38
    GRAPH_NXT .L00002A5E
    GRAPH_PRV .L00002478
    GRAPH_PRV .L000024AF
    GRAPH_PRV .L000024B7
    GRAPH_PRV .L000024E0
    GRAPH_PRV .L000024E8
    GRAPH_PRV .L00002570
    GRAPH_PRV .L0000282B
    GRAPH_PRV .L00002960
    GRAPH_PRV .L000029A8
    GRAPH_PRV .L000029D0
    GRAPH_PRV .L00002A30
    GRAPH_PRV .L00002A59
-- STACK00 ['.L00002480']
-- STACK01 ['.L000024B7']
-- STACK02 ['.L000024BF']
-- STACK03 ['.L000024E8']
-- STACK04 ['.L000024F0']
-- STACK05 ['.L00002578']
-- STACK06 ['.L00002840']
-- STACK07 ['.L0000296E']
-- STACK08 ['.L000029B4']
-- STACK09 ['.L000029DC']
-- STACK10 ['.L00002A38']
-- STACK11 ['.L00002A5E']

<Symbol 'optimizevec' bind='globl'>

<Symbol 'optimizevec@PLT' >
    GRAPH_PRV .L00002530

<Symbol 'pack_localvars' bind='globl'>

<Symbol 'pack_localvars@PLT' >
    GRAPH_NXT .L00000EE4
    GRAPH_NXT .L0000204B
    GRAPH_PRV .L00000EDD
    GRAPH_PRV .L00002044
-- STACK00 ['.L00000EE4']
-- STACK01 ['.L0000204B']

<Symbol 'pari_err' bind='globl'>

<Symbol 'pari_err@PLT' >
    GRAPH_NXT .L00000052
    GRAPH_NXT .L00000078
    GRAPH_NXT .L00000892
    GRAPH_NXT .L000009F6
    GRAPH_NXT .L00000A22
    GRAPH_NXT .L00000BF5
    GRAPH_NXT .L00000DD6
    GRAPH_NXT .L00000F11
    GRAPH_NXT .L00000F22
    GRAPH_NXT .L0000106E
    GRAPH_NXT .L00001A54
    GRAPH_NXT .L00001ABC
    GRAPH_NXT .L00001D5D
    GRAPH_NXT .L00001D9E
    GRAPH_NXT .L00001DBB
    GRAPH_NXT .L00002131
    GRAPH_NXT .L000021CB
    GRAPH_NXT .L00002319
    GRAPH_NXT .L00002339
    GRAPH_NXT .L000025CB
    GRAPH_NXT .L0000274B
    GRAPH_NXT .L00002924
    GRAPH_NXT .L00002AB0
    GRAPH_PRV .L00000046
    GRAPH_PRV .L00000065
    GRAPH_PRV .L000003A0
    GRAPH_PRV .L00000886
    GRAPH_PRV .L000009EA
    GRAPH_PRV .L00000A0F
    GRAPH_PRV .L00000BE0
    GRAPH_PRV .L00000DA9
    GRAPH_PRV .L00000F05
    GRAPH_PRV .L00000F16
    GRAPH_PRV .L00001057
    GRAPH_PRV .L00001A40
    GRAPH_PRV .L00001AB0
    GRAPH_PRV .L00001D38
    GRAPH_PRV .L00001D92
    GRAPH_PRV .L00001D9E
    GRAPH_PRV .L00002116
    GRAPH_PRV .L000021B0
    GRAPH_PRV .L000022FE
    GRAPH_PRV .L0000231E
    GRAPH_PRV .L00002598
    GRAPH_PRV .L000025B8
    GRAPH_PRV .L00002736
    GRAPH_PRV .L00002900
    GRAPH_PRV .L00002A88
-- STACK00 ['.L00000052']
-- STACK01 ['.L00000078']
-- STACK02 ['.L00000892']
-- STACK03 ['.L000009F6']
-- STACK04 ['.L00000A22']
-- STACK05 ['.L00000BF5']
-- STACK06 ['.L00000DD6']
-- STACK07 ['.L00000F11']
-- STACK08 ['.L00000F22']
-- STACK09 ['.L0000106E']
-- STACK10 ['.L00001A54']
-- STACK11 ['.L00001ABC']
-- STACK12 ['.L00001D5D']
-- STACK13 ['.L00001D9E']
-- STACK14 ['.L00001DBB']
-- STACK15 ['.L00002131']
-- STACK16 ['.L000021CB']
-- STACK17 ['.L00002319']
-- STACK18 ['.L00002339']
-- STACK19 ['.L000025CB']
-- STACK20 ['.L0000274B']
-- STACK21 ['.L00002924']
-- STACK22 ['.L00002AB0']

<Symbol 'pari_tree' bind='globl'>

<Symbol 'pari_tree@GOTPCREL' >

<Symbol 'parseproto@PLT' >
    GRAPH_NXT .L00000643
    GRAPH_NXT .L00001E8D
    GRAPH_NXT .L00002005
    GRAPH_NXT .L000020E5
    GRAPH_NXT .L000026DC
    GRAPH_PRV .L00000620
    GRAPH_PRV .L00001E80
    GRAPH_PRV .L00001FF8
    GRAPH_PRV .L000020D8
    GRAPH_PRV .L000026C8
-- STACK00 ['.L00000643']
-- STACK01 ['.L00001E8D']
-- STACK02 ['.L00002005']
-- STACK03 ['.L000020E5']
-- STACK04 ['.L000026DC']

<Symbol 's_lvar@GOTPCREL' >

<Symbol 's_opcode@GOTPCREL' >

<Symbol 'str_defproto' bind='globl'>

<Symbol 'str_defproto@PLT' >
    GRAPH_NXT .L00000F4D
    GRAPH_NXT .L00002239
    GRAPH_PRV .L00000F27
    GRAPH_PRV .L00002226
-- STACK00 ['.L00000F4D']
-- STACK01 ['.L00002239']

<Symbol 'strchr' bind='globl'>

<Symbol 'strchr@PLT' >
    GRAPH_NXT .L00001592
    GRAPH_PRV .L00001571
-- STACK00 ['.L00001592']

<Symbol 'strntoGENexp@PLT' >
    GRAPH_NXT .L00001C7A
    GRAPH_PRV .L00001C67
-- STACK00 ['.L00001C7A']

<Symbol 'strntoGENstr' bind='globl'>

<Symbol 'strntoGENstr@PLT' >
    GRAPH_NXT .L00001BCF
    GRAPH_PRV .L00001BB3
-- STACK00 ['.L00001BCF']

<Symbol 'strtoGENstr' bind='globl'>

<Symbol 'strtoGENstr@PLT' >
    GRAPH_NXT .L000023B6
    GRAPH_PRV .L000023A9
-- STACK00 ['.L000023B6']

<Symbol 'strtol' bind='globl'>

<Symbol 'strtol@PLT' >
    GRAPH_NXT .L00000F78
    GRAPH_NXT .L00000FA1
    GRAPH_NXT .L00002276
    GRAPH_NXT .L000022A1
    GRAPH_PRV .L00000F68
    GRAPH_PRV .L00000F91
    GRAPH_PRV .L00002266
    GRAPH_PRV .L00002291
-- STACK00 ['.L00000F78']
-- STACK01 ['.L00000FA1']
-- STACK02 ['.L00002276']
-- STACK03 ['.L000022A1']

<Symbol 'var_push' bind='globl'>

<Symbol 'var_push@PLT' >
    GRAPH_NXT .L0000074F
    GRAPH_NXT .L000008FD
    GRAPH_NXT .L00001B37
    GRAPH_PRV .L00000737
    GRAPH_PRV .L000008F1
    GRAPH_PRV .L00001B1A
-- STACK00 ['.L0000074F']
-- STACK01 ['.L000008FD']
-- STACK02 ['.L00001B37']

<Symbol 'vec_optimize' bind='globl'>

<Symbol 'vec_optimize@PLT' >
    GRAPH_NXT .L00002769
    GRAPH_NXT .L000027FE
    GRAPH_NXT .L0000294C
    GRAPH_PRV .L0000275D
    GRAPH_PRV .L000027F5
    GRAPH_PRV .L00002943
-- STACK00 ['.L00002769']
-- STACK01 ['.L000027FE']
-- STACK02 ['.L0000294C']

<Symbol 'foo.20737+8' section='.bss', type='endofsymbol', bind='local', address=16>
    ENDER None -- NXT None
    CFG None

<Symbol '.LC00000848' section='.rodata', type='endofsymbol', address=2120>
    ENDER None -- NXT None
    CFG None

<Symbol 'optimizefunc+1293' section='.text', type='padding', address=10989>
    ENDER None -- NXT None
    CFG None

('.comment', '.comment,"MS",@progbits,1')
('.eh_frame', '.eh_frame,"a",@progbits')
('.note.GNU-stack', '.note.GNU-stack,"",@progbits')
('.rodata.str1.1', '.rodata.str1.1,"aMS",@progbits,1')
('.rodata.str1.8', '.rodata.str1.8,"aMS",@progbits,1')
('.text.unlikely', '.text.unlikely,"ax",@progbits')
relocatable:True,ident:'GCC: (Debian 4.9.2-10) 4.9.2',endianess:'<',eh_frame_size:616,eh_frame_relocs:{32: (('ELF', 62, 2), {'section': '.text', 'address': 0}), 96: (('ELF', 62, 2), {'section': '.text', 'address': 336}), 180: (('ELF', 62, 2), {'section': '.text', 'address': 864}), 200: (('ELF', 62, 2), {'section': '.text', 'address': 1072}), 280: (('ELF', 62, 2), {'section': '.text', 'address': 7696}), 356: (('ELF', 62, 2), {'section': '.text', 'address': 9200}), 544: (('ELF', 62, 2), {'section': '.text', 'address': 9696})},container:'ELF',compiler:'gcc',PIC:'unknown'
