<Symbol '.LC0' section='.rodata.str1.1', address=[0]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"compress"

<Symbol '.LC1' section='.rodata.str1.1', address=[1]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"%s error: %d\n"

<Symbol '.LC2' section='.rodata.str1.1', address=[2]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"uncompress"

<Symbol '.LC3' section='.rodata.str1.1', address=[3]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"bad uncompress\n"

<Symbol '.LC4' section='.rodata.str1.1', address=[4]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"uncompress(): %s\n"

<Symbol 0 section='.text', type='padding', bind='p2align', address=[5]>
    ENDER False -- NXT test_compress
    CFG test_compress
    GRAPH_NXT test_compress
'plasmasm.constants.P2Align'>[None].p2align 4,,15

<Symbol 'test_compress' section='.text', type='function', bind='globl', address=[6], data='LFB:.LFB63'>
    ENDER False -- NXT .L2
    CFG .L2
    GRAPH_NXT .L2
    GRAPH_PRV 0
    GRAPH_PRV 228
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdi, %rbp
	 R['rdi', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdx, %rbx
	 R['rdx', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]subq      $24, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, 8(%rsp)
	 R['rip', 'rsi', 'rsp'] W['MEM', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdx', 'rflags', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rcx, (%rsp)
	 R['rcx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %rcx
	 R['rip', 'rsi'] W['rcx', 'rip']
	 D['rcx', 'rdx', 'rflags']
	 STACK:{}:(0, 8)

<Symbol '.L2' section='.text', address=[7]>
    ENDER False -- NXT 11
    CFG .L2
    CFG 11
    GRAPH_NXT .L2
    GRAPH_NXT 11
    GRAPH_PRV .L2
    GRAPH_PRV test_compress
'X64_AMOCO.InstructionDEAD'>[None]movl      (%rcx), %edx
	 R['MEM', 'rcx', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]addq      $4, %rcx
	 R['rcx', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]leal      -16843009(%rdx), %eax
	 R['MEM', 'rax', 'rdx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]notl      %edx
	 R['rdx', 'rip'] W['rdx', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]andl      %edx, %eax
	 R['rax', 'rdx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]andl      $-2139062144, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[jcc]je        .L2
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L2' section='.text', address=[7]>]

<Symbol 11 section='.text'>
    ENDER False -- NXT 12
    CFG compress@PLT
    CFG 12
    GRAPH_NXT 12
    GRAPH_NXT compress@PLT
    GRAPH_PRV .L2
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %edx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]shrl      $16, %edx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]testl     $32896, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]cmove     %edx, %eax
	 R['rax', 'rdx', 'rflags', 'rip'] W['rax', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]leaq      2(%rcx), %rdx
	 R['MEM', 'rcx', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %edi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]cmove     %rdx, %rcx
	 R['rcx', 'rdx', 'rflags', 'rip'] W['rcx', 'rip']
	 D[]
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]addb      %al, %dil
	 R['rax', 'rdi', 'rip'] W['rdi', 'rflags', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]leaq      hello(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]sbbq      $3, %rcx
	 R['rcx', 'rflags', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, %rdi
	 R['rbp', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]subq      %rsi, %rcx
	 R['rcx', 'rip', 'rsi'] W['rcx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]leaq      8(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:{'%rsi': [8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]addq      $1, %rcx
	 R['rcx', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rsi': [8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      compress@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rsi': [8]}:(0, 8)
	 dst=[<Symbol 'compress@PLT' bind='globl'>]

<Symbol 12 section='.text'>
    ENDER False -- NXT 13
    CFG .L12
    CFG 13
    GRAPH_NXT .L12
    GRAPH_NXT 13
    GRAPH_PRV 11
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rsi': [8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L12
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rsi': [8]}:(0, 8)
	 dst=[<Symbol '.L12' section='.text', address=[8]>]

<Symbol 13 section='.text'>
    ENDER False -- NXT 14
    CFG uncompress@PLT
    CFG 14
    GRAPH_NXT 14
    GRAPH_NXT uncompress@PLT
    GRAPH_PRV 12
'X64_AMOCO.InstructionDEAD'>[None]movq      8(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      $28542640608928103, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsp, %rsi
	 R['rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, (%rbx)
	 R['rax', 'rbx', 'rip'] W['MEM', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      uncompress@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rsi': [0]}:(0, 8)
	 dst=[<Symbol 'uncompress@PLT' bind='globl'>]

<Symbol 14 section='.text'>
    ENDER False -- NXT 15
    CFG .L13
    CFG 15
    GRAPH_NXT .L13
    GRAPH_NXT 15
    GRAPH_PRV 13
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L13
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rsi': [0]}:(0, 8)
	 dst=[<Symbol '.L13' section='.text', address=[11]>]

<Symbol 15 section='.text'>
    ENDER False -- NXT 16
    CFG strcmp@PLT
    CFG 16
    GRAPH_NXT 16
    GRAPH_NXT strcmp@PLT
    GRAPH_PRV 14
'X64_AMOCO.InstructionDEAD'>[None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      strcmp@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'strcmp@PLT' bind='globl'>]

<Symbol 16 section='.text'>
    ENDER False -- NXT 17
    CFG .L14
    CFG 17
    GRAPH_NXT .L14
    GRAPH_NXT 17
    GRAPH_PRV 15
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L14
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L14' section='.text', address=[10]>]

<Symbol 17 section='.text'>
    ENDER False -- NXT 18
    CFG __printf_chk@PLT
    CFG 18
    GRAPH_NXT 18
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV 16
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC4(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdx
	 R['rbx', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '__printf_chk@PLT' bind='globl'>]

<Symbol 18 section='.text'>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV 17
'X64_AMOCO.InstructionDEAD'>[None]addq      $24, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rbp', 'rbx', 'rflags']
	 STACK:{}:(-24, -16)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['rbp', 'rbx']
	 STACK:{}:(-32, -24)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['rbp']
	 STACK:{}:(-40, -32)
'X64_AMOCO.InstructionDEAD'>[ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{}:(-40, -32)
	 dst=[None]

<Symbol '.L12' section='.text', address=[8]>
    ENDER False -- NXT .L10
    CFG .L10
    GRAPH_NXT .L10
    GRAPH_PRV 12
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC0(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [8]}:(0, 8)

<Symbol '.L10' section='.text', address=[9]>
    ENDER False -- NXT 19
    CFG __fprintf_chk@PLT
    CFG 19
    GRAPH_NXT 19
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L12
    GRAPH_PRV .L13
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [0, 8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rsi': [0, 8]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '__fprintf_chk@PLT' bind='globl'>]

<Symbol 19 section='.text'>
    ENDER False -- NXT 20
    CFG exit@PLT
    CFG 20
    GRAPH_NXT 20
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L10
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 20 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 19

<Symbol '.L14' section='.text', address=[10]>
    ENDER False -- NXT 21
    CFG fwrite@PLT
    CFG 21
    GRAPH_NXT 21
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV 16
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC3(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $15, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 21 section='.text'>
    ENDER False -- NXT 22
    CFG exit@PLT
    CFG 22
    GRAPH_NXT 22
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L14
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 22 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 21

<Symbol '.L13' section='.text', address=[11]>
    ENDER True -- NXT None
    CFG .L10
    GRAPH_NXT .L10
    GRAPH_PRV 14
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC2(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L10
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [0]}:(0, 8)
	 dst=[<Symbol '.L10' section='.text', address=[9]>]

<Symbol '.LC5' section='.rodata.str1.1', address=[12]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"wb"

<Symbol '.LC6' section='.rodata.str1.1', address=[13]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"gzopen error\n"

<Symbol '.LC7' section='.rodata.str1.1', address=[14]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"ello"

<Symbol '.LC8' section='.rodata.str1.1', address=[15]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"gzputs err: %s\n"

<Symbol '.LC9' section='.rodata.str1.1', address=[16]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"hello"

<Symbol '.LC10' section='.rodata.str1.1', address=[17]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	", %s!"

<Symbol '.LC11' section='.rodata.str1.1', address=[18]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"gzprintf err: %s\n"

<Symbol '.LC12' section='.rodata.str1.1', address=[19]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"rb"

<Symbol '.LC13' section='.rodata.str1.1', address=[20]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"gzread err: %s\n"

<Symbol '.LC14' section='.rodata.str1.1', address=[21]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"bad gzread: %s\n"

<Symbol '.LC15' section='.rodata.str1.1', address=[22]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"gzread(): %s\n"

<Symbol '.LC16' section='.rodata.str1.8', align=8, address=[23]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"gzseek error, pos=%ld, gztell=%ld\n"

<Symbol '.LC17' section='.rodata.str1.1', address=[24]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"gzgetc error\n"

<Symbol '.LC18' section='.rodata.str1.1', address=[25]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"gzungetc error\n"

<Symbol '.LC19' section='.rodata.str1.1', address=[26]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"gzgets err after gzseek: %s\n"

<Symbol '.LC20' section='.rodata.str1.1', address=[27]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"bad gzgets after gzseek\n"

<Symbol '.LC21' section='.rodata.str1.1', address=[28]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"gzgets() after gzseek: %s\n"

<Symbol 1 section='.text', type='padding', bind='p2align', address=[29]>
    ENDER False -- NXT test_gzio
    CFG test_gzio
    GRAPH_NXT test_gzio
'plasmasm.constants.P2Align'>[None].p2align 4,,15

<Symbol 'test_gzio' section='.text', type='function', bind='globl', address=[30], data='LFB:.LFB64'>
    ENDER False -- NXT .L16
    CFG .L16
    GRAPH_NXT .L16
    GRAPH_PRV .L199
    GRAPH_PRV 1
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdx, %r13
	 R['rdx', 'rip'] W['r13', 'rip']
	 D['r13', 'rax', 'rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %r12
	 R['rip', 'rsi'] W['r12', 'rip']
	 D['r12', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rbx', 'rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdi, %rbx
	 R['rdi', 'rip'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]subq      $16, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %rdx
	 R['rip', 'rsi'] W['rdx', 'rip']
	 D['rax', 'rcx', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, 8(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rcx']
	 STACK:{}:(8,)

<Symbol '.L16' section='.text', address=[31]>
    ENDER False -- NXT 23
    CFG .L16
    CFG 23
    GRAPH_NXT .L16
    GRAPH_NXT 23
    GRAPH_PRV .L16
    GRAPH_PRV test_gzio
'X64_AMOCO.InstructionDEAD'>[None]movl      (%rdx), %ecx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]addq      $4, %rdx
	 R['rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]leal      -16843009(%rcx), %eax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]notl      %ecx
	 R['rcx', 'rip'] W['rcx', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]andl      %ecx, %eax
	 R['rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]andl      $-2139062144, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]je        .L16
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L16' section='.text', address=[31]>]

<Symbol 23 section='.text'>
    ENDER False -- NXT 24
    CFG gzopen@PLT
    CFG 24
    GRAPH_NXT 24
    GRAPH_NXT gzopen@PLT
    GRAPH_PRV .L16
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %ecx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]shrl      $16, %ecx
	 R['rcx', 'rflags', 'rip'] W['rcx', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]testl     $32896, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]cmove     %ecx, %eax
	 R['rax', 'rcx', 'rflags', 'rip'] W['rax', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]leaq      2(%rdx), %rcx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rcx']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]cmove     %rcx, %rdx
	 R['rcx', 'rdx', 'rflags', 'rip'] W['rdx', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %ecx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]addb      %al, %cl
	 R['rax', 'rcx', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]sbbq      $3, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]subq      %rsi, %rdx
	 R['rdx', 'rip', 'rsi'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC5(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]leal      1(%rdx), %ebp
	 R['MEM', 'rbp', 'rdx', 'rip'] W['rbp', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzopen@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzopen@PLT' bind='globl'>]

<Symbol 24 section='.text'>
    ENDER False -- NXT 25
    CFG .L36
    CFG 25
    GRAPH_NXT .L36
    GRAPH_NXT 25
    GRAPH_PRV 23
'X64_AMOCO.InstructionDEAD'>[None]testq     %rax, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['r14', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %r14
	 R['rax', 'rip'] W['r14', 'rip']
	 D['r14']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]je        .L36
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L36' section='.text', address=[34]>]

<Symbol 25 section='.text'>
    ENDER False -- NXT 26
    CFG gzputc@PLT
    CFG 26
    GRAPH_NXT 26
    GRAPH_NXT gzputc@PLT
    GRAPH_PRV 24
'X64_AMOCO.InstructionDEAD'>[None]movl      $104, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %rdi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzputc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzputc@PLT' bind='globl'>]

<Symbol 26 section='.text'>
    ENDER False -- NXT 27
    CFG gzputs@PLT
    CFG 27
    GRAPH_NXT 27
    GRAPH_NXT gzputs@PLT
    GRAPH_PRV 25
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC7(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzputs@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzputs@PLT' bind='globl'>]

<Symbol 27 section='.text'>
    ENDER False -- NXT 28
    CFG .L38
    CFG 28
    GRAPH_NXT .L38
    GRAPH_NXT 28
    GRAPH_PRV 26
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $4, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L38
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L38' section='.text', address=[41]>]

<Symbol 28 section='.text'>
    ENDER False -- NXT 29
    CFG gzprintf@PLT
    CFG 29
    GRAPH_NXT 29
    GRAPH_NXT gzprintf@PLT
    GRAPH_PRV 27
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC9(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC10(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzprintf@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzprintf@PLT' bind='globl'>]

<Symbol 29 section='.text'>
    ENDER False -- NXT 30
    CFG .L39
    CFG 30
    GRAPH_NXT .L39
    GRAPH_NXT 30
    GRAPH_PRV 28
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $8, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L39
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L39' section='.text', address=[39]>]

<Symbol 30 section='.text'>
    ENDER False -- NXT 31
    CFG gzseek@PLT
    CFG 31
    GRAPH_NXT 31
    GRAPH_NXT gzseek@PLT
    GRAPH_PRV 29
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzseek@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzseek@PLT' bind='globl'>]

<Symbol 31 section='.text'>
    ENDER False -- NXT 32
    CFG gzclose@PLT
    CFG 32
    GRAPH_NXT 32
    GRAPH_NXT gzclose@PLT
    GRAPH_PRV 30
'X64_AMOCO.InstructionDEAD'>[None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzclose@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzclose@PLT' bind='globl'>]

<Symbol 32 section='.text'>
    ENDER False -- NXT 33
    CFG gzopen@PLT
    CFG 33
    GRAPH_NXT 33
    GRAPH_NXT gzopen@PLT
    GRAPH_PRV 31
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC12(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzopen@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzopen@PLT' bind='globl'>]

<Symbol 33 section='.text'>
    ENDER False -- NXT 34
    CFG .L36
    CFG 34
    GRAPH_NXT .L36
    GRAPH_NXT 34
    GRAPH_PRV 32
'X64_AMOCO.InstructionDEAD'>[None]testq     %rax, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rbx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %rbx
	 R['rax', 'rip'] W['rbx', 'rip']
	 D['rbx']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]je        .L36
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L36' section='.text', address=[34]>]

<Symbol 34 section='.text'>
    ENDER False -- NXT 35
    CFG gzread@PLT
    CFG 35
    GRAPH_NXT 35
    GRAPH_NXT gzread@PLT
    GRAPH_PRV 33
'X64_AMOCO.InstructionDEAD'>[None]movq      $28542640608928103, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      %r13d, %edx
	 R['r13', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r12, %rsi
	 R['r12', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, (%r12)
	 R['r12', 'rax', 'rip'] W['MEM', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzread@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzread@PLT' bind='globl'>]

<Symbol 35 section='.text'>
    ENDER False -- NXT 36
    CFG .L40
    CFG 36
    GRAPH_NXT .L40
    GRAPH_NXT 36
    GRAPH_PRV 34
'X64_AMOCO.InstructionDEAD'>[None]cmpl      %ebp, %eax
	 R['rax', 'rbp', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L40
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L40' section='.text', address=[43]>]

<Symbol 36 section='.text'>
    ENDER False -- NXT 37
    CFG strcmp@PLT
    CFG 37
    GRAPH_NXT 37
    GRAPH_NXT strcmp@PLT
    GRAPH_PRV 35
'X64_AMOCO.InstructionDEAD'>[None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      strcmp@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'strcmp@PLT' bind='globl'>]

<Symbol 37 section='.text'>
    ENDER False -- NXT 38
    CFG .L41
    CFG 38
    GRAPH_NXT .L41
    GRAPH_NXT 38
    GRAPH_PRV 36
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L41
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L41' section='.text', address=[42]>]

<Symbol 38 section='.text'>
    ENDER False -- NXT 39
    CFG __printf_chk@PLT
    CFG 39
    GRAPH_NXT 39
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV 37
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC15(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r12, %rdx
	 R['r12', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '__printf_chk@PLT' bind='globl'>]

<Symbol 39 section='.text'>
    ENDER False -- NXT 40
    CFG gzseek@PLT
    CFG 40
    GRAPH_NXT 40
    GRAPH_NXT gzseek@PLT
    GRAPH_PRV 38
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      $-8, %rsi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzseek@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzseek@PLT' bind='globl'>]

<Symbol 40 section='.text'>
    ENDER False -- NXT 41
    CFG .L25
    CFG 41
    GRAPH_NXT .L25
    GRAPH_NXT 41
    GRAPH_PRV 39
'X64_AMOCO.InstructionDEAD'>[None]cmpq      $6, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rbp', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %rbp
	 R['rax', 'rip'] W['rbp', 'rip']
	 D['rbp']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L25
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L25' section='.text', address=[35]>]

<Symbol 41 section='.text'>
    ENDER False -- NXT 42
    CFG gztell@PLT
    CFG 42
    GRAPH_NXT 42
    GRAPH_NXT gztell@PLT
    GRAPH_PRV 40
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gztell@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gztell@PLT' bind='globl'>]

<Symbol 42 section='.text'>
    ENDER False -- NXT 43
    CFG .L25
    CFG 43
    GRAPH_NXT .L25
    GRAPH_NXT 43
    GRAPH_PRV 41
'X64_AMOCO.InstructionDEAD'>[None]cmpq      $6, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L25
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L25' section='.text', address=[35]>]

<Symbol 43 section='.text'>
    ENDER False -- NXT 44
    CFG .L26
    CFG 44
    GRAPH_NXT .L26
    GRAPH_NXT 44
    GRAPH_PRV 42
'X64_AMOCO.InstructionDEAD'>[None]movl      (%rbx), %eax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]je        .L26
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L26' section='.text', address=[33]>]

<Symbol 44 section='.text'>
    ENDER False -- NXT .L27
    CFG .L27
    GRAPH_NXT .L27
    GRAPH_PRV 43
'X64_AMOCO.InstructionDEAD'>[None]subl      $1, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]addq      $1, 16(%rbx)
	 R['MEM', 'rbx', 'rip'] W['MEM', 'rflags', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, (%rbx)
	 R['rax', 'rbx', 'rip'] W['MEM', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      8(%rbx), %rax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rdx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]leaq      1(%rax), %rdx
	 R['MEM', 'rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdx, 8(%rbx)
	 R['rbx', 'rdx', 'rip'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]cmpb      $32, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]setne     %al
	 R['rax', 'rflags', 'rip'] W['rax', 'rip']
	 D[]
	 STACK:{}:(8,)

<Symbol '.L27' section='.text', address=[32]>
    ENDER False -- NXT 45
    CFG .L42
    CFG 45
    GRAPH_NXT .L42
    GRAPH_NXT 45
    GRAPH_PRV 44
    GRAPH_PRV 57
'X64_AMOCO.InstructionDEAD'>[None]testb     %al, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L42
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L42' section='.text', address=[38]>]

<Symbol 45 section='.text'>
    ENDER False -- NXT 46
    CFG gzungetc@PLT
    CFG 46
    GRAPH_NXT 46
    GRAPH_NXT gzungetc@PLT
    GRAPH_PRV .L27
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rsi
	 R['rbx', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $32, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzungetc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzungetc@PLT' bind='globl'>]

<Symbol 46 section='.text'>
    ENDER False -- NXT 47
    CFG .L43
    CFG 47
    GRAPH_NXT .L43
    GRAPH_NXT 47
    GRAPH_PRV 45
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $32, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L43
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L43' section='.text', address=[37]>]

<Symbol 47 section='.text'>
    ENDER False -- NXT 48
    CFG gzgets@PLT
    CFG 48
    GRAPH_NXT 48
    GRAPH_NXT gzgets@PLT
    GRAPH_PRV 46
'X64_AMOCO.InstructionDEAD'>[None]movl      %r13d, %edx
	 R['r13', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r12, %rsi
	 R['r12', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzgets@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzgets@PLT' bind='globl'>]

<Symbol 48 section='.text'>
    ENDER False -- NXT 49
    CFG strlen@PLT
    CFG 49
    GRAPH_NXT 49
    GRAPH_NXT strlen@PLT
    GRAPH_PRV 47
'X64_AMOCO.InstructionDEAD'>[None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      strlen@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'strlen@PLT' bind='globl'>]

<Symbol 49 section='.text'>
    ENDER False -- NXT 50
    CFG .L44
    CFG 50
    GRAPH_NXT .L44
    GRAPH_NXT 50
    GRAPH_PRV 48
'X64_AMOCO.InstructionDEAD'>[None]cmpq      $7, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L44
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L44' section='.text', address=[45]>]

<Symbol 50 section='.text'>
    ENDER False -- NXT 51
    CFG strcmp@PLT
    CFG 51
    GRAPH_NXT 51
    GRAPH_NXT strcmp@PLT
    GRAPH_PRV 49
'X64_AMOCO.InstructionDEAD'>[None]leaq      hello+6(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      strcmp@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'strcmp@PLT' bind='globl'>]

<Symbol 51 section='.text'>
    ENDER False -- NXT 52
    CFG .L45
    CFG 52
    GRAPH_NXT .L45
    GRAPH_NXT 52
    GRAPH_PRV 50
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L45
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L45' section='.text', address=[44]>]

<Symbol 52 section='.text'>
    ENDER False -- NXT 53
    CFG __printf_chk@PLT
    CFG 53
    GRAPH_NXT 53
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV 51
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC21(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r12, %rdx
	 R['r12', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '__printf_chk@PLT' bind='globl'>]

<Symbol 53 section='.text'>
    ENDER False -- NXT 54
    CFG gzclose@PLT
    CFG 54
    GRAPH_NXT 54
    GRAPH_NXT gzclose@PLT
    GRAPH_PRV 52
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzclose@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzclose@PLT' bind='globl'>]

<Symbol 54 section='.text'>
    ENDER False -- NXT 55
    CFG .L46
    CFG 55
    GRAPH_NXT .L46
    GRAPH_NXT 55
    GRAPH_PRV 53
'X64_AMOCO.InstructionDEAD'>[None]movq      8(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L46
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '.L46' section='.text', address=[36]>]

<Symbol 55 section='.text'>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV 54
'X64_AMOCO.InstructionDEAD'>[None]addq      $16, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx', 'rflags']
	 STACK:{}:(-8,)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:(-16,)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{}:(-24,)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{}:(-32,)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{}:(-40,)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{}:(-48,)
'X64_AMOCO.InstructionDEAD'>[ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{}:(-48,)
	 dst=[None]

<Symbol 56 section='.text'>
    ENDER False -- NXT .L26
    CFG .L26
    GRAPH_NXT .L26
'plasmasm.constants.P2Align'>[None].p2align 4,,10
'plasmasm.constants.P2Align'>[None].p2align 3

<Symbol '.L26' section='.text', address=[33]>
    ENDER False -- NXT 57
    CFG gzgetc@PLT
    CFG 57
    GRAPH_NXT 57
    GRAPH_NXT gzgetc@PLT
    GRAPH_PRV 43
    GRAPH_PRV 56
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzgetc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gzgetc@PLT' bind='globl'>]

<Symbol 57 section='.text'>
    ENDER True -- NXT None
    CFG .L27
    GRAPH_NXT .L27
    GRAPH_PRV .L26
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $32, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]setne     %al
	 R['rax', 'rflags', 'rip'] W['rax', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L27
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{}:(8,)
	 dst=[<Symbol '.L27' section='.text', address=[32]>]

<Symbol '.L36' section='.text', address=[34]>
    ENDER False -- NXT 58
    CFG fwrite@PLT
    CFG 58
    GRAPH_NXT 58
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV 24
    GRAPH_PRV 33
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC6(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $13, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 58 section='.text'>
    ENDER False -- NXT 59
    CFG exit@PLT
    CFG 59
    GRAPH_NXT 59
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L36
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 59 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 58

<Symbol '.L25' section='.text', address=[35]>
    ENDER False -- NXT 60
    CFG gztell@PLT
    CFG 60
    GRAPH_NXT 60
    GRAPH_NXT gztell@PLT
    GRAPH_PRV 40
    GRAPH_PRV 42
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gztell@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'gztell@PLT' bind='globl'>]

<Symbol 60 section='.text'>
    ENDER False -- NXT 61
    CFG __fprintf_chk@PLT
    CFG 61
    GRAPH_NXT 61
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L25
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC16(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['r8', 'rcx', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %r8
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, %rcx
	 R['rbp', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '__fprintf_chk@PLT' bind='globl'>]

<Symbol 61 section='.text'>
    ENDER False -- NXT 62
    CFG exit@PLT
    CFG 62
    GRAPH_NXT 62
    GRAPH_NXT exit@PLT
    GRAPH_PRV 60
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 62 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 61

<Symbol '.L46' section='.text', address=[36]>
    ENDER False -- NXT 63
    CFG __stack_chk_fail@PLT
    CFG 63
    GRAPH_NXT 63
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV 54
'X64_AMOCO.InstructionDEAD'>[sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '__stack_chk_fail@PLT' bind='globl'>]

<Symbol 63 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV .L46

<Symbol '.L43' section='.text', address=[37]>
    ENDER False -- NXT 64
    CFG fwrite@PLT
    CFG 64
    GRAPH_NXT 64
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV 46
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC18(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $15, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 64 section='.text'>
    ENDER False -- NXT 65
    CFG exit@PLT
    CFG 65
    GRAPH_NXT 65
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L43
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 65 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 64

<Symbol '.L42' section='.text', address=[38]>
    ENDER False -- NXT 66
    CFG fwrite@PLT
    CFG 66
    GRAPH_NXT 66
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV .L27
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC17(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $13, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 66 section='.text'>
    ENDER False -- NXT 67
    CFG exit@PLT
    CFG 67
    GRAPH_NXT 67
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L42
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 67 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 66

<Symbol '.L39' section='.text', address=[39]>
    ENDER False -- NXT 68
    CFG gzerror@PLT
    CFG 68
    GRAPH_NXT 68
    GRAPH_NXT gzerror@PLT
    GRAPH_PRV 29
'X64_AMOCO.InstructionDEAD'>[None]leaq      4(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzerror@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol 'gzerror@PLT' bind='globl'>]

<Symbol 68 section='.text'>
    ENDER False -- NXT .L37
    CFG .L37
    GRAPH_NXT .L37
    GRAPH_PRV .L39
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC11(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %rcx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)

<Symbol '.L37' section='.text', address=[40]>
    ENDER False -- NXT 69
    CFG __fprintf_chk@PLT
    CFG 69
    GRAPH_NXT 69
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L41
    GRAPH_PRV 68
    GRAPH_PRV 71
    GRAPH_PRV 72
    GRAPH_PRV 75
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol '__fprintf_chk@PLT' bind='globl'>]

<Symbol 69 section='.text'>
    ENDER False -- NXT 70
    CFG exit@PLT
    CFG 70
    GRAPH_NXT 70
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L37
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 70 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 69

<Symbol '.L38' section='.text', address=[41]>
    ENDER False -- NXT 71
    CFG gzerror@PLT
    CFG 71
    GRAPH_NXT 71
    GRAPH_NXT gzerror@PLT
    GRAPH_PRV 27
'X64_AMOCO.InstructionDEAD'>[None]leaq      4(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r14, %rdi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzerror@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol 'gzerror@PLT' bind='globl'>]

<Symbol 71 section='.text'>
    ENDER True -- NXT None
    CFG .L37
    GRAPH_NXT .L37
    GRAPH_PRV .L38
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC8(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %rcx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L37
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol '.L37' section='.text', address=[40]>]

<Symbol '.L41' section='.text', address=[42]>
    ENDER True -- NXT None
    CFG .L37
    GRAPH_NXT .L37
    GRAPH_PRV 37
'X64_AMOCO.InstructionDEAD'>[None]movq      %r12, %rcx
	 R['r12', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC14(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L37
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{}:(8,)
	 dst=[<Symbol '.L37' section='.text', address=[40]>]

<Symbol '.L40' section='.text', address=[43]>
    ENDER False -- NXT 72
    CFG gzerror@PLT
    CFG 72
    GRAPH_NXT 72
    GRAPH_NXT gzerror@PLT
    GRAPH_PRV 35
'X64_AMOCO.InstructionDEAD'>[None]leaq      4(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzerror@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol 'gzerror@PLT' bind='globl'>]

<Symbol 72 section='.text'>
    ENDER True -- NXT None
    CFG .L37
    GRAPH_NXT .L37
    GRAPH_PRV .L40
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC13(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %rcx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L37
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol '.L37' section='.text', address=[40]>]

<Symbol '.L45' section='.text', address=[44]>
    ENDER False -- NXT 73
    CFG fwrite@PLT
    CFG 73
    GRAPH_NXT 73
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV 51
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC20(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $24, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 73 section='.text'>
    ENDER False -- NXT 74
    CFG exit@PLT
    CFG 74
    GRAPH_NXT 74
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L45
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(8,)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 74 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 73

<Symbol '.L44' section='.text', address=[45]>
    ENDER False -- NXT 75
    CFG gzerror@PLT
    CFG 75
    GRAPH_NXT 75
    GRAPH_NXT gzerror@PLT
    GRAPH_PRV 49
'X64_AMOCO.InstructionDEAD'>[None]leaq      4(%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[sub]call      gzerror@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol 'gzerror@PLT' bind='globl'>]

<Symbol 75 section='.text'>
    ENDER True -- NXT None
    CFG .L37
    GRAPH_NXT .L37
    GRAPH_PRV .L44
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC19(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %rcx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L37
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%rsi': [4]}:(8,)
	 dst=[<Symbol '.L37' section='.text', address=[40]>]

<Symbol '.LC22' section='.rodata.str1.1', address=[46]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"1.2.8"

<Symbol '.LC23' section='.rodata.str1.1', address=[47]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"deflateInit"

<Symbol '.LC24' section='.rodata.str1.1', address=[48]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"deflate"

<Symbol '.LC25' section='.rodata.str1.1', address=[49]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"deflateEnd"

<Symbol 2 section='.text', type='padding', bind='p2align', address=[50]>
    ENDER False -- NXT test_deflate
    CFG test_deflate
    GRAPH_NXT test_deflate
'plasmasm.constants.P2Align'>[None].p2align 4,,15

<Symbol 'test_deflate' section='.text', type='function', bind='globl', address=[51], data='LFB:.LFB65'>
    ENDER False -- NXT .L48
    CFG .L48
    GRAPH_NXT .L48
    GRAPH_PRV 2
    GRAPH_PRV 231
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]leaq      hello(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r13', 'r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'r14', 'rax', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rax', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdi, %r13
	 R['rdi', 'rip'] W['r13', 'rip']
	 D['r12', 'r13', 'r14', 'rax', 'rbp', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'r14', 'rax', 'rbp', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %r12
	 R['rip', 'rsi'] W['r12', 'rip']
	 D['r12', 'r14', 'rax', 'rbp', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rcx, %r14
	 R['rcx', 'rip'] W['r14', 'rip']
	 D['r14', 'rax', 'rbp', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rcx, %rbp
	 R['rcx', 'rip'] W['rbp', 'rip']
	 D['rax', 'rbp', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]addq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:{}:(120,)

<Symbol '.L48' section='.text', address=[52]>
    ENDER False -- NXT 76
    CFG .L48
    CFG 76
    GRAPH_NXT .L48
    GRAPH_NXT 76
    GRAPH_PRV .L48
    GRAPH_PRV test_deflate
'X64_AMOCO.InstructionDEAD'>[None]movl      (%rbp), %edx
	 R['MEM', 'rbp', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]addq      $4, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]leal      -16843009(%rdx), %eax
	 R['MEM', 'rax', 'rdx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]notl      %edx
	 R['rdx', 'rip'] W['rdx', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]andl      %edx, %eax
	 R['rax', 'rdx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]andl      $-2139062144, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[jcc]je        .L48
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(120,)
	 dst=[<Symbol '.L48' section='.text', address=[52]>]

<Symbol 76 section='.text'>
    ENDER False -- NXT 77
    CFG deflateInit_@PLT
    CFG 77
    GRAPH_NXT 77
    GRAPH_NXT deflateInit_@PLT
    GRAPH_PRV .L48
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %edx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['rbx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['rbx', 'rdi', 'rsi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]shrl      $16, %edx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rbx', 'rdi', 'rsi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]testl     $32896, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rbx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rbx', 'rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]cmove     %edx, %eax
	 R['rax', 'rdx', 'rflags', 'rip'] W['rax', 'rip']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]leaq      2(%rbp), %rdx
	 R['MEM', 'rbp', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movl      $-1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]cmove     %rdx, %rbp
	 R['rbp', 'rdx', 'rflags', 'rip'] W['rbp', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %edx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]addb      %al, %dl
	 R['rax', 'rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC22(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]sbbq      $3, %rbp
	 R['rbp', 'rflags', 'rip'] W['rbp', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]subq      %rcx, %rbp
	 R['rbp', 'rcx', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $112, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]addq      $1, %rbp
	 R['rbp', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol 'deflateInit_@PLT' bind='globl'>]

<Symbol 77 section='.text'>
    ENDER False -- NXT 78
    CFG .L67
    CFG 78
    GRAPH_NXT .L67
    GRAPH_NXT 78
    GRAPH_PRV 76
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L67
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L67' section='.text', address=[59]>]

<Symbol 78 section='.text'>
    ENDER True -- NXT None
    CFG .L51
    GRAPH_NXT .L51
    GRAPH_PRV 77
'X64_AMOCO.InstructionDEAD'>[None]movq      %r14, (%rsp)
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r13, 24(%rsp)
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L51
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 64, 72, 80, 120)
	 dst=[<Symbol '.L51' section='.text', address=[54]>]

<Symbol 79 section='.text'>
    ENDER False -- NXT .L68
    CFG .L68
    GRAPH_NXT .L68
'plasmasm.constants.P2Align'>[None].p2align 4,,10
'plasmasm.constants.P2Align'>[None].p2align 3

<Symbol '.L68' section='.text', address=[53]>
    ENDER False -- NXT 80
    CFG .L55
    CFG 80
    GRAPH_NXT .L55
    GRAPH_NXT 80
    GRAPH_PRV .L51
    GRAPH_PRV 79
'X64_AMOCO.InstructionDEAD'>[None]cmpq      %r12, 40(%rsp)
	 R['MEM', 'r12', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jae       .L55
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L55' section='.text', address=[56]>]

<Symbol 80 section='.text'>
    ENDER False -- NXT 81
    CFG deflate@PLT
    CFG 81
    GRAPH_NXT 81
    GRAPH_NXT deflate@PLT
    GRAPH_PRV .L68
'X64_AMOCO.InstructionDEAD'>[None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, 32(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, 8(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' bind='globl'>]

<Symbol 81 section='.text'>
    ENDER False -- NXT 82
    CFG .L66
    CFG 82
    GRAPH_NXT .L66
    GRAPH_NXT 82
    GRAPH_PRV 80
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L66
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L66' section='.text', address=[57]>]

<Symbol 82 section='.text'>
    ENDER False -- NXT .L51
    CFG .L51
    GRAPH_NXT .L51
    GRAPH_PRV 81

<Symbol '.L51' section='.text', address=[54]>
    ENDER False -- NXT 83
    CFG .L68
    CFG 83
    GRAPH_NXT .L68
    GRAPH_NXT 83
    GRAPH_PRV 78
    GRAPH_PRV 82
'X64_AMOCO.InstructionDEAD'>[None]cmpq      %rbp, 16(%rsp)
	 R['MEM', 'rbp', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L68
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L68' section='.text', address=[53]>]

<Symbol 83 section='.text'>
    ENDER True -- NXT None
    CFG .L55
    GRAPH_NXT .L55
    GRAPH_PRV .L51
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L55
	 R['rip'] W['rip']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L55' section='.text', address=[56]>]

<Symbol 84 section='.text'>
    ENDER False -- NXT .L69
    CFG .L69
    GRAPH_NXT .L69
'plasmasm.constants.P2Align'>[None].p2align 4,,10
'plasmasm.constants.P2Align'>[None].p2align 3

<Symbol '.L69' section='.text', address=[55]>
    ENDER False -- NXT 85
    CFG .L66
    CFG 85
    GRAPH_NXT .L66
    GRAPH_NXT 85
    GRAPH_PRV 84
    GRAPH_PRV 86
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L66
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L66' section='.text', address=[57]>]

<Symbol 85 section='.text'>
    ENDER False -- NXT .L55
    CFG .L55
    GRAPH_NXT .L55
    GRAPH_PRV .L69

<Symbol '.L55' section='.text', address=[56]>
    ENDER False -- NXT 86
    CFG deflate@PLT
    CFG 86
    GRAPH_NXT 86
    GRAPH_NXT deflate@PLT
    GRAPH_PRV .L68
    GRAPH_PRV 83
    GRAPH_PRV 85
'X64_AMOCO.InstructionDEAD'>[None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, 32(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' bind='globl'>]

<Symbol 86 section='.text'>
    ENDER False -- NXT 87
    CFG .L69
    CFG 87
    GRAPH_NXT .L69
    GRAPH_NXT 87
    GRAPH_PRV .L55
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L69
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L69' section='.text', address=[55]>]

<Symbol 87 section='.text'>
    ENDER False -- NXT 88
    CFG deflateEnd@PLT
    CFG 88
    GRAPH_NXT 88
    GRAPH_NXT deflateEnd@PLT
    GRAPH_PRV 86
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflateEnd@PLT' bind='globl'>]

<Symbol 88 section='.text'>
    ENDER False -- NXT 89
    CFG .L70
    CFG 89
    GRAPH_NXT .L70
    GRAPH_NXT 89
    GRAPH_PRV 87
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L70
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L70' section='.text', address=[61]>]

<Symbol 89 section='.text'>
    ENDER False -- NXT 90
    CFG .L71
    CFG 90
    GRAPH_NXT .L71
    GRAPH_NXT 90
    GRAPH_PRV 88
'X64_AMOCO.InstructionDEAD'>[None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L71
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L71' section='.text', address=[60]>]

<Symbol 90 section='.text'>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV 89
'X64_AMOCO.InstructionDEAD'>[None]subq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-128]}:(-128, -120, -104, -96, -64, -56, -48, -8)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{'%rbx': [-160]}:(-160, -152, -136, -128, -96, -88, -80, -40)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
'X64_AMOCO.InstructionDEAD'>[ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
	 dst=[None]

<Symbol '.L66' section='.text', address=[57]>
    ENDER False -- NXT .L65
    CFG .L65
    GRAPH_NXT .L65
    GRAPH_PRV .L69
    GRAPH_PRV 81
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC24(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)

<Symbol '.L65' section='.text', address=[58]>
    ENDER False -- NXT 91
    CFG __fprintf_chk@PLT
    CFG 91
    GRAPH_NXT 91
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L66
    GRAPH_PRV .L67
    GRAPH_PRV .L70
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' bind='globl'>]

<Symbol 91 section='.text'>
    ENDER False -- NXT 92
    CFG exit@PLT
    CFG 92
    GRAPH_NXT 92
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L65
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 92 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 91

<Symbol '.L67' section='.text', address=[59]>
    ENDER True -- NXT None
    CFG .L65
    GRAPH_NXT .L65
    GRAPH_PRV 77
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC23(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L65
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L65' section='.text', address=[58]>]

<Symbol '.L71' section='.text', address=[60]>
    ENDER False -- NXT 93
    CFG __stack_chk_fail@PLT
    CFG 93
    GRAPH_NXT 93
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV 89
'X64_AMOCO.InstructionDEAD'>[sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' bind='globl'>]

<Symbol 93 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV .L71

<Symbol '.L70' section='.text', address=[61]>
    ENDER True -- NXT None
    CFG .L65
    GRAPH_NXT .L65
    GRAPH_PRV 88
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC25(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L65
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L65' section='.text', address=[58]>]

<Symbol '.LC26' section='.rodata.str1.1', address=[62]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"inflateInit"

<Symbol '.LC27' section='.rodata.str1.1', address=[63]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"inflate"

<Symbol '.LC28' section='.rodata.str1.1', address=[64]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"inflateEnd"

<Symbol '.LC29' section='.rodata.str1.1', address=[65]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"bad inflate\n"

<Symbol '.LC30' section='.rodata.str1.1', address=[66]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"inflate(): %s\n"

<Symbol 3 section='.text', type='padding', bind='p2align', address=[67]>
    ENDER False -- NXT test_inflate
    CFG test_inflate
    GRAPH_NXT test_inflate
'plasmasm.constants.P2Align'>[None].p2align 4,,15

<Symbol 'test_inflate' section='.text', type='function', bind='globl', address=[68], data='LFB:.LFB66'>
    ENDER False -- NXT 94
    CFG inflateInit_@PLT
    CFG 94
    GRAPH_NXT 94
    GRAPH_NXT inflateInit_@PLT
    GRAPH_PRV 232
    GRAPH_PRV 3
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %r12
	 R['rip', 'rsi'] W['r12', 'rip']
	 D['r12', 'r13', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'rax', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'rax', 'rbp', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC22(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['r13', 'rax', 'rbp', 'rbx', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['r13', 'rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdx, %r13
	 R['rdx', 'rip'] W['r13', 'rip']
	 D['r13', 'rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]subq      $136, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rcx, %rbp
	 R['rcx', 'rip'] W['rbp', 'rip']
	 D['rax', 'rbp', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movq      $28542640608928103, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdi, (%rsp)
	 R['rdi', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, (%rdx)
	 R['rax', 'rdx', 'rip'] W['MEM', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdx, 24(%rsp)
	 R['rdx', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 24, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $112, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%rbx': [0]}:(0, 24, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 24, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $0, 8(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateInit_@PLT' bind='globl'>]

<Symbol 94 section='.text'>
    ENDER False -- NXT 95
    CFG .L73
    CFG 95
    GRAPH_NXT .L73
    GRAPH_NXT 95
    GRAPH_PRV test_inflate
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]je        .L73
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
	 dst=[<Symbol '.L73' section='.text', address=[70]>]

<Symbol 95 section='.text'>
    ENDER True -- NXT None
    CFG .L89
    GRAPH_NXT .L89
    GRAPH_PRV 94
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L89
	 R['rip'] W['rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
	 dst=[<Symbol '.L89' section='.text', address=[74]>]

<Symbol 96 section='.text'>
    ENDER False -- NXT .L91
    CFG .L91
    GRAPH_NXT .L91
'plasmasm.constants.P2Align'>[None].p2align 4,,10
'plasmasm.constants.P2Align'>[None].p2align 3

<Symbol '.L91' section='.text', address=[69]>
    ENDER False -- NXT 97
    CFG .L77
    CFG 97
    GRAPH_NXT .L77
    GRAPH_NXT 97
    GRAPH_PRV .L73
    GRAPH_PRV 96
'X64_AMOCO.InstructionDEAD'>[None]cmpq      %r12, 16(%rsp)
	 R['MEM', 'r12', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jae       .L77
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L77' section='.text', address=[71]>]

<Symbol 97 section='.text'>
    ENDER False -- NXT 98
    CFG inflate@PLT
    CFG 98
    GRAPH_NXT 98
    GRAPH_NXT inflate@PLT
    GRAPH_PRV .L91
'X64_AMOCO.InstructionDEAD'>[None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, 32(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, 8(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflate@PLT' bind='globl'>]

<Symbol 98 section='.text'>
    ENDER False -- NXT 99
    CFG .L77
    CFG 99
    GRAPH_NXT .L77
    GRAPH_NXT 99
    GRAPH_PRV 97
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]je        .L77
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L77' section='.text', address=[71]>]

<Symbol 99 section='.text'>
    ENDER False -- NXT 100
    CFG .L90
    CFG 100
    GRAPH_NXT .L90
    GRAPH_NXT 100
    GRAPH_PRV 98
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L90
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L90' section='.text', address=[72]>]

<Symbol 100 section='.text'>
    ENDER False -- NXT .L73
    CFG .L73
    GRAPH_NXT .L73
    GRAPH_PRV 99

<Symbol '.L73' section='.text', address=[70]>
    ENDER False -- NXT 101
    CFG .L91
    CFG 101
    GRAPH_NXT .L91
    GRAPH_NXT 101
    GRAPH_PRV 100
    GRAPH_PRV 94
'X64_AMOCO.InstructionDEAD'>[None]cmpq      %rbp, 40(%rsp)
	 R['MEM', 'rbp', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jb        .L91
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L91' section='.text', address=[69]>]

<Symbol 101 section='.text'>
    ENDER False -- NXT .L77
    CFG .L77
    GRAPH_NXT .L77
    GRAPH_PRV .L73

<Symbol '.L77' section='.text', address=[71]>
    ENDER False -- NXT 102
    CFG inflateEnd@PLT
    CFG 102
    GRAPH_NXT 102
    GRAPH_NXT inflateEnd@PLT
    GRAPH_PRV .L91
    GRAPH_PRV 101
    GRAPH_PRV 98
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateEnd@PLT' bind='globl'>]

<Symbol 102 section='.text'>
    ENDER False -- NXT 103
    CFG .L92
    CFG 103
    GRAPH_NXT .L92
    GRAPH_NXT 103
    GRAPH_PRV .L77
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L92
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L92' section='.text', address=[77]>]

<Symbol 103 section='.text'>
    ENDER False -- NXT 104
    CFG strcmp@PLT
    CFG 104
    GRAPH_NXT 104
    GRAPH_NXT strcmp@PLT
    GRAPH_PRV 102
'X64_AMOCO.InstructionDEAD'>[None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      strcmp@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'strcmp@PLT' bind='globl'>]

<Symbol 104 section='.text'>
    ENDER False -- NXT 105
    CFG .L93
    CFG 105
    GRAPH_NXT .L93
    GRAPH_NXT 105
    GRAPH_PRV 103
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L93
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L93' section='.text', address=[76]>]

<Symbol 105 section='.text'>
    ENDER False -- NXT 106
    CFG __printf_chk@PLT
    CFG 106
    GRAPH_NXT 106
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV 104
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC30(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r13, %rdx
	 R['r13', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__printf_chk@PLT' bind='globl'>]

<Symbol 106 section='.text'>
    ENDER False -- NXT 107
    CFG .L94
    CFG 107
    GRAPH_NXT .L94
    GRAPH_NXT 107
    GRAPH_PRV 105
'X64_AMOCO.InstructionDEAD'>[None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L94
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L94' section='.text', address=[75]>]

<Symbol 107 section='.text'>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV 106
'X64_AMOCO.InstructionDEAD'>[None]addq      $136, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'rbp', 'rbx']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'rbp']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13']
	 STACK:{'%rbx': [-160]}:(-160, -152, -136, -128, -96, -88, -80, -40)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13']
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
'X64_AMOCO.InstructionDEAD'>[ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
	 dst=[None]

<Symbol '.L90' section='.text', address=[72]>
    ENDER False -- NXT .L88
    CFG .L88
    GRAPH_NXT .L88
    GRAPH_PRV 99
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC27(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)

<Symbol '.L88' section='.text', address=[73]>
    ENDER False -- NXT 108
    CFG __fprintf_chk@PLT
    CFG 108
    GRAPH_NXT 108
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L89
    GRAPH_PRV .L90
    GRAPH_PRV .L92
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' bind='globl'>]

<Symbol 108 section='.text'>
    ENDER False -- NXT 109
    CFG exit@PLT
    CFG 109
    GRAPH_NXT 109
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L88
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 109 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 108

<Symbol '.L89' section='.text', address=[74]>
    ENDER True -- NXT None
    CFG .L88
    GRAPH_NXT .L88
    GRAPH_PRV 95
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC26(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L88
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
	 dst=[<Symbol '.L88' section='.text', address=[73]>]

<Symbol '.L94' section='.text', address=[75]>
    ENDER False -- NXT 110
    CFG __stack_chk_fail@PLT
    CFG 110
    GRAPH_NXT 110
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV 106
'X64_AMOCO.InstructionDEAD'>[sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' bind='globl'>]

<Symbol 110 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV .L94

<Symbol '.L93' section='.text', address=[76]>
    ENDER False -- NXT 111
    CFG fwrite@PLT
    CFG 111
    GRAPH_NXT 111
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV 104
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC29(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $12, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 111 section='.text'>
    ENDER False -- NXT 112
    CFG exit@PLT
    CFG 112
    GRAPH_NXT 112
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L93
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 112 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 111

<Symbol '.L92' section='.text', address=[77]>
    ENDER True -- NXT None
    CFG .L88
    GRAPH_NXT .L88
    GRAPH_PRV 102
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC28(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L88
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L88' section='.text', address=[73]>]

<Symbol '.LC31' section='.rodata.str1.1', address=[78]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"deflate not greedy\n"

<Symbol '.LC32' section='.rodata.str1.8', align=8, address=[79]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"deflate should report Z_STREAM_END\n"

<Symbol 4 section='.text', type='padding', bind='p2align', address=[80]>
    ENDER False -- NXT test_large_deflate
    CFG test_large_deflate
    GRAPH_NXT test_large_deflate
'plasmasm.constants.P2Align'>[None].p2align 4,,15

<Symbol 'test_large_deflate' section='.text', type='function', bind='globl', address=[81], data='LFB:.LFB67'>
    ENDER False -- NXT 113
    CFG deflateInit_@PLT
    CFG 113
    GRAPH_NXT 113
    GRAPH_NXT deflateInit_@PLT
    GRAPH_PRV 233
    GRAPH_PRV 4
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdx, %r13
	 R['rdx', 'rip'] W['r13', 'rip']
	 D['r13', 'r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'r14', 'rax', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC22(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['r12', 'r14', 'rax', 'rbp', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'r14', 'rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['r12', 'r14', 'rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdi, %r14
	 R['rdi', 'rip'] W['r14', 'rip']
	 D['r12', 'r14', 'rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %rbp
	 R['rip', 'rsi'] W['rbp', 'rip']
	 D['r12', 'rax', 'rbp', 'rbx', 'rdi', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rcx, %r12
	 R['rcx', 'rip'] W['r12', 'rip']
	 D['r12', 'rax', 'rbx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]addq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movl      $112, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rbx', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rdi']
	 STACK:{'%rbx': [0]}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%rbx': [0]}:(80,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%rbx': [0]}:(80,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(80,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol 'deflateInit_@PLT' bind='globl'>]

<Symbol 113 section='.text'>
    ENDER False -- NXT 114
    CFG .L107
    CFG 114
    GRAPH_NXT .L107
    GRAPH_NXT 114
    GRAPH_PRV test_large_deflate
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L107
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L107' section='.text', address=[84]>]

<Symbol 114 section='.text'>
    ENDER False -- NXT 115
    CFG deflate@PLT
    CFG 115
    GRAPH_NXT 115
    GRAPH_NXT deflate@PLT
    GRAPH_PRV 113
'X64_AMOCO.InstructionDEAD'>[None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r14, 24(%rsp)
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %ebp, 32(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r13, (%rsp)
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %r12d, 8(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' bind='globl'>]

<Symbol 115 section='.text'>
    ENDER False -- NXT 116
    CFG .L106
    CFG 116
    GRAPH_NXT .L106
    GRAPH_NXT 116
    GRAPH_PRV 114
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L106
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L106' section='.text', address=[82]>]

<Symbol 116 section='.text'>
    ENDER False -- NXT 117
    CFG .L108
    CFG 117
    GRAPH_NXT .L108
    GRAPH_NXT 117
    GRAPH_PRV 115
'X64_AMOCO.InstructionDEAD'>[None]movl      8(%rsp), %eax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L108
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L108' section='.text', address=[88]>]

<Symbol 117 section='.text'>
    ENDER False -- NXT 118
    CFG deflateParams@PLT
    CFG 118
    GRAPH_NXT 118
    GRAPH_NXT deflateParams@PLT
    GRAPH_PRV 116
'X64_AMOCO.InstructionDEAD'>[None]xorl      %edx, %edx
	 R['rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflateParams@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflateParams@PLT' bind='globl'>]

<Symbol 118 section='.text'>
    ENDER False -- NXT 119
    CFG deflate@PLT
    CFG 119
    GRAPH_NXT 119
    GRAPH_NXT deflate@PLT
    GRAPH_PRV 117
'X64_AMOCO.InstructionDEAD'>[None]shrl      $1, %ebp
	 R['rbp', 'rflags', 'rip'] W['rbp', 'rflags', 'rip']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r14, (%rsp)
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %ebp, 8(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' bind='globl'>]

<Symbol 119 section='.text'>
    ENDER False -- NXT 120
    CFG .L106
    CFG 120
    GRAPH_NXT .L106
    GRAPH_NXT 120
    GRAPH_PRV 118
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L106
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L106' section='.text', address=[82]>]

<Symbol 120 section='.text'>
    ENDER False -- NXT 121
    CFG deflateParams@PLT
    CFG 121
    GRAPH_NXT 121
    GRAPH_NXT deflateParams@PLT
    GRAPH_PRV 119
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $9, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflateParams@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflateParams@PLT' bind='globl'>]

<Symbol 121 section='.text'>
    ENDER False -- NXT 122
    CFG deflate@PLT
    CFG 122
    GRAPH_NXT 122
    GRAPH_NXT deflate@PLT
    GRAPH_PRV 120
'X64_AMOCO.InstructionDEAD'>[None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r13, (%rsp)
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %r12d, 8(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' bind='globl'>]

<Symbol 122 section='.text'>
    ENDER False -- NXT 123
    CFG .L106
    CFG 123
    GRAPH_NXT .L106
    GRAPH_NXT 123
    GRAPH_PRV 121
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L106
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L106' section='.text', address=[82]>]

<Symbol 123 section='.text'>
    ENDER False -- NXT 124
    CFG deflate@PLT
    CFG 124
    GRAPH_NXT 124
    GRAPH_NXT deflate@PLT
    GRAPH_PRV 122
'X64_AMOCO.InstructionDEAD'>[None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' bind='globl'>]

<Symbol 124 section='.text'>
    ENDER False -- NXT 125
    CFG .L109
    CFG 125
    GRAPH_NXT .L109
    GRAPH_NXT 125
    GRAPH_PRV 123
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L109
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L109' section='.text', address=[87]>]

<Symbol 125 section='.text'>
    ENDER False -- NXT 126
    CFG deflateEnd@PLT
    CFG 126
    GRAPH_NXT 126
    GRAPH_NXT deflateEnd@PLT
    GRAPH_PRV 124
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflateEnd@PLT' bind='globl'>]

<Symbol 126 section='.text'>
    ENDER False -- NXT 127
    CFG .L110
    CFG 127
    GRAPH_NXT .L110
    GRAPH_NXT 127
    GRAPH_PRV 125
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L110
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L110' section='.text', address=[86]>]

<Symbol 127 section='.text'>
    ENDER False -- NXT 128
    CFG .L111
    CFG 128
    GRAPH_NXT .L111
    GRAPH_NXT 128
    GRAPH_PRV 126
'X64_AMOCO.InstructionDEAD'>[None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L111
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L111' section='.text', address=[85]>]

<Symbol 128 section='.text'>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV 127
'X64_AMOCO.InstructionDEAD'>[None]subq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-128]}:(-128, -120, -104, -96, -64, -56, -48, -8)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{'%rbx': [-160]}:(-160, -152, -136, -128, -96, -88, -80, -40)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
'X64_AMOCO.InstructionDEAD'>[ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
	 dst=[None]

<Symbol '.L106' section='.text', address=[82]>
    ENDER False -- NXT .L105
    CFG .L105
    GRAPH_NXT .L105
    GRAPH_PRV 115
    GRAPH_PRV 119
    GRAPH_PRV 122
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC24(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)

<Symbol '.L105' section='.text', address=[83]>
    ENDER False -- NXT 129
    CFG __fprintf_chk@PLT
    CFG 129
    GRAPH_NXT 129
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L106
    GRAPH_PRV .L107
    GRAPH_PRV .L110
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' bind='globl'>]

<Symbol 129 section='.text'>
    ENDER False -- NXT 130
    CFG exit@PLT
    CFG 130
    GRAPH_NXT 130
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L105
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 130 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 129

<Symbol '.L107' section='.text', address=[84]>
    ENDER True -- NXT None
    CFG .L105
    GRAPH_NXT .L105
    GRAPH_PRV 113
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC23(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L105
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L105' section='.text', address=[83]>]

<Symbol '.L111' section='.text', address=[85]>
    ENDER False -- NXT 131
    CFG __stack_chk_fail@PLT
    CFG 131
    GRAPH_NXT 131
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV 127
'X64_AMOCO.InstructionDEAD'>[sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' bind='globl'>]

<Symbol 131 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV .L111

<Symbol '.L110' section='.text', address=[86]>
    ENDER True -- NXT None
    CFG .L105
    GRAPH_NXT .L105
    GRAPH_PRV 126
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC25(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L105
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L105' section='.text', address=[83]>]

<Symbol '.L109' section='.text', address=[87]>
    ENDER False -- NXT 132
    CFG fwrite@PLT
    CFG 132
    GRAPH_NXT 132
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV 124
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC32(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $35, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 132 section='.text'>
    ENDER False -- NXT 133
    CFG exit@PLT
    CFG 133
    GRAPH_NXT 133
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L109
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 133 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 132

<Symbol '.L108' section='.text', address=[88]>
    ENDER False -- NXT 134
    CFG fwrite@PLT
    CFG 134
    GRAPH_NXT 134
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV 116
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC31(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $19, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 134 section='.text'>
    ENDER False -- NXT 135
    CFG exit@PLT
    CFG 135
    GRAPH_NXT 135
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L108
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 135 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 134

<Symbol '.LC33' section='.rodata.str1.1', address=[89]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"large inflate"

<Symbol '.LC34' section='.rodata.str1.1', address=[90]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"bad large inflate: %ld\n"

<Symbol '.LC35' section='.rodata.str1.1', address=[91]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"large_inflate(): OK"

<Symbol 5 section='.text', type='padding', bind='p2align', address=[92]>
    ENDER False -- NXT test_large_inflate
    CFG test_large_inflate
    GRAPH_NXT test_large_inflate
'plasmasm.constants.P2Align'>[None].p2align 4,,15

<Symbol 'test_large_inflate' section='.text', type='function', bind='globl', address=[93], data='LFB:.LFB68'>
    ENDER False -- NXT 136
    CFG inflateInit_@PLT
    CFG 136
    GRAPH_NXT 136
    GRAPH_NXT inflateInit_@PLT
    GRAPH_PRV 234
    GRAPH_PRV 5
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %r13
	 R['rip', 'rsi'] W['r13', 'rip']
	 D['r13', 'r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdx, %rbp
	 R['rdx', 'rip'] W['rbp', 'rip']
	 D['r14', 'rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['r14', 'rax', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rcx, %r14
	 R['rcx', 'rip'] W['r14', 'rip']
	 D['r14', 'rax', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]addq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movl      %esi, 8(%rsp)
	 R['rip', 'rsi', 'rsp'] W['MEM', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:(8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      $28542640608928103, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rbx', 'rsi']
	 STACK:{}:(8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rbx', 'rsi']
	 STACK:{'%rbx': [0]}:(8, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC22(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, (%rdx)
	 R['rax', 'rdx', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdi, (%rsp)
	 R['rdi', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $112, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateInit_@PLT' bind='globl'>]

<Symbol 136 section='.text'>
    ENDER False -- NXT 137
    CFG .L123
    CFG 137
    GRAPH_NXT .L123
    GRAPH_NXT 137
    GRAPH_PRV test_large_inflate
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L123
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol '.L123' section='.text', address=[98]>]

<Symbol 137 section='.text'>
    ENDER True -- NXT None
    CFG .L115
    GRAPH_NXT .L115
    GRAPH_PRV 136
'X64_AMOCO.InstructionDEAD'>[None]movl      %r14d, %r12d
	 R['r14', 'rip'] W['r12', 'rip']
	 D['r12', 'rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L115
	 R['rip'] W['rip']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol '.L115' section='.text', address=[95]>]

<Symbol 138 section='.text'>
    ENDER False -- NXT .L125
    CFG .L125
    GRAPH_NXT .L125
'plasmasm.constants.P2Align'>[None].p2align 4,,10
'plasmasm.constants.P2Align'>[None].p2align 3

<Symbol '.L125' section='.text', address=[94]>
    ENDER False -- NXT 139
    CFG .L124
    CFG 139
    GRAPH_NXT .L124
    GRAPH_NXT 139
    GRAPH_PRV 138
    GRAPH_PRV 140
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L124
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L124' section='.text', address=[96]>]

<Symbol 139 section='.text'>
    ENDER False -- NXT .L115
    CFG .L115
    GRAPH_NXT .L115
    GRAPH_PRV .L125

<Symbol '.L115' section='.text', address=[95]>
    ENDER False -- NXT 140
    CFG inflate@PLT
    CFG 140
    GRAPH_NXT 140
    GRAPH_NXT inflate@PLT
    GRAPH_PRV 137
    GRAPH_PRV 139
'X64_AMOCO.InstructionDEAD'>[None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, 24(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %r12d, 32(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflate@PLT' bind='globl'>]

<Symbol 140 section='.text'>
    ENDER False -- NXT 141
    CFG .L125
    CFG 141
    GRAPH_NXT .L125
    GRAPH_NXT 141
    GRAPH_PRV .L115
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L125
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L125' section='.text', address=[94]>]

<Symbol 141 section='.text'>
    ENDER False -- NXT 142
    CFG inflateEnd@PLT
    CFG 142
    GRAPH_NXT 142
    GRAPH_NXT inflateEnd@PLT
    GRAPH_PRV 140
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateEnd@PLT' bind='globl'>]

<Symbol 142 section='.text'>
    ENDER False -- NXT 143
    CFG .L126
    CFG 143
    GRAPH_NXT .L126
    GRAPH_NXT 143
    GRAPH_PRV 141
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L126
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L126' section='.text', address=[101]>]

<Symbol 143 section='.text'>
    ENDER False -- NXT 144
    CFG .L127
    CFG 144
    GRAPH_NXT .L127
    GRAPH_NXT 144
    GRAPH_PRV 142
'X64_AMOCO.InstructionDEAD'>[None]shrq      $1, %r13
	 R['r13', 'rflags', 'rip'] W['r13', 'rflags', 'rip']
	 D['rax', 'rcx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      40(%rsp), %rcx
	 R['MEM', 'rip', 'rsp'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      (%r13,%r14,2), %rax
	 R['MEM', 'r13', 'r14', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]cmpq      %rax, %rcx
	 R['rax', 'rcx', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L127
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L127' section='.text', address=[100]>]

<Symbol 144 section='.text'>
    ENDER False -- NXT 145
    CFG puts@PLT
    CFG 145
    GRAPH_NXT 145
    GRAPH_NXT puts@PLT
    GRAPH_PRV 143
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC35(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      puts@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'puts@PLT' bind='globl'>]

<Symbol 145 section='.text'>
    ENDER False -- NXT 146
    CFG .L128
    CFG 146
    GRAPH_NXT .L128
    GRAPH_NXT 146
    GRAPH_PRV 144
'X64_AMOCO.InstructionDEAD'>[None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L128
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L128' section='.text', address=[99]>]

<Symbol 146 section='.text'>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV 145
'X64_AMOCO.InstructionDEAD'>[None]subq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-128]}:(-128, -120, -104, -96, -64, -56, -48, -8)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{'%rbx': [-160]}:(-160, -152, -136, -128, -96, -88, -80, -40)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
'X64_AMOCO.InstructionDEAD'>[ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
	 dst=[None]

<Symbol '.L124' section='.text', address=[96]>
    ENDER False -- NXT .L122
    CFG .L122
    GRAPH_NXT .L122
    GRAPH_PRV .L125
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC33(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)

<Symbol '.L122' section='.text', address=[97]>
    ENDER False -- NXT 147
    CFG __fprintf_chk@PLT
    CFG 147
    GRAPH_NXT 147
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L123
    GRAPH_PRV .L124
    GRAPH_PRV .L126
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' bind='globl'>]

<Symbol 147 section='.text'>
    ENDER False -- NXT 148
    CFG exit@PLT
    CFG 148
    GRAPH_NXT 148
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L122
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 148 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 147

<Symbol '.L123' section='.text', address=[98]>
    ENDER True -- NXT None
    CFG .L122
    GRAPH_NXT .L122
    GRAPH_PRV 136
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC26(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L122
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol '.L122' section='.text', address=[97]>]

<Symbol '.L128' section='.text', address=[99]>
    ENDER False -- NXT 149
    CFG __stack_chk_fail@PLT
    CFG 149
    GRAPH_NXT 149
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV 145
'X64_AMOCO.InstructionDEAD'>[sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' bind='globl'>]

<Symbol 149 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV .L128

<Symbol '.L127' section='.text', address=[100]>
    ENDER False -- NXT 150
    CFG __fprintf_chk@PLT
    CFG 150
    GRAPH_NXT 150
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV 143
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC34(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' bind='globl'>]

<Symbol 150 section='.text'>
    ENDER False -- NXT 151
    CFG exit@PLT
    CFG 151
    GRAPH_NXT 151
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L127
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 151 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 150

<Symbol '.L126' section='.text', address=[101]>
    ENDER True -- NXT None
    CFG .L122
    GRAPH_NXT .L122
    GRAPH_PRV 142
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC28(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L122
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L122' section='.text', address=[97]>]

<Symbol 6 section='.text', type='padding', bind='p2align', address=[102]>
    ENDER False -- NXT test_flush
    CFG test_flush
    GRAPH_NXT test_flush
'plasmasm.constants.P2Align'>[None].p2align 4,,15

<Symbol 'test_flush' section='.text', type='function', bind='globl', address=[103], data='LFB:.LFB69'>
    ENDER False -- NXT .L130
    CFG .L130
    GRAPH_NXT .L130
    GRAPH_PRV 235
    GRAPH_PRV 6
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdi, %r12
	 R['rdi', 'rip'] W['r12', 'rip']
	 D['r12', 'r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %rbx
	 R['rip', 'rsi'] W['rbx', 'rip']
	 D['r14', 'rax', 'rbx', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['r14', 'rax', 'rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]addq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r14', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %r14
	 R['rip', 'rsi'] W['r14', 'rip']
	 D['r14', 'rax', 'rcx', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %rdx
	 R['rip', 'rsi'] W['rdx', 'rip']
	 D['rax', 'rcx', 'rdx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rcx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rcx']
	 STACK:{}:(120,)

<Symbol '.L130' section='.text', address=[104]>
    ENDER False -- NXT 152
    CFG .L130
    CFG 152
    GRAPH_NXT .L130
    GRAPH_NXT 152
    GRAPH_PRV .L130
    GRAPH_PRV test_flush
'X64_AMOCO.InstructionDEAD'>[None]movl      (%rdx), %ecx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]addq      $4, %rdx
	 R['rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]leal      -16843009(%rcx), %eax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]notl      %ecx
	 R['rcx', 'rip'] W['rcx', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]andl      %ecx, %eax
	 R['rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]andl      $-2139062144, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[jcc]je        .L130
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(120,)
	 dst=[<Symbol '.L130' section='.text', address=[104]>]

<Symbol 152 section='.text'>
    ENDER False -- NXT 153
    CFG deflateInit_@PLT
    CFG 153
    GRAPH_NXT 153
    GRAPH_NXT deflateInit_@PLT
    GRAPH_PRV .L130
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %ecx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['r13', 'rbp', 'rcx', 'rdi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['r13', 'rbp', 'rdi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]shrl      $16, %ecx
	 R['rcx', 'rflags', 'rip'] W['rcx', 'rflags', 'rip']
	 D['r13', 'rbp', 'rdi']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]testl     $32896, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['r13', 'rbp', 'rdi', 'rflags']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsp, %r13
	 R['rip', 'rsp'] W['r13', 'rip']
	 D['r13', 'rbp', 'rdi']
	 STACK:{'%r13': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]cmove     %ecx, %eax
	 R['rax', 'rcx', 'rflags', 'rip'] W['rax', 'rip']
	 D['rbp', 'rdi']
	 STACK:{'%r13': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]leaq      2(%rdx), %rcx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rbp', 'rcx', 'rdi']
	 STACK:{'%r13': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rbp', 'rdi']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %edi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rbp', 'rdi']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]cmove     %rcx, %rdx
	 R['rcx', 'rdx', 'rflags', 'rip'] W['rdx', 'rip']
	 D['rbp']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]addb      %al, %dil
	 R['rax', 'rdi', 'rip'] W['rdi', 'rflags', 'rip']
	 D['rbp', 'rcx', 'rflags']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $112, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rbp', 'rcx', 'rdi']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]sbbq      $3, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rbp', 'rdi']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rbp', 'rdi', 'rflags']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %edx, %ebp
	 R['rdx', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rflags']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC22(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]subl      %esi, %ebp
	 R['rbp', 'rip', 'rsi'] W['rbp', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $-1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%r13': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol 'deflateInit_@PLT' bind='globl'>]

<Symbol 153 section='.text'>
    ENDER False -- NXT 154
    CFG .L142
    CFG 154
    GRAPH_NXT .L142
    GRAPH_NXT 154
    GRAPH_PRV 152
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L142
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L142' section='.text', address=[105]>]

<Symbol 154 section='.text'>
    ENDER False -- NXT 155
    CFG deflate@PLT
    CFG 155
    GRAPH_NXT 155
    GRAPH_NXT deflate@PLT
    GRAPH_PRV 153
'X64_AMOCO.InstructionDEAD'>[None]movq      (%rbx), %rax
	 R['MEM', 'rbx', 'rip'] W['rax', 'rip']
	 D['rax', 'rdi', 'rsi']
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $3, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r14, (%rsp)
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r12, 24(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $3, 8(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, 32(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' bind='globl'>]

<Symbol 155 section='.text'>
    ENDER False -- NXT 156
    CFG .L141
    CFG 156
    GRAPH_NXT .L141
    GRAPH_NXT 156
    GRAPH_PRV 154
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L141
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L141' section='.text', address=[107]>]

<Symbol 156 section='.text'>
    ENDER False -- NXT 157
    CFG deflate@PLT
    CFG 157
    GRAPH_NXT 157
    GRAPH_NXT deflate@PLT
    GRAPH_PRV 155
'X64_AMOCO.InstructionDEAD'>[None]addb      $1, 3(%r12)
	 R['MEM', 'r12', 'rip'] W['MEM', 'rflags', 'rip']
	 D['rdi', 'rflags', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leal      -2(%rbp), %edx
	 R['MEM', 'rbp', 'rdx', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %edx, 8(%rsp)
	 R['rdx', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' bind='globl'>]

<Symbol 157 section='.text'>
    ENDER False -- NXT 158
    CFG .L141
    CFG 158
    GRAPH_NXT .L141
    GRAPH_NXT 158
    GRAPH_PRV 156
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]ja        .L141
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L141' section='.text', address=[107]>]

<Symbol 158 section='.text'>
    ENDER False -- NXT 159
    CFG deflateEnd@PLT
    CFG 159
    GRAPH_NXT 159
    GRAPH_NXT deflateEnd@PLT
    GRAPH_PRV 157
'X64_AMOCO.InstructionDEAD'>[None]movq      %r13, %rdi
	 R['r13', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflateEnd@PLT' bind='globl'>]

<Symbol 159 section='.text'>
    ENDER False -- NXT 160
    CFG .L143
    CFG 160
    GRAPH_NXT .L143
    GRAPH_NXT 160
    GRAPH_PRV 158
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L143
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L143' section='.text', address=[109]>]

<Symbol 160 section='.text'>
    ENDER False -- NXT 161
    CFG .L144
    CFG 161
    GRAPH_NXT .L144
    GRAPH_NXT 161
    GRAPH_PRV 159
'X64_AMOCO.InstructionDEAD'>[None]movq      40(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, (%rbx)
	 R['rax', 'rbx', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L144
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L144' section='.text', address=[108]>]

<Symbol 161 section='.text'>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV 160
'X64_AMOCO.InstructionDEAD'>[None]subq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx', 'rflags']
	 STACK:{'%r13': [-128]}:(-128, -120, -104, -96, -64, -56, -48, -8)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{'%r13': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{'%r13': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{'%r13': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{'%r13': [-160]}:(-160, -152, -136, -128, -96, -88, -80, -40)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{'%r13': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
'X64_AMOCO.InstructionDEAD'>[ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%r13': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
	 dst=[None]

<Symbol '.L142' section='.text', address=[105]>
    ENDER False -- NXT .L140
    CFG .L140
    GRAPH_NXT .L140
    GRAPH_PRV 153
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC23(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(64, 72, 80, 120)

<Symbol '.L140' section='.text', address=[106]>
    ENDER False -- NXT 162
    CFG __fprintf_chk@PLT
    CFG 162
    GRAPH_NXT 162
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L141
    GRAPH_PRV .L142
    GRAPH_PRV .L143
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' bind='globl'>]

<Symbol 162 section='.text'>
    ENDER False -- NXT 163
    CFG exit@PLT
    CFG 163
    GRAPH_NXT 163
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L140
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 163 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 162

<Symbol '.L141' section='.text', address=[107]>
    ENDER True -- NXT None
    CFG .L140
    GRAPH_NXT .L140
    GRAPH_PRV 155
    GRAPH_PRV 157
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC24(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L140
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L140' section='.text', address=[106]>]

<Symbol '.L144' section='.text', address=[108]>
    ENDER False -- NXT 164
    CFG __stack_chk_fail@PLT
    CFG 164
    GRAPH_NXT 164
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV 160
'X64_AMOCO.InstructionDEAD'>[sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' bind='globl'>]

<Symbol 164 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV .L144

<Symbol '.L143' section='.text', address=[109]>
    ENDER True -- NXT None
    CFG .L140
    GRAPH_NXT .L140
    GRAPH_PRV 159
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC25(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L140
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%r13': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L140' section='.text', address=[106]>]

<Symbol '.LC36' section='.rodata.str1.1', address=[110]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"inflateSync"

<Symbol '.LC37' section='.rodata.str1.8', align=8, address=[111]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"inflate should report DATA_ERROR\n"

<Symbol '.LC38' section='.rodata.str1.1', address=[112]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"after inflateSync(): hel%s\n"

<Symbol 7 section='.text', type='padding', bind='p2align', address=[113]>
    ENDER False -- NXT test_sync
    CFG test_sync
    GRAPH_NXT test_sync
'plasmasm.constants.P2Align'>[None].p2align 4,,15

<Symbol 'test_sync' section='.text', type='function', bind='globl', address=[114], data='LFB:.LFB70'>
    ENDER False -- NXT 165
    CFG inflateInit_@PLT
    CFG 165
    GRAPH_NXT 165
    GRAPH_NXT inflateInit_@PLT
    GRAPH_PRV 236
    GRAPH_PRV 7
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %r12
	 R['rip', 'rsi'] W['r12', 'rip']
	 D['r12', 'r13', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'rax', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r13', 'rax', 'rbp', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC22(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['r13', 'rax', 'rbp', 'rbx', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['r13', 'rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdx, %rbp
	 R['rdx', 'rip'] W['rbp', 'rip']
	 D['r13', 'rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]subq      $136, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r13', 'rax', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rcx, %r13
	 R['rcx', 'rip'] W['r13', 'rip']
	 D['r13', 'rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movq      $28542640608928103, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdi, (%rsp)
	 R['rdi', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, (%rdx)
	 R['rax', 'rdx', 'rip'] W['MEM', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $112, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{'%rbx': [0]}:(0, 120)
'X64_AMOCO.InstructionDEAD'>[None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 64, 72, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $2, 8(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateInit_@PLT' bind='globl'>]

<Symbol 165 section='.text'>
    ENDER False -- NXT 166
    CFG .L153
    CFG 166
    GRAPH_NXT .L153
    GRAPH_NXT 166
    GRAPH_PRV test_sync
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L153
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol '.L153' section='.text', address=[115]>]

<Symbol 166 section='.text'>
    ENDER False -- NXT 167
    CFG inflate@PLT
    CFG 167
    GRAPH_NXT 167
    GRAPH_NXT inflate@PLT
    GRAPH_PRV 165
'X64_AMOCO.InstructionDEAD'>[None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]subl      $2, %r12d
	 R['r12', 'rip'] W['r12', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, 24(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %r13d, 32(%rsp)
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflate@PLT' bind='globl'>]

<Symbol 167 section='.text'>
    ENDER False -- NXT 168
    CFG inflateSync@PLT
    CFG 168
    GRAPH_NXT 168
    GRAPH_NXT inflateSync@PLT
    GRAPH_PRV 166
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %r12d, 8(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflateSync@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateSync@PLT' bind='globl'>]

<Symbol 168 section='.text'>
    ENDER False -- NXT 169
    CFG .L154
    CFG 169
    GRAPH_NXT .L154
    GRAPH_NXT 169
    GRAPH_PRV 167
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L154
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L154' section='.text', address=[120]>]

<Symbol 169 section='.text'>
    ENDER False -- NXT 170
    CFG inflate@PLT
    CFG 170
    GRAPH_NXT 170
    GRAPH_NXT inflate@PLT
    GRAPH_PRV 168
'X64_AMOCO.InstructionDEAD'>[None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflate@PLT' bind='globl'>]

<Symbol 170 section='.text'>
    ENDER False -- NXT 171
    CFG .L155
    CFG 171
    GRAPH_NXT .L155
    GRAPH_NXT 171
    GRAPH_PRV 169
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $-3, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L155
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L155' section='.text', address=[119]>]

<Symbol 171 section='.text'>
    ENDER False -- NXT 172
    CFG inflateEnd@PLT
    CFG 172
    GRAPH_NXT 172
    GRAPH_NXT inflateEnd@PLT
    GRAPH_PRV 170
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateEnd@PLT' bind='globl'>]

<Symbol 172 section='.text'>
    ENDER False -- NXT 173
    CFG .L156
    CFG 173
    GRAPH_NXT .L156
    GRAPH_NXT 173
    GRAPH_PRV 171
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L156
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L156' section='.text', address=[118]>]

<Symbol 173 section='.text'>
    ENDER False -- NXT 174
    CFG __printf_chk@PLT
    CFG 174
    GRAPH_NXT 174
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV 172
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC38(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__printf_chk@PLT' bind='globl'>]

<Symbol 174 section='.text'>
    ENDER False -- NXT 175
    CFG .L157
    CFG 175
    GRAPH_NXT .L157
    GRAPH_NXT 175
    GRAPH_PRV 173
'X64_AMOCO.InstructionDEAD'>[None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L157
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L157' section='.text', address=[117]>]

<Symbol 175 section='.text'>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV 174
'X64_AMOCO.InstructionDEAD'>[None]addq      $136, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'rbp', 'rbx']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'rbp']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13']
	 STACK:{'%rbx': [-160]}:(-160, -152, -136, -128, -96, -88, -80, -40)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13']
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
'X64_AMOCO.InstructionDEAD'>[ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-168]}:(-168, -160, -144, -136, -104, -96, -88, -48)
	 dst=[None]

<Symbol '.L153' section='.text', address=[115]>
    ENDER False -- NXT .L152
    CFG .L152
    GRAPH_NXT .L152
    GRAPH_PRV 165
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC26(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)

<Symbol '.L152' section='.text', address=[116]>
    ENDER False -- NXT 176
    CFG __fprintf_chk@PLT
    CFG 176
    GRAPH_NXT 176
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L153
    GRAPH_PRV .L154
    GRAPH_PRV .L156
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' bind='globl'>]

<Symbol 176 section='.text'>
    ENDER False -- NXT 177
    CFG exit@PLT
    CFG 177
    GRAPH_NXT 177
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L152
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 177 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 176

<Symbol '.L157' section='.text', address=[117]>
    ENDER False -- NXT 178
    CFG __stack_chk_fail@PLT
    CFG 178
    GRAPH_NXT 178
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV 174
'X64_AMOCO.InstructionDEAD'>[sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' bind='globl'>]

<Symbol 178 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV .L157

<Symbol '.L156' section='.text', address=[118]>
    ENDER True -- NXT None
    CFG .L152
    GRAPH_NXT .L152
    GRAPH_PRV 172
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC28(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L152
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L152' section='.text', address=[116]>]

<Symbol '.L155' section='.text', address=[119]>
    ENDER False -- NXT 179
    CFG fwrite@PLT
    CFG 179
    GRAPH_NXT 179
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV 170
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC37(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $33, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 179 section='.text'>
    ENDER False -- NXT 180
    CFG exit@PLT
    CFG 180
    GRAPH_NXT 180
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L155
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 180 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 179

<Symbol '.L154' section='.text', address=[120]>
    ENDER True -- NXT None
    CFG .L152
    GRAPH_NXT .L152
    GRAPH_PRV 168
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC36(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L152
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L152' section='.text', address=[116]>]

<Symbol '.LC39' section='.rodata.str1.1', address=[121]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"deflateSetDictionary"

<Symbol 8 section='.text', type='padding', bind='p2align', address=[122]>
    ENDER False -- NXT test_dict_deflate
    CFG test_dict_deflate
    GRAPH_NXT test_dict_deflate
'plasmasm.constants.P2Align'>[None].p2align 4,,15

<Symbol 'test_dict_deflate' section='.text', type='function', bind='globl', address=[123], data='LFB:.LFB71'>
    ENDER False -- NXT 181
    CFG deflateInit_@PLT
    CFG 181
    GRAPH_NXT 181
    GRAPH_NXT deflateInit_@PLT
    GRAPH_PRV 237
    GRAPH_PRV 8
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC22(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['r12', 'rax', 'rbp', 'rcx', 'rdx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'rax', 'rbp', 'rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['r12', 'rax', 'rbp', 'rbx', 'rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdi, %r12
	 R['rdi', 'rip'] W['r12', 'rip']
	 D['r12', 'rax', 'rbp', 'rbx', 'rcx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %rbp
	 R['rip', 'rsi'] W['rbp', 'rip']
	 D['rax', 'rbp', 'rbx', 'rcx', 'rdi', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movl      $112, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rbx', 'rcx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]addq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rbx', 'rdi', 'rflags', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movl      $9, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rbx', 'rdi', 'rsi']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rax', 'rbx', 'rdi']
	 STACK:{'%rbx': [0]}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%rbx': [0]}:(80,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{'%rbx': [0]}:(80,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(80,)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol 'deflateInit_@PLT' bind='globl'>]

<Symbol 181 section='.text'>
    ENDER False -- NXT 182
    CFG .L170
    CFG 182
    GRAPH_NXT .L170
    GRAPH_NXT 182
    GRAPH_PRV test_dict_deflate
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L170
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L170' section='.text', address=[130]>]

<Symbol 182 section='.text'>
    ENDER False -- NXT 183
    CFG deflateSetDictionary@PLT
    CFG 183
    GRAPH_NXT 183
    GRAPH_NXT deflateSetDictionary@PLT
    GRAPH_PRV 181
'X64_AMOCO.InstructionDEAD'>[None]leaq      dictionary(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $6, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflateSetDictionary@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol 'deflateSetDictionary@PLT' bind='globl'>]

<Symbol 183 section='.text'>
    ENDER False -- NXT 184
    CFG .L171
    CFG 184
    GRAPH_NXT .L171
    GRAPH_NXT 184
    GRAPH_PRV 182
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L171
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L171' section='.text', address=[129]>]

<Symbol 184 section='.text'>
    ENDER False -- NXT .L161
    CFG .L161
    GRAPH_NXT .L161
    GRAPH_PRV 183
'X64_AMOCO.InstructionDEAD'>[None]movq      96(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax', 'rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r12, 24(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rdx', 'rflags']
	 STACK:{'%rbx': [0]}:(24, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %ebp, 32(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rdx', 'rflags']
	 STACK:{'%rbx': [0]}:(24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, (%rsp)
	 R['rip', 'rsi', 'rsp'] W['MEM', 'rip']
	 D['rcx', 'rdx', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %rdx
	 R['rip', 'rsi'] W['rdx', 'rip']
	 D['rcx', 'rdx', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, dictId(%rip)
	 R['rax', 'rip'] W['MEM', 'rip']
	 D['rcx', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)

<Symbol '.L161' section='.text', address=[124]>
    ENDER False -- NXT 185
    CFG .L161
    CFG 185
    GRAPH_NXT .L161
    GRAPH_NXT 185
    GRAPH_PRV .L161
    GRAPH_PRV 184
'X64_AMOCO.InstructionDEAD'>[None]movl      (%rdx), %ecx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]addq      $4, %rdx
	 R['rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leal      -16843009(%rcx), %eax
	 R['MEM', 'rax', 'rcx', 'rip'] W['rax', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]notl      %ecx
	 R['rcx', 'rip'] W['rcx', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]andl      %ecx, %eax
	 R['rax', 'rcx', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]andl      $-2139062144, %eax
	 R['rax', 'rip'] W['rax', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]je        .L161
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L161' section='.text', address=[124]>]

<Symbol 185 section='.text'>
    ENDER False -- NXT 186
    CFG deflate@PLT
    CFG 186
    GRAPH_NXT 186
    GRAPH_NXT deflate@PLT
    GRAPH_PRV .L161
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %ecx
	 R['rax', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]shrl      $16, %ecx
	 R['rcx', 'rflags', 'rip'] W['rcx', 'rflags', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]testl     $32896, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rdi', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]cmove     %ecx, %eax
	 R['rax', 'rcx', 'rflags', 'rip'] W['rax', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      2(%rdx), %rcx
	 R['MEM', 'rdx', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %edi
	 R['rax', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]cmove     %rcx, %rdx
	 R['rcx', 'rdx', 'rflags', 'rip'] W['rdx', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]addb      %al, %dil
	 R['rax', 'rdi', 'rip'] W['rdi', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]sbbq      $3, %rdx
	 R['rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]subq      %rsi, %rdx
	 R['rdx', 'rip', 'rsi'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $4, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]addl      $1, %edx
	 R['rdx', 'rip'] W['rdx', 'rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %edx, 8(%rsp)
	 R['rdx', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflate@PLT' bind='globl'>]

<Symbol 186 section='.text'>
    ENDER False -- NXT 187
    CFG .L172
    CFG 187
    GRAPH_NXT .L172
    GRAPH_NXT 187
    GRAPH_PRV 185
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L172
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L172' section='.text', address=[125]>]

<Symbol 187 section='.text'>
    ENDER False -- NXT 188
    CFG deflateEnd@PLT
    CFG 188
    GRAPH_NXT 188
    GRAPH_NXT deflateEnd@PLT
    GRAPH_PRV 186
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      deflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'deflateEnd@PLT' bind='globl'>]

<Symbol 188 section='.text'>
    ENDER False -- NXT 189
    CFG .L173
    CFG 189
    GRAPH_NXT .L173
    GRAPH_NXT 189
    GRAPH_PRV 187
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L173
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L173' section='.text', address=[126]>]

<Symbol 189 section='.text'>
    ENDER False -- NXT 190
    CFG .L174
    CFG 190
    GRAPH_NXT .L174
    GRAPH_NXT 190
    GRAPH_PRV 188
'X64_AMOCO.InstructionDEAD'>[None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L174
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L174' section='.text', address=[128]>]

<Symbol 190 section='.text'>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV 189
'X64_AMOCO.InstructionDEAD'>[None]subq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-128]}:(-128, -120, -104, -96, -64, -56, -48, -8)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'rbp', 'rbx']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'rbp']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>[ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
	 dst=[None]

<Symbol '.L172' section='.text', address=[125]>
    ENDER False -- NXT 191
    CFG fwrite@PLT
    CFG 191
    GRAPH_NXT 191
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV 186
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC32(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $35, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 191 section='.text'>
    ENDER False -- NXT 192
    CFG exit@PLT
    CFG 192
    GRAPH_NXT 192
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L172
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 192 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 191

<Symbol '.L173' section='.text', address=[126]>
    ENDER False -- NXT .L169
    CFG .L169
    GRAPH_NXT .L169
    GRAPH_PRV 188
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC25(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)

<Symbol '.L169' section='.text', address=[127]>
    ENDER False -- NXT 193
    CFG __fprintf_chk@PLT
    CFG 193
    GRAPH_NXT 193
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L170
    GRAPH_PRV .L171
    GRAPH_PRV .L173
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' bind='globl'>]

<Symbol 193 section='.text'>
    ENDER False -- NXT 194
    CFG exit@PLT
    CFG 194
    GRAPH_NXT 194
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L169
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 194 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 193

<Symbol '.L174' section='.text', address=[128]>
    ENDER False -- NXT 195
    CFG __stack_chk_fail@PLT
    CFG 195
    GRAPH_NXT 195
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV 189
'X64_AMOCO.InstructionDEAD'>[sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' bind='globl'>]

<Symbol 195 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV .L174

<Symbol '.L171' section='.text', address=[129]>
    ENDER True -- NXT None
    CFG .L169
    GRAPH_NXT .L169
    GRAPH_PRV 183
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC39(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L169
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L169' section='.text', address=[127]>]

<Symbol '.L170' section='.text', address=[130]>
    ENDER True -- NXT None
    CFG .L169
    GRAPH_NXT .L169
    GRAPH_PRV 181
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC23(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L169
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(64, 72, 80, 120)
	 dst=[<Symbol '.L169' section='.text', address=[127]>]

<Symbol '.LC40' section='.rodata.str1.1', address=[131]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"unexpected dictionary"

<Symbol '.LC41' section='.rodata.str1.1', address=[132]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"inflate with dict"

<Symbol '.LC42' section='.rodata.str1.1', address=[133]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"bad inflate with dict\n"

<Symbol '.LC43' section='.rodata.str1.1', address=[134]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"inflate with dictionary: %s\n"

<Symbol 9 section='.text', type='padding', bind='p2align', address=[135]>
    ENDER False -- NXT test_dict_inflate
    CFG test_dict_inflate
    GRAPH_NXT test_dict_inflate
'plasmasm.constants.P2Align'>[None].p2align 4,,15

<Symbol 'test_dict_inflate' section='.text', type='function', bind='globl', address=[136], data='LFB:.LFB72'>
    ENDER False -- NXT 196
    CFG inflateInit_@PLT
    CFG 196
    GRAPH_NXT 196
    GRAPH_NXT inflateInit_@PLT
    GRAPH_PRV 238
    GRAPH_PRV 9
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdx, %r12
	 R['rdx', 'rip'] W['r12', 'rip']
	 D['r12', 'rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rbp', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pxor      %xmm0, %xmm0
	 R['rip', 'xmm0'] W['rip', 'xmm0']
	 D['rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rcx, %rbp
	 R['rcx', 'rip'] W['rbp', 'rip']
	 D['rax', 'rbp', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]addq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rbx', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, 120(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:(120,)
'X64_AMOCO.InstructionDEAD'>[None]movl      %esi, 8(%rsp)
	 R['rip', 'rsi', 'rsp'] W['MEM', 'rip']
	 D['rax', 'rbx']
	 STACK:{}:(8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      $28542640608928103, %rax
	 R['rip'] W['rax', 'rip']
	 D['rax', 'rbx', 'rsi']
	 STACK:{}:(8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsp, %rbx
	 R['rip', 'rsp'] W['rbx', 'rip']
	 D['rbx', 'rsi']
	 STACK:{'%rbx': [0]}:(8, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC22(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, (%rdx)
	 R['rax', 'rdx', 'rip'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rdi, (%rsp)
	 R['rdi', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $112, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      $0, 80(%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movaps    %xmm0, 64(%rsp)
	 R['MEM', 'rip', 'rsp', 'xmm0'] W['MEM', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflateInit_@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateInit_@PLT' bind='globl'>]

<Symbol 196 section='.text'>
    ENDER False -- NXT 197
    CFG .L188
    CFG 197
    GRAPH_NXT .L188
    GRAPH_NXT 197
    GRAPH_PRV test_dict_inflate
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L188
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol '.L188' section='.text', address=[146]>]

<Symbol 197 section='.text'>
    ENDER True -- NXT None
    CFG .L180
    GRAPH_NXT .L180
    GRAPH_PRV 196
'X64_AMOCO.InstructionDEAD'>[None]movl      %ebp, 32(%rsp)
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r12, 24(%rsp)
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip']
	 D['rbp', 'rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      dictionary(%rip), %rbp
	 R['MEM', 'rip'] W['rbp', 'rip']
	 D['rbp', 'rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L180
	 R['rip'] W['rip']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L180' section='.text', address=[138]>]

<Symbol 198 section='.text'>
    ENDER False -- NXT .L178
    CFG .L178
    GRAPH_NXT .L178
'plasmasm.constants.P2Align'>[None].p2align 4,,10
'plasmasm.constants.P2Align'>[None].p2align 3

<Symbol '.L178' section='.text', address=[137]>
    ENDER False -- NXT 199
    CFG .L189
    CFG 199
    GRAPH_NXT .L189
    GRAPH_NXT 199
    GRAPH_PRV 198
    GRAPH_PRV 201
    GRAPH_PRV 204
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L189
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L189' section='.text', address=[140]>]

<Symbol 199 section='.text'>
    ENDER False -- NXT .L180
    CFG .L180
    GRAPH_NXT .L180
    GRAPH_PRV .L178

<Symbol '.L180' section='.text', address=[138]>
    ENDER False -- NXT 200
    CFG inflate@PLT
    CFG 200
    GRAPH_NXT 200
    GRAPH_NXT inflate@PLT
    GRAPH_PRV 197
    GRAPH_PRV 199
'X64_AMOCO.InstructionDEAD'>[None]xorl      %esi, %esi
	 R['rflags', 'rip'] W['rflags', 'rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflate@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflate@PLT' bind='globl'>]

<Symbol 200 section='.text'>
    ENDER False -- NXT 201
    CFG .L177
    CFG 201
    GRAPH_NXT .L177
    GRAPH_NXT 201
    GRAPH_PRV .L180
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $1, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]je        .L177
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L177' section='.text', address=[139]>]

<Symbol 201 section='.text'>
    ENDER False -- NXT 202
    CFG .L178
    CFG 202
    GRAPH_NXT .L178
    GRAPH_NXT 202
    GRAPH_PRV 200
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $2, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L178
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L178' section='.text', address=[137]>]

<Symbol 202 section='.text'>
    ENDER False -- NXT 203
    CFG .L190
    CFG 203
    GRAPH_NXT .L190
    GRAPH_NXT 203
    GRAPH_PRV 201
'X64_AMOCO.InstructionDEAD'>[None]movq      dictId(%rip), %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax', 'rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]cmpq      %rax, 96(%rsp)
	 R['MEM', 'rax', 'rip', 'rsp'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L190
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L190' section='.text', address=[142]>]

<Symbol 203 section='.text'>
    ENDER False -- NXT 204
    CFG inflateSetDictionary@PLT
    CFG 204
    GRAPH_NXT 204
    GRAPH_NXT inflateSetDictionary@PLT
    GRAPH_PRV 202
'X64_AMOCO.InstructionDEAD'>[None]movl      $6, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, %rsi
	 R['rbp', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflateSetDictionary@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateSetDictionary@PLT' bind='globl'>]

<Symbol 204 section='.text'>
    ENDER True -- NXT None
    CFG .L178
    GRAPH_NXT .L178
    GRAPH_PRV 203
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L178
	 R['rip'] W['rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L178' section='.text', address=[137]>]

<Symbol 205 section='.text'>
    ENDER False -- NXT .L177
    CFG .L177
    GRAPH_NXT .L177
'plasmasm.constants.P2Align'>[None].p2align 4,,10
'plasmasm.constants.P2Align'>[None].p2align 3

<Symbol '.L177' section='.text', address=[139]>
    ENDER False -- NXT 206
    CFG inflateEnd@PLT
    CFG 206
    GRAPH_NXT 206
    GRAPH_NXT inflateEnd@PLT
    GRAPH_PRV 200
    GRAPH_PRV 205
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      inflateEnd@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'inflateEnd@PLT' bind='globl'>]

<Symbol 206 section='.text'>
    ENDER False -- NXT 207
    CFG .L191
    CFG 207
    GRAPH_NXT .L191
    GRAPH_NXT 207
    GRAPH_PRV .L177
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L191
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L191' section='.text', address=[143]>]

<Symbol 207 section='.text'>
    ENDER False -- NXT 208
    CFG strcmp@PLT
    CFG 208
    GRAPH_NXT 208
    GRAPH_NXT strcmp@PLT
    GRAPH_PRV 206
'X64_AMOCO.InstructionDEAD'>[None]leaq      hello(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r12, %rdi
	 R['r12', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      strcmp@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'strcmp@PLT' bind='globl'>]

<Symbol 208 section='.text'>
    ENDER False -- NXT 209
    CFG .L192
    CFG 209
    GRAPH_NXT .L192
    GRAPH_NXT 209
    GRAPH_PRV 207
'X64_AMOCO.InstructionDEAD'>[None]testl     %eax, %eax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L192
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L192' section='.text', address=[144]>]

<Symbol 209 section='.text'>
    ENDER False -- NXT 210
    CFG __printf_chk@PLT
    CFG 210
    GRAPH_NXT 210
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV 208
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC43(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r12, %rdx
	 R['r12', 'rip'] W['rdx', 'rip']
	 D['rdi', 'rdx']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__printf_chk@PLT' bind='globl'>]

<Symbol 210 section='.text'>
    ENDER False -- NXT 211
    CFG .L193
    CFG 211
    GRAPH_NXT .L193
    GRAPH_NXT 211
    GRAPH_PRV 209
'X64_AMOCO.InstructionDEAD'>[None]movq      120(%rsp), %rax
	 R['MEM', 'rip', 'rsp'] W['rax', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorq      %fs:40, %rax
	 R['MEM', 'rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L193
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L193' section='.text', address=[145]>]

<Symbol 211 section='.text'>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV 210
'X64_AMOCO.InstructionDEAD'>[None]subq      $-128, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'rbp', 'rbx', 'rflags']
	 STACK:{'%rbx': [-128]}:(-128, -120, -104, -96, -64, -56, -48, -8)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'rbp', 'rbx']
	 STACK:{'%rbx': [-136]}:(-136, -128, -112, -104, -72, -64, -56, -16)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'rbp']
	 STACK:{'%rbx': [-144]}:(-144, -136, -120, -112, -80, -72, -64, -24)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12']
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
'X64_AMOCO.InstructionDEAD'>[ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [-152]}:(-152, -144, -128, -120, -88, -80, -72, -32)
	 dst=[None]

<Symbol '.L189' section='.text', address=[140]>
    ENDER False -- NXT .L187
    CFG .L187
    GRAPH_NXT .L187
    GRAPH_PRV .L178
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC41(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)

<Symbol '.L187' section='.text', address=[141]>
    ENDER False -- NXT 212
    CFG __fprintf_chk@PLT
    CFG 212
    GRAPH_NXT 212
    GRAPH_NXT __fprintf_chk@PLT
    GRAPH_PRV .L188
    GRAPH_PRV .L189
    GRAPH_PRV .L191
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC1(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      __fprintf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__fprintf_chk@PLT' bind='globl'>]

<Symbol 212 section='.text'>
    ENDER False -- NXT 213
    CFG exit@PLT
    CFG 213
    GRAPH_NXT 213
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L187
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 213 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 212

<Symbol '.L190' section='.text', address=[142]>
    ENDER False -- NXT 214
    CFG fwrite@PLT
    CFG 214
    GRAPH_NXT 214
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV 202
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC40(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $21, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 214 section='.text'>
    ENDER False -- NXT 215
    CFG exit@PLT
    CFG 215
    GRAPH_NXT 215
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L190
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 215 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 214

<Symbol '.L191' section='.text', address=[143]>
    ENDER True -- NXT None
    CFG .L187
    GRAPH_NXT .L187
    GRAPH_PRV 206
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC28(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L187
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '.L187' section='.text', address=[141]>]

<Symbol '.L192' section='.text', address=[144]>
    ENDER False -- NXT 216
    CFG fwrite@PLT
    CFG 216
    GRAPH_NXT 216
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV 208
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC42(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $22, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 216 section='.text'>
    ENDER False -- NXT 217
    CFG exit@PLT
    CFG 217
    GRAPH_NXT 217
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L192
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 217 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV 216

<Symbol '.L193' section='.text', address=[145]>
    ENDER False -- NXT 218
    CFG __stack_chk_fail@PLT
    CFG 218
    GRAPH_NXT 218
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV 210
'X64_AMOCO.InstructionDEAD'>[sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{'%rbx': [0]}:(0, 8, 24, 32, 64, 72, 80, 120)
	 dst=[<Symbol '__stack_chk_fail@PLT' bind='globl'>]

<Symbol 218 section='.text'>
    ENDER True -- NXT None
    GRAPH_PRV .L193

<Symbol '.L188' section='.text', address=[146]>
    ENDER True -- NXT None
    CFG .L187
    GRAPH_NXT .L187
    GRAPH_PRV 196
'X64_AMOCO.InstructionDEAD'>[None]movl      %eax, %r8d
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC26(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L187
	 R['rip'] W['rip']
	 D['rax', 'rdi', 'rdx', 'rsi']
	 STACK:{'%rbx': [0]}:(0, 8, 64, 72, 80, 120)
	 dst=[<Symbol '.L187' section='.text', address=[141]>]

<Symbol '.LC44' section='.rodata.str1.1', address=[147]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"foo.gz"

<Symbol '.LC45' section='.rodata.str1.1', address=[148]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"incompatible zlib version\n"

<Symbol '.LC46' section='.rodata.str1.8', align=8, address=[149]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"warning: different zlib version\n"

<Symbol '.LC47' section='.rodata.str1.8', align=8, address=[150]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"zlib version %s = 0x%04x, compile flags = 0x%lx\n"

<Symbol '.LC48' section='.rodata.str1.1', address=[151]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"out of memory"

<Symbol 10 section='.text.startup', type='padding', bind='p2align', address=[152]>
    ENDER False -- NXT main
    CFG main
    GRAPH_NXT main
'plasmasm.constants.P2Align'>[None].p2align 4,,15

<Symbol 'main' section='.text.startup', type='function', bind='globl', address=[153], data='LFB:.LFB73'>
    ENDER False -- NXT 219
    CFG zlibVersion@PLT
    CFG 219
    GRAPH_NXT 219
    GRAPH_NXT zlibVersion@PLT
    GRAPH_PRV 10
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r14
	 R['r14', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r13
	 R['r13', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsi, %r13
	 R['rip', 'rsi'] W['r13', 'rip']
	 D['r13', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %r12
	 R['r12', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbp
	 R['rbp', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['r12', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movl      %edi, %r12d
	 R['rdi', 'rip'] W['r12', 'rip']
	 D['r12', 'rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]pushq     %rbx
	 R['rbx', 'rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]subq      $16, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %fs:40, %rax
	 R['MEM', 'rip'] W['rax', 'rip']
	 D['rax']
	 STACK:{}:()
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, 8(%rsp)
	 R['rax', 'rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(8,)
'X64_AMOCO.InstructionDEAD'>[None]movq      $40000, (%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D[]
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      zlibVersion@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'zlibVersion@PLT' bind='globl'>]

<Symbol 219 section='.text.startup'>
    ENDER False -- NXT 220
    CFG .L207
    CFG 220
    GRAPH_NXT .L207
    GRAPH_NXT 220
    GRAPH_PRV main
'X64_AMOCO.InstructionDEAD'>[None]cmpb      $49, (%rax)
	 R['MEM', 'rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L207
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L207' section='.text.startup', address=[157]>]

<Symbol 220 section='.text.startup'>
    ENDER False -- NXT 221
    CFG zlibVersion@PLT
    CFG 221
    GRAPH_NXT 221
    GRAPH_NXT zlibVersion@PLT
    GRAPH_PRV 219
'X64_AMOCO.InstructionDEAD'>[sub]call      zlibVersion@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'zlibVersion@PLT' bind='globl'>]

<Symbol 221 section='.text.startup'>
    ENDER False -- NXT 222
    CFG .L208
    CFG 222
    GRAPH_NXT .L208
    GRAPH_NXT 222
    GRAPH_PRV 220
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC22(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rcx', 'rdi', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %rsi
	 R['rax', 'rip'] W['rip', 'rsi']
	 D['rcx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $6, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rcx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]repz cmpsb     
	 R['MEM', 'rcx', 'rdi', 'rflags', 'rip', 'rsi'] W['rcx', 'rdi', 'rflags', 'rip', 'rsi']
	 D[]
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]seta      %al
	 R['rax', 'rflags', 'rip'] W['rax', 'rip']
	 D[]
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]sbbb      $0, %al
	 R['rax', 'rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D[]
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]testb     %al, %al
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L208
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L208' section='.text.startup', address=[156]>]

<Symbol 222 section='.text.startup'>
    ENDER False -- NXT .L196
    CFG .L196
    GRAPH_NXT .L196
    GRAPH_PRV 221

<Symbol '.L196' section='.text.startup', address=[154]>
    ENDER False -- NXT 223
    CFG zlibCompileFlags@PLT
    CFG 223
    GRAPH_NXT 223
    GRAPH_NXT zlibCompileFlags@PLT
    GRAPH_PRV 222
    GRAPH_PRV 243
'X64_AMOCO.InstructionDEAD'>[sub]call      zlibCompileFlags@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'zlibCompileFlags@PLT' bind='globl'>]

<Symbol 223 section='.text.startup'>
    ENDER False -- NXT 224
    CFG __printf_chk@PLT
    CFG 224
    GRAPH_NXT 224
    GRAPH_NXT __printf_chk@PLT
    GRAPH_PRV .L196
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC22(%rip), %rdx
	 R['MEM', 'rip'] W['rdx', 'rip']
	 D['r8', 'rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC47(%rip), %rsi
	 R['MEM', 'rip'] W['rip', 'rsi']
	 D['r8', 'rcx', 'rdi', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %r8
	 R['rax', 'rip'] W['r8', 'rip']
	 D['r8', 'rcx', 'rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $4736, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rax', 'rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      __printf_chk@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '__printf_chk@PLT' bind='globl'>]

<Symbol 224 section='.text.startup'>
    ENDER False -- NXT 225
    CFG calloc@PLT
    CFG 225
    GRAPH_NXT 225
    GRAPH_NXT calloc@PLT
    GRAPH_PRV 223
'X64_AMOCO.InstructionDEAD'>[None]movq      (%rsp), %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip']
	 D['r14', 'rdi', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rdi', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      %r14d, %edi
	 R['r14', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      calloc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'calloc@PLT' bind='globl'>]

<Symbol 225 section='.text.startup'>
    ENDER False -- NXT 226
    CFG calloc@PLT
    CFG 226
    GRAPH_NXT 226
    GRAPH_NXT calloc@PLT
    GRAPH_PRV 224
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rbx', 'rdi', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %rbx
	 R['rax', 'rip'] W['rbx', 'rip']
	 D['rbx', 'rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $40000, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      calloc@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'calloc@PLT' bind='globl'>]

<Symbol 226 section='.text.startup'>
    ENDER False -- NXT 227
    CFG .L202
    CFG 227
    GRAPH_NXT .L202
    GRAPH_NXT 227
    GRAPH_PRV 225
'X64_AMOCO.InstructionDEAD'>[None]testq     %rbx, %rbx
	 R['rbx', 'rip'] W['rflags', 'rip']
	 D['rbp', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %rbp
	 R['rax', 'rip'] W['rbp', 'rip']
	 D['rbp']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[jcc]je        .L202
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L202' section='.text.startup', address=[159]>]

<Symbol 227 section='.text.startup'>
    ENDER False -- NXT 228
    CFG .L202
    CFG 228
    GRAPH_NXT .L202
    GRAPH_NXT 228
    GRAPH_PRV 226
'X64_AMOCO.InstructionDEAD'>[None]testq     %rax, %rax
	 R['rax', 'rip'] W['rflags', 'rip']
	 D['rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[jcc]je        .L202
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L202' section='.text.startup', address=[159]>]

<Symbol 228 section='.text.startup'>
    ENDER False -- NXT 229
    CFG test_compress
    CFG 229
    GRAPH_NXT 229
    GRAPH_NXT test_compress
    GRAPH_PRV 227
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $40000, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rax, %rdx
	 R['rax', 'rip'] W['rdx', 'rip']
	 D['rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %r14, %rsi
	 R['r14', 'rip'] W['rip', 'rsi']
	 D['rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      test_compress
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_compress' section='.text', type='function', bind='globl', address=[6], data='LFB:.LFB63'>]

<Symbol 229 section='.text.startup'>
    ENDER False -- NXT 230
    CFG .L199
    CFG 230
    GRAPH_NXT .L199
    GRAPH_NXT 230
    GRAPH_PRV 228
'X64_AMOCO.InstructionDEAD'>[None]cmpl      $1, %r12d
	 R['r12', 'rip'] W['rflags', 'rip']
	 D['rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC44(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[jcc]jle       .L199
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L199' section='.text.startup', address=[155]>]

<Symbol 230 section='.text.startup'>
    ENDER False -- NXT .L199
    CFG .L199
    GRAPH_NXT .L199
    GRAPH_PRV 229
'X64_AMOCO.InstructionDEAD'>[None]movq      8(%r13), %rdi
	 R['MEM', 'r13', 'rip'] W['rdi', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)

<Symbol '.L199' section='.text.startup', address=[155]>
    ENDER False -- NXT 231
    CFG test_gzio
    CFG 231
    GRAPH_NXT 231
    GRAPH_NXT test_gzio
    GRAPH_PRV 229
    GRAPH_PRV 230
'X64_AMOCO.InstructionDEAD'>[None]movl      $40000, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rax', 'rcx', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, %rsi
	 R['rbp', 'rip'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      test_gzio
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_gzio' section='.text', type='function', bind='globl', address=[30], data='LFB:.LFB64'>]

<Symbol 231 section='.text.startup'>
    ENDER False -- NXT 232
    CFG test_deflate
    CFG 232
    GRAPH_NXT 232
    GRAPH_NXT test_deflate
    GRAPH_PRV .L199
'X64_AMOCO.InstructionDEAD'>[None]movq      (%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      test_deflate
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_deflate' section='.text', type='function', bind='globl', address=[51], data='LFB:.LFB65'>]

<Symbol 232 section='.text.startup'>
    ENDER False -- NXT 233
    CFG test_inflate
    CFG 233
    GRAPH_NXT 233
    GRAPH_NXT test_inflate
    GRAPH_PRV 231
'X64_AMOCO.InstructionDEAD'>[None]movq      (%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $40000, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      test_inflate
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_inflate' section='.text', type='function', bind='globl', address=[68], data='LFB:.LFB66'>]

<Symbol 233 section='.text.startup'>
    ENDER False -- NXT 234
    CFG test_large_deflate
    CFG 234
    GRAPH_NXT 234
    GRAPH_NXT test_large_deflate
    GRAPH_PRV 232
'X64_AMOCO.InstructionDEAD'>[None]movq      (%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $40000, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      test_large_deflate
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_large_deflate' section='.text', type='function', bind='globl', address=[81], data='LFB:.LFB67'>]

<Symbol 234 section='.text.startup'>
    ENDER False -- NXT 235
    CFG test_large_inflate
    CFG 235
    GRAPH_NXT 235
    GRAPH_NXT test_large_inflate
    GRAPH_PRV 233
'X64_AMOCO.InstructionDEAD'>[None]movq      (%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $40000, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      test_large_inflate
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_large_inflate' section='.text', type='function', bind='globl', address=[93], data='LFB:.LFB68'>]

<Symbol 235 section='.text.startup'>
    ENDER False -- NXT 236
    CFG test_flush
    CFG 236
    GRAPH_NXT 236
    GRAPH_NXT test_flush
    GRAPH_PRV 234
'X64_AMOCO.InstructionDEAD'>[None]movq      %rsp, %rsi
	 R['rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{'%rsi': [0]}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      test_flush
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{'%rsi': [0]}:(0, 8)
	 dst=[<Symbol 'test_flush' section='.text', type='function', bind='globl', address=[103], data='LFB:.LFB69'>]

<Symbol 236 section='.text.startup'>
    ENDER False -- NXT 237
    CFG test_sync
    CFG 237
    GRAPH_NXT 237
    GRAPH_NXT test_sync
    GRAPH_PRV 235
'X64_AMOCO.InstructionDEAD'>[None]movq      (%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $40000, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rax', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      test_sync
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_sync' section='.text', type='function', bind='globl', address=[114], data='LFB:.LFB70'>]

<Symbol 237 section='.text.startup'>
    ENDER False -- NXT 238
    CFG test_dict_deflate
    CFG 238
    GRAPH_NXT 238
    GRAPH_NXT test_dict_deflate
    GRAPH_PRV 236
'X64_AMOCO.InstructionDEAD'>[None]movl      $40000, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      $40000, (%rsp)
	 R['rip', 'rsp'] W['MEM', 'rip']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      test_dict_deflate
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rcx', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_dict_deflate' section='.text', type='function', bind='globl', address=[123], data='LFB:.LFB71'>]

<Symbol 238 section='.text.startup'>
    ENDER False -- NXT 239
    CFG test_dict_inflate
    CFG 239
    GRAPH_NXT 239
    GRAPH_NXT test_dict_inflate
    GRAPH_PRV 237
'X64_AMOCO.InstructionDEAD'>[None]movq      (%rsp), %rsi
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsi']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, %rdx
	 R['rbp', 'rip'] W['rdx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rdx', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $40000, %ecx
	 R['rip'] W['rcx', 'rip']
	 D['rax', 'rcx', 'rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rax', 'rdi', 'rflags']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      test_dict_inflate
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D['rax', 'rflags']
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'test_dict_inflate' section='.text', type='function', bind='globl', address=[136], data='LFB:.LFB72'>]

<Symbol 239 section='.text.startup'>
    ENDER False -- NXT 240
    CFG free@PLT
    CFG 240
    GRAPH_NXT 240
    GRAPH_NXT free@PLT
    GRAPH_PRV 238
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbx, %rdi
	 R['rbx', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      free@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'free@PLT' bind='globl'>]

<Symbol 240 section='.text.startup'>
    ENDER False -- NXT 241
    CFG free@PLT
    CFG 241
    GRAPH_NXT 241
    GRAPH_NXT free@PLT
    GRAPH_PRV 239
'X64_AMOCO.InstructionDEAD'>[None]movq      %rbp, %rdi
	 R['rbp', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      free@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'free@PLT' bind='globl'>]

<Symbol 241 section='.text.startup'>
    ENDER False -- NXT 242
    CFG .L209
    CFG 242
    GRAPH_NXT .L209
    GRAPH_NXT 242
    GRAPH_PRV 240
'X64_AMOCO.InstructionDEAD'>[None]xorl      %eax, %eax
	 R['rflags', 'rip'] W['rax', 'rflags', 'rip']
	 D['rax', 'rdx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movq      8(%rsp), %rdx
	 R['MEM', 'rip', 'rsp'] W['rdx', 'rip']
	 D['rdx']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]xorq      %fs:40, %rdx
	 R['MEM', 'rdx', 'rflags', 'rip'] W['rdx', 'rflags', 'rip']
	 D[]
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[jcc]jne       .L209
	 R['rflags', 'rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L209' section='.text.startup', address=[158]>]

<Symbol 242 section='.text.startup'>
    ENDER True -- NXT None
    CFG None
    GRAPH_PRV 241
'X64_AMOCO.InstructionDEAD'>[None]addq      $16, %rsp
	 R['rip', 'rsp'] W['rflags', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx', 'rflags']
	 STACK:{}:(-16, -8)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbx
	 R['MEM', 'rip', 'rsp'] W['rbx', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp', 'rbx']
	 STACK:{}:(-24, -16)
'X64_AMOCO.InstructionDEAD'>[None]popq      %rbp
	 R['MEM', 'rip', 'rsp'] W['rbp', 'rip', 'rsp']
	 D['r12', 'r13', 'r14', 'rbp']
	 STACK:{}:(-32, -24)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r12
	 R['MEM', 'rip', 'rsp'] W['r12', 'rip', 'rsp']
	 D['r12', 'r13', 'r14']
	 STACK:{}:(-40, -32)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r13
	 R['MEM', 'rip', 'rsp'] W['r13', 'rip', 'rsp']
	 D['r13', 'r14']
	 STACK:{}:(-48, -40)
'X64_AMOCO.InstructionDEAD'>[None]popq      %r14
	 R['MEM', 'rip', 'rsp'] W['r14', 'rip', 'rsp']
	 D['r14']
	 STACK:{}:(-56, -48)
'X64_AMOCO.InstructionDEAD'>[ret]ret       
	 R['MEM', 'rip', 'rsp'] W['rip', 'rsp']
	 D[]
	 STACK:{}:(-56, -48)
	 dst=[None]

<Symbol '.L208' section='.text.startup', address=[156]>
    ENDER False -- NXT 243
    CFG fwrite@PLT
    CFG 243
    GRAPH_NXT 243
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV 221
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC46(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $32, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 243 section='.text.startup'>
    ENDER True -- NXT None
    CFG .L196
    GRAPH_NXT .L196
    GRAPH_PRV .L208
'X64_AMOCO.InstructionDEAD'>[jmp]jmp       .L196
	 R['rip'] W['rip']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '.L196' section='.text.startup', address=[154]>]

<Symbol '.L207' section='.text.startup', address=[157]>
    ENDER False -- NXT 244
    CFG fwrite@PLT
    CFG 244
    GRAPH_NXT 244
    GRAPH_NXT fwrite@PLT
    GRAPH_PRV 219
'X64_AMOCO.InstructionDEAD'>[None]movq      stderr(%rip), %rcx
	 R['MEM', 'rip'] W['rcx', 'rip']
	 D['rcx', 'rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC45(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi', 'rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $26, %edx
	 R['rip'] W['rdx', 'rip']
	 D['rdx', 'rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %esi
	 R['rip'] W['rip', 'rsi']
	 D['rsi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      fwrite@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'fwrite@PLT' bind='globl'>]

<Symbol 244 section='.text.startup'>
    ENDER False -- NXT 245
    CFG exit@PLT
    CFG 245
    GRAPH_NXT 245
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L207
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 245 section='.text.startup'>
    ENDER True -- NXT None
    GRAPH_PRV 244

<Symbol '.L209' section='.text.startup', address=[158]>
    ENDER False -- NXT 246
    CFG __stack_chk_fail@PLT
    CFG 246
    GRAPH_NXT 246
    GRAPH_NXT __stack_chk_fail@PLT
    GRAPH_PRV 241
'X64_AMOCO.InstructionDEAD'>[sub]call      __stack_chk_fail@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol '__stack_chk_fail@PLT' bind='globl'>]

<Symbol 246 section='.text.startup'>
    ENDER True -- NXT None
    GRAPH_PRV .L209

<Symbol '.L202' section='.text.startup', address=[159]>
    ENDER False -- NXT 247
    CFG puts@PLT
    CFG 247
    GRAPH_NXT 247
    GRAPH_NXT puts@PLT
    GRAPH_PRV 226
    GRAPH_PRV 227
'X64_AMOCO.InstructionDEAD'>[None]leaq      .LC48(%rip), %rdi
	 R['MEM', 'rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      puts@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'puts@PLT' bind='globl'>]

<Symbol 247 section='.text.startup'>
    ENDER False -- NXT 248
    CFG exit@PLT
    CFG 248
    GRAPH_NXT 248
    GRAPH_NXT exit@PLT
    GRAPH_PRV .L202
'X64_AMOCO.InstructionDEAD'>[None]movl      $1, %edi
	 R['rip'] W['rdi', 'rip']
	 D['rdi']
	 STACK:{}:(0, 8)
'X64_AMOCO.InstructionDEAD'>[sub]call      exit@PLT
	 R['rip', 'rsp'] W['MEM', 'rip', 'rsp']
	 D[]
	 STACK:{}:(0, 8)
	 dst=[<Symbol 'exit@PLT' bind='globl'>]

<Symbol 248 section='.text.startup'>
    ENDER True -- NXT None
    GRAPH_PRV 247

<Symbol 'dictId' section='COM', bind='globl', align=8, size=8, address=[160]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantZero'>.zero	8

<Symbol 'dictionary' section='.rodata', type='object', bind='globl', address=[161]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"hello"

<Symbol 'hello' section='.data', type='object', bind='globl', align=8, address=[162]>
    ENDER False -- NXT None
'plasmasm.constants.ConstantStr'>.string	"hello, hello!"

<Symbol '__fprintf_chk@PLT' bind='globl'>
    GRAPH_PRV .L10
    GRAPH_PRV .L105
    GRAPH_PRV .L122
    GRAPH_PRV .L127
    GRAPH_PRV .L140
    GRAPH_PRV .L152
    GRAPH_PRV .L169
    GRAPH_PRV .L187
    GRAPH_PRV .L37
    GRAPH_PRV .L65
    GRAPH_PRV .L88
    GRAPH_PRV 60

<Symbol '__printf_chk@PLT' bind='globl'>
    GRAPH_PRV 105
    GRAPH_PRV 17
    GRAPH_PRV 173
    GRAPH_PRV 209
    GRAPH_PRV 223
    GRAPH_PRV 38
    GRAPH_PRV 52

<Symbol '__stack_chk_fail@PLT' bind='globl'>
    GRAPH_PRV .L111
    GRAPH_PRV .L128
    GRAPH_PRV .L144
    GRAPH_PRV .L157
    GRAPH_PRV .L174
    GRAPH_PRV .L193
    GRAPH_PRV .L209
    GRAPH_PRV .L46
    GRAPH_PRV .L71
    GRAPH_PRV .L94

<Symbol 'calloc@PLT' bind='globl'>
    GRAPH_PRV 224
    GRAPH_PRV 225

<Symbol 'compress@PLT' bind='globl'>
    GRAPH_PRV 11

<Symbol 'deflate@PLT' bind='globl'>
    GRAPH_PRV .L55
    GRAPH_PRV 114
    GRAPH_PRV 118
    GRAPH_PRV 121
    GRAPH_PRV 123
    GRAPH_PRV 154
    GRAPH_PRV 156
    GRAPH_PRV 185
    GRAPH_PRV 80

<Symbol 'deflateEnd@PLT' bind='globl'>
    GRAPH_PRV 125
    GRAPH_PRV 158
    GRAPH_PRV 187
    GRAPH_PRV 87

<Symbol 'deflateInit_@PLT' bind='globl'>
    GRAPH_PRV 152
    GRAPH_PRV 76
    GRAPH_PRV test_dict_deflate
    GRAPH_PRV test_large_deflate

<Symbol 'deflateParams@PLT' bind='globl'>
    GRAPH_PRV 117
    GRAPH_PRV 120

<Symbol 'deflateSetDictionary@PLT' bind='globl'>
    GRAPH_PRV 182

<Symbol 'example.c' bind='file'>

<Symbol 'exit@PLT' bind='globl'>
    GRAPH_PRV 108
    GRAPH_PRV 111
    GRAPH_PRV 129
    GRAPH_PRV 132
    GRAPH_PRV 134
    GRAPH_PRV 147
    GRAPH_PRV 150
    GRAPH_PRV 162
    GRAPH_PRV 176
    GRAPH_PRV 179
    GRAPH_PRV 19
    GRAPH_PRV 191
    GRAPH_PRV 193
    GRAPH_PRV 21
    GRAPH_PRV 212
    GRAPH_PRV 214
    GRAPH_PRV 216
    GRAPH_PRV 244
    GRAPH_PRV 247
    GRAPH_PRV 58
    GRAPH_PRV 61
    GRAPH_PRV 64
    GRAPH_PRV 66
    GRAPH_PRV 69
    GRAPH_PRV 73
    GRAPH_PRV 91

<Symbol 'free@PLT' bind='globl'>
    GRAPH_PRV 239
    GRAPH_PRV 240

<Symbol 'fwrite@PLT' bind='globl'>
    GRAPH_PRV .L108
    GRAPH_PRV .L109
    GRAPH_PRV .L14
    GRAPH_PRV .L155
    GRAPH_PRV .L172
    GRAPH_PRV .L190
    GRAPH_PRV .L192
    GRAPH_PRV .L207
    GRAPH_PRV .L208
    GRAPH_PRV .L36
    GRAPH_PRV .L42
    GRAPH_PRV .L43
    GRAPH_PRV .L45
    GRAPH_PRV .L93

<Symbol 'gzclose@PLT' bind='globl'>
    GRAPH_PRV 31
    GRAPH_PRV 53

<Symbol 'gzerror@PLT' bind='globl'>
    GRAPH_PRV .L38
    GRAPH_PRV .L39
    GRAPH_PRV .L40
    GRAPH_PRV .L44

<Symbol 'gzgetc@PLT' bind='globl'>
    GRAPH_PRV .L26

<Symbol 'gzgets@PLT' bind='globl'>
    GRAPH_PRV 47

<Symbol 'gzopen@PLT' bind='globl'>
    GRAPH_PRV 23
    GRAPH_PRV 32

<Symbol 'gzprintf@PLT' bind='globl'>
    GRAPH_PRV 28

<Symbol 'gzputc@PLT' bind='globl'>
    GRAPH_PRV 25

<Symbol 'gzputs@PLT' bind='globl'>
    GRAPH_PRV 26

<Symbol 'gzread@PLT' bind='globl'>
    GRAPH_PRV 34

<Symbol 'gzseek@PLT' bind='globl'>
    GRAPH_PRV 30
    GRAPH_PRV 39

<Symbol 'gztell@PLT' bind='globl'>
    GRAPH_PRV .L25
    GRAPH_PRV 41

<Symbol 'gzungetc@PLT' bind='globl'>
    GRAPH_PRV 45

<Symbol 'inflate@PLT' bind='globl'>
    GRAPH_PRV .L115
    GRAPH_PRV .L180
    GRAPH_PRV 166
    GRAPH_PRV 169
    GRAPH_PRV 97

<Symbol 'inflateEnd@PLT' bind='globl'>
    GRAPH_PRV .L177
    GRAPH_PRV .L77
    GRAPH_PRV 141
    GRAPH_PRV 171

<Symbol 'inflateInit_@PLT' bind='globl'>
    GRAPH_PRV test_dict_inflate
    GRAPH_PRV test_inflate
    GRAPH_PRV test_large_inflate
    GRAPH_PRV test_sync

<Symbol 'inflateSetDictionary@PLT' bind='globl'>
    GRAPH_PRV 203

<Symbol 'inflateSync@PLT' bind='globl'>
    GRAPH_PRV 167

<Symbol 'puts@PLT' bind='globl'>
    GRAPH_PRV .L202
    GRAPH_PRV 144

<Symbol 'strcmp@PLT' bind='globl'>
    GRAPH_PRV 103
    GRAPH_PRV 15
    GRAPH_PRV 207
    GRAPH_PRV 36
    GRAPH_PRV 50

<Symbol 'strlen@PLT' bind='globl'>
    GRAPH_PRV 48

<Symbol 'uncompress@PLT' bind='globl'>
    GRAPH_PRV 13

<Symbol 'zlibCompileFlags@PLT' bind='globl'>
    GRAPH_PRV .L196

<Symbol 'zlibVersion@PLT' bind='globl'>
    GRAPH_PRV 220
    GRAPH_PRV main

('.note.GNU-stack', '.note.GNU-stack,"",@progbits')
('.rodata.str1.1', '.rodata.str1.1,"aMS",@progbits,1')
('.rodata.str1.8', '.rodata.str1.8,"aMS",@progbits,1')
('.text.startup', '.text.startup,"ax",@progbits')
ident:'GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0',format:'att_syntax binutils',container:'ELF',compiler:'gcc',cfi:'yes'
